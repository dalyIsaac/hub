{"version":3,"sources":["Routing.ts","Search/SearchBar.tsx","Common.ts","AppBar.tsx","subject/model/Order.ts","subject/model/Create.ts","subject/model/SetSeparateComplete.ts","AppCommandBar/Common.ts","subject/model/SetFieldsArray.ts","subject/model/SetFieldsDesc.ts","AppCommandBar/SortButton.tsx","AppCommandBar/AppCommandBar.tsx","subject/model/Subject.ts","subject/components/Name.tsx","subject/components/SimpleListView.tsx","subject/model/Name.ts","subject/model/Description.ts","subject/model/Completed.ts","subject/model/Delete.ts","subject/model/Date.ts","subject/model/AppendChild.ts","subject/components/ListItem/ListItemBase.tsx","subject/components/ListItem/AppendChildrenListItem.tsx","subject/components/AppendChildren.tsx","subject/model/RemoveChild.ts","subject/components/ListItem/SubjectListItem.tsx","subject/components/Subject.tsx","subject/components/GridView.tsx","subject/components/ListView.tsx","subject/components/ResponsiveGridView.tsx","Search/SearchResults.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","Reducer.ts","subject/model/Transform.ts","index.tsx"],"names":["subjectBase","gotoSubject","display","id","url","concat","qs","stringify","getDisplay","location","query","parse","search","isUndefined","Array","isArray","searchBase","gotoSearch","param","getSearchMatch","match","params","toLowerCase","error","Error","Paths","base","subject","AllPaths","styles","mergeStyleSets","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","react_router_dom","to","Text","variant","sortItems","subjects","_ref3","order","_ref3$options","fields","separateCompletedItems","items","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","dict","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","createSubject","objectSpread","v4","type","setSeparateComplete","parameters","BUTTON_HEIGHT","setFieldsArray","setFieldsDesc","dragEnterClass","neutralLight","SortButton","setSearchOptions","draggedIndex","useRef","draggedItem","selection","Selection","target","calloutVisible","setShowCallout","dismissCallout","openCallout","dispatch","useDispatch","insertBeforeItem","item","draggedItems","current","isIndexSelected","getSelection","filter","itm","indexOf","insertIndex","splice","apply","toConsumableArray","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","checked","sortColumns","fieldName","name","minWidth","onRender","Toggle","defaultChecked","offText","onText","Fragment","ref","CommandBarButton","iconProps","iconName","ariaLabel","onClick","root","Callout","onDismiss","hidden","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","onBlur","DetailsList","columns","selectionMode","SelectionMode","none","wrapper","white","borderBottom","neutralQuaternary","AppCommandBar","_useSelector","useSelector","state","rootOrder","searchSortOptions","dispatchCreateChildSubject","dispatchCreateSubject","dispatchSetSeparateComplete","dispatchSetSeparateCompleteSearch","components","path","createSubjectButton","marginBottom","marginLeft","marginRight","getItems","condition","border","borderRadius","fontSize","FontSizes","size28","outline","paddingBottom","textAlign","&:focus","neutralTertiary","Name","list","overflow","SimpleListView","maxHeight","onRenderCell","getChildren","notifyNoChildren","childrenSet","i","has","FocusZone","style","role","aria-label","List","setSubjectName","setSubjectDescription","description","completeSubject","level","arguments","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","setSubjectDueDate","appendChild","child","gridTemplateRows","checkboxWrapper","checkbox","margin","divider","background","gridColumn","marginTop","button","content","gridRow","paddingRight","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","newLabel","data-is-focusable","onContextMenu","Checkbox","TextField","borderless","ContextualMenu","bottomRightEdge","ListItem","AppendChildrenListItem","AppendChildrenHeight","cursor","padding","&:active","icon","AppendChildren","panelVisible","setPanelVisible","setMenuVisible","hidePanel","showPanel","toggleMenu","hideMenu","addChild","Icon","Panel","isOpen","isLightDismiss","headerText","removeChild","open","contextItems","buttonLabel","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","headerWrapper","header","borderTopLeftRadius","borderTopRightRadius","zIndex","headerButton","borderBottomLeftRadius","borderBottomRightRadius","borderRight","borderTop","headerLink","body","paddingTop","justifyContent","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","completeOnClick","uncompleteOnClick","clearDueDateOnClick","completeItem","deleteItem","dueDate","Math","ceil","valueOf","red","toLocaleString","DefaultButton","split","menuProps","green","created","primary","headerOpenLabel","Stack","verticalAlign","multiline","rows","Label","DatePicker","onSelectDate","minHeight","ROWS_PER_PAGE","ROW_HEIGHT","MIN_COL_WIDTH","grid","position","tile","float","contents","getPageHeight","getDiffIndex","oldOrder","newOrder","GridView","sortOptions","columnCount","columnWidth","gridRef","orderState","setOrderState","document","index","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","componentOrder","renderedWindowsAhead","detailsList","ListView","renderSubjectString","_index","column","renderDate","isHeaderVisible","sidebar","ResponsiveGridView","windowSize","useWindowSize","react_router","parentSubject","innerWidth","searchParams","reduce","acc","curr","String","SearchResults","childId","includes","App","component","Boolean","window","hostname","subjectReducer","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","parentId","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","add","createSubjectReducer","removeChildReducer","parentOrder","appendChildReducer","_ref$parameters","setFieldsArrayReducer","f","setFieldsDescReducer","setSeparateCompleteReducer","combineReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","objectWithoutProperties","_i","_Object$entries","entries","_ref4","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0553713.chunk.js","sourcesContent":["import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\nimport { Subject } from \"./subject/model/Subject\";\nimport { match as Match } from \"react-router\";\n\nexport interface SubjectsRouteProps {\n  id?: string;\n}\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:id?\",\n};\n\nexport const AllPaths = [Paths.search, Paths.subject, Paths.base];\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { gotoSearch, SearchRouteProps, getSearchMatch } from \"../Routing\";\nimport { Subject } from \"../subject/model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\n","import React from \"react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport SearchBar from \"./Search/SearchBar\";\nimport { SearchRouteProps, Paths } from \"./Routing\";\nimport { APPBAR_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(\n  props: RouteComponentProps<SearchRouteProps>,\n): JSX.Element {\n  return (\n    <div className={styles.appBar}>\n      <Link to={Paths.base} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","import { Subject, SubjectDictState } from \"./Subject\";\nimport { isUndefined } from \"lodash\";\n\nexport interface SortField {\n  key: keyof Omit<Subject, \"parents\">;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import {\n  SubjectState,\n  Subject,\n  SubjectTypes,\n  SubjectBaseAction,\n} from \"./Subject\";\nimport { v4 } from \"uuid\";\nimport { sortItems, getInitialOrder } from \"./Order\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parent?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: SubjectState,\n  { subjectType, parent, subjectId }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n  };\n\n  state.dict[subjectId] = subject;\n\n  if (parent !== undefined) {\n    subject.parents.add(parent);\n    const s = state.dict[parent];\n    s.children.order.push(subjectId);\n    sortItems(state.dict, s.children);\n  }\n  state.order.order.push(subjectId);\n};\n","import { BaseAction } from \"../../Common\";\nimport { SubjectState } from \"./Subject\";\nimport { sortItems, SetSortParameters } from \"./Order\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends BaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nexport const setSeparateCompleteReducer = (\n  state: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import { SortField, sortItems, SetSortParameters } from \"./Order\";\nimport { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends BaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nexport const setFieldsArrayReducer = (\n  state: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\nimport { sortItems, SetSortParameters } from \"./Order\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends BaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nexport const setFieldsDescReducer = (\n  state: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = state.dict[subjectId].children;\n        children.order = sortItems(state.dict, children);\n      }\n      return;\n    }\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../subject/model/Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../subject/model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../subject/model/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId }));\n    },\n    [dispatch, fields, subjectId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(setFieldsDesc(key, checked, { setSearchOptions, subjectId }));\n    },\n    [dispatch, subjectId, setSearchOptions],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <Toggle\n        key={item.key}\n        defaultChecked={item.desc}\n        offText=\"Ascending\"\n        onText=\"Descending\"\n        onChange={(e, checked) => dispatchSetFieldsDesc(e, checked!, item.key)}\n      />\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      name: \"Parameter\",\n      minWidth: 150,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      name: \"Direction\",\n      minWidth: 150,\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  CommandBarButton,\n  Toggle,\n} from \"office-ui-fabric-react\";\nimport {\n  SubjectsRouteProps,\n  SearchRouteProps,\n  Paths,\n  subjectBase,\n  searchBase,\n} from \"../Routing\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../subject/model/Create\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../subject/model/SetSeparateComplete\";\nimport { BUTTON_HEIGHT } from \"./Common\";\nimport SortButton from \"./SortButton\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: BUTTON_HEIGHT,\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppCommandBar({\n  match,\n}: RouteComponentProps<SubjectsRouteProps & SearchRouteProps>): JSX.Element {\n  const { id } = match.params;\n  const dispatch = useDispatch();\n  const { dict, order: rootOrder, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const dispatchCreateChildSubject = useCallback((): void => {\n    dispatch(createSubject({ parent: id }));\n  }, [dispatch, id]);\n\n  const dispatchCreateSubject = useCallback((): void => {\n    dispatch(createSubject());\n  }, [dispatch]);\n\n  const dispatchSetSeparateComplete = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId: id }));\n    },\n    [dispatch, id],\n  );\n\n  const dispatchSetSeparateCompleteSearch = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { setSearchOptions: true }));\n    },\n    [dispatch],\n  );\n\n  const components = [];\n\n  if (match.path === Paths.subject || match.path === subjectBase) {\n    const order =\n      id && id in dict ? dict[id].children.options : rootOrder.options;\n\n    const createSubjectButton = id ? (\n      <CommandBarButton\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={{ root: { height: BUTTON_HEIGHT } }}\n      />\n    ) : (\n      <CommandBarButton\n        text=\"Create subject\"\n        iconProps={{ iconName: \"Add\" }}\n        ariaLabel=\"Create subject\"\n        onClick={dispatchCreateSubject}\n        styles={{ root: { height: BUTTON_HEIGHT } }}\n      />\n    );\n\n    components.push(<div key=\"createSubject\">{createSubjectButton}</div>);\n    components.push(\n      <SortButton key=\"sort\" subjectId={id} fields={order.fields} />,\n    );\n\n    components.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={order.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateComplete}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.search || match.path === searchBase) {\n    components.push(\n      <SortButton\n        key=\"sort\"\n        setSearchOptions={true}\n        fields={searchSortOptions.fields}\n      />,\n    );\n\n    components.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={searchSortOptions.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateCompleteSearch}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  }\n\n  return <div className={styles.wrapper}>{components}</div>;\n}\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"./Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n}\n\nexport interface GetItemsOptions {\n  parent?: string;\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parent : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id] };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\n\ninterface NameProps {\n  className: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function Name({\n  value,\n  className,\n  onBlur,\n  onChange,\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FocusZone, List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  subjectId: string;\n  maxHeight: number | string;\n\n  /**\n   * If `true`, it gets all the children of the `subjectId`. If `false`, it gets\n   * all the subjects **except** the children of the `subjectId`.\n   */\n  getChildren?: boolean;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  subjectId,\n  maxHeight,\n  onRenderCell,\n  getChildren,\n  notifyNoChildren,\n}: ListViewProps): JSX.Element {\n  const { dict: subjects, order } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  let children;\n  if (getChildren) {\n    children = getItems(subjects, subjects[subjectId].children.order, {\n      parent: subjectId,\n    });\n  } else {\n    const childrenSet = new Set(subjects[subjectId].children.order);\n    const condition = (i: Item): boolean =>\n      !childrenSet.has(i.id) && i.id !== subjectId;\n    children = getItems(subjects, order.order, {\n      condition,\n      parent: subjectId,\n    });\n  }\n\n  return (\n    <FocusZone className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          There's nothing here{\" \"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </FocusZone>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"./Order\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.dict[subjectId].name = name;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"./Order\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.dict[subjectId].description = description;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState, SubjectDictState } from \"./Subject\";\nimport { sortAllParents } from \"./Order\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  dict: SubjectDictState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(dict, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state.dict, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.dict[subjectId].completed = undefined;\n  sortAllParents(state.dict, subjectId);\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"./Order\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state.dict[subjectId].parents) {\n    remove(\n      state.dict[parentId].children.order,\n      (s): boolean => s === subjectId,\n    );\n  }\n  for (const childId of state.dict[subjectId].children.order) {\n    state.dict[childId].parents.delete(subjectId);\n  }\n  remove(state.order.order, (s): boolean => s === subjectId);\n  sortAllParents(state.dict, subjectId);\n  delete state.dict[subjectId];\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"./Order\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: SubjectState,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.dict[subjectId].dueDate = date;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { sortItems } from \"./Order\";\n\nexport const APPEND_CHILD_SUBJECT = \"APPEND_CHILD_SUBJECT\";\n\nexport interface AppendChildAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChild = (\n  subjectId: string,\n  child: string,\n): AppendChildAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT,\n});\n\nexport const appendChildReducer = (\n  state: SubjectState,\n  { subjectId, child }: AppendChildAction,\n): void => {\n  const parentOrder = state.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(state.dict, parentOrder);\n  state.dict[child].parents.add(subjectId);\n};\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { appendChild } from \"../../model/AppendChild\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"./ListItemBase\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChild(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Icon,\n  Text,\n  Panel,\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react\";\nimport SimpleListView from \"./SimpleListView\";\nimport AppendChildrenListItem from \"./ListItem/AppendChildrenListItem\";\nimport { useDispatch } from \"react-redux\";\nimport { createSubject } from \"../model/Create\";\nimport { border, gridTemplateColumns } from \"./ListItem/ListItemBase\";\n\nexport const AppendChildrenHeight = 32;\nconst panelHeaderHeight = 115;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parent }));\n  }, [dispatch, parent]);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"ChildOf\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subject\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          subjectId={parent}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${panelHeaderHeight})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      {menuVisible ? (\n        <ContextualMenu\n          isBeakVisible={false}\n          onDismiss={hideMenu}\n          target={target}\n          directionalHint={DirectionalHint.bottomRightEdge}\n          items={contextMenuItems}\n        />\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { remove } from \"lodash\";\nimport { sortAllParents } from \"./Order\";\n\nexport const REMOVE_CHILD_SUBJECT = \"REMOVE_CHILD_SUBJECT\";\n\nexport interface RemoveChildAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChild = (\n  subjectId: string,\n  parent: string,\n): RemoveChildAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT,\n});\n\nexport const removeChildReducer = (\n  state: SubjectState,\n  { subjectId, parent }: RemoveChildAction,\n): void => {\n  remove(state.dict[parent].children.order, (s): boolean => s === subjectId);\n  state.dict[subjectId].parents.delete(parent);\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { Link } from \"react-router-dom\";\nimport { removeChild } from \"../../model/RemoveChild\";\nimport ListItemBase from \"./ListItemBase\";\nimport { isUndefined } from \"lodash\";\nimport { setSubjectName } from \"../../model/Name\";\nimport { gotoSubject } from \"../../../Routing\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChild(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      key: \"complete-1-level\",\n      text: \"Mark as complete\",\n      onClick: completeOnClick,\n    },\n    {\n      key: \"complete-2-level\",\n      text: \"Mark this and its children as complete\",\n      onClick: completeWithChildrenOnClick,\n    },\n    {\n      key: \"remove\",\n      text: \"Remove this as a child\",\n      onClick: removeChildOnClick,\n    },\n    {\n      key: \"delete\",\n      text: \"Delete this\",\n      onClick: deleteSubjectOnClick,\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  FocusZone,\n  Stack,\n  Text,\n  TextField,\n  Label,\n  DatePicker,\n  DefaultButton,\n  IconButton,\n  DirectionalHint,\n} from \"office-ui-fabric-react\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { Subject } from \"../model/Subject\";\nimport Name from \"./Name\";\nimport SimpleListView from \"./SimpleListView\";\nimport { setSubjectName } from \"../model/Name\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\nimport { setSubjectDueDate } from \"../model/Date\";\nimport AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport SubjectListItem from \"./ListItem/SubjectListItem\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../../Routing\";\n\ninterface SubjectProps {\n  subject: Subject;\n  id: string;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    display: \"grid\",\n    gridTemplateColumns: \"auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"1 / 3\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n    selectors: {\n      \"&:focus\": {\n        border: \"none\",\n        outline: \"none\",\n      },\n    },\n  },\n  headerButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderRight: border,\n    borderTop: border,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    marginBottom: -1,\n    marginLeft: 0,\n    marginRight: -1,\n    marginTop: -1,\n    zIndex: 2,\n  },\n  headerLink: {\n    gridColumn: \"2\",\n    gridRow: \"1\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  subject,\n  id,\n  listHeight,\n  showOpenButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeItem = {\n    key: \"complete-2-level\",\n    text: \"Mark this and its children as complete\",\n    onClick: completeSubjectOnClick,\n  };\n  const deleteItem = {\n    key: \"delete\",\n    text: \"Delete this\",\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let header;\n  let heroButton;\n  if (!subject.completed) {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.green }}\n      >\n        Created {subject.created.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        primary\n        text=\"Mark as complete\"\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeItem, deleteItem],\n        }}\n      />\n    );\n  } else {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.red }}\n      >\n        Completed {subject.completed.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        text=\"Mark as uncomplete\"\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const headerOpenLabel = \"Open \" + subject.name;\n\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <div className={styles.headerWrapper}>\n          {header}\n          {showOpenButton ? (\n            <Link to={gotoSubject(\"grid\", id)} className={styles.headerLink}>\n              <IconButton\n                styles={{ root: { width: \"\" } }}\n                className={styles.headerButton}\n                iconProps={{ iconName: \"OpenFile\" }}\n                title={headerOpenLabel}\n                ariaLabel={headerOpenLabel}\n              />\n            </Link>\n          ) : null}\n        </div>\n\n        <div className={styles.body}>\n          <Name\n            className={styles.title}\n            value={name}\n            onChange={setNameLocal}\n            onBlur={setNameRedux}\n          />\n          <TextField\n            multiline\n            rows={3}\n            value={description}\n            onChange={setDescriptionLocal}\n            onBlur={setDescriptionRedux}\n            className={styles.description}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <div className={styles.datePicker}>\n              <DatePicker\n                value={subject.dueDate}\n                onSelectDate={setDueDateRedux}\n              />\n              {subject.dueDate ? (\n                <IconButton\n                  iconProps={{ iconName: \"cancel\" }}\n                  title=\"Clear date\"\n                  onClick={clearDueDateOnClick}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>\n              {`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}\n            </Label>\n          </div>\n          <div\n            style={{\n              minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n            }}\n          >\n            <SimpleListView\n              subjectId={id}\n              maxHeight={`calc(${listHeight})`}\n              onRenderCell={SubjectListItem}\n              getChildren={true}\n            />\n            <AppendChildren parent={id} />\n          </div>\n          <div className={styles.heroButton}>{heroButton}</div>\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { List, IRectangle, ScrollToMode } from \"office-ui-fabric-react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Item, getItems, GetItemsOptions } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../AppCommandBar/Common\";\nimport { isUndefined } from \"lodash\";\nimport { APPBAR_HEIGHT } from \"../../Common\";\nimport { SortItemsOptions, sortItems } from \"../model/Order\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n    overflow: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\nconst getDiffIndex = (oldOrder: string[], newOrder: string[]): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n\ninterface GridViewProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n}\n\nexport default function GridView({\n  options,\n  sortOptions,\n}: GridViewProps): JSX.Element {\n  const id = options ? options.parent : undefined;\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const state = useSelector((state: State) => state.subjects);\n  const { dict: subjects } = state;\n\n  const order =\n    !isUndefined(id) && id in subjects\n      ? subjects[id].children.order\n      : state.order.order;\n\n  const [orderState, setOrderState] = useState(order);\n\n  useEffect((): void => {\n    if (id) {\n      document.title = \"hub - \" + subjects[id].name;\n    } else {\n      document.title = \"hub\";\n    }\n  }, [id, subjects]);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (gridRef.current && orderState !== order && order.length > 0) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(orderState, order);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects[order[index]];\n      if (s.parents.size === 0 || s.parents.has(id!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setOrderState(order);\n    }\n  }, [order, orderState, id, subjects]);\n\n  const renderCell = useCallback((props?: Item): JSX.Element | undefined => {\n    if (!props) {\n      return;\n    }\n\n    const { id, subject } = props;\n    return (\n      <div\n        className={styles.tile}\n        data-is-focusable={true}\n        key={id}\n        style={{\n          height: ROW_HEIGHT,\n          width: 100 / columnCount.current + \"%\",\n        }}\n      >\n        <div className={styles.padding}>\n          <div className={styles.contents}>\n            <SubjectComponent\n              subject={subject}\n              id={id}\n              listHeight={\"260px\"}\n              showOpenButton={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }, []);\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  const componentOrder = sortOptions\n    ? sortItems(subjects, { options: sortOptions, order })\n    : order;\n  const items = getItems(subjects, componentOrder, options);\n\n  return (\n    <List\n      ref={gridRef}\n      className={styles.grid}\n      items={items}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  IColumn,\n  DetailsList,\n  SelectionMode,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { Subject, GetItemsOptions, getItems, Item } from \"../model/Subject\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../Common\";\nimport { SortItemsOptions, sortItems } from \"../model/Order\";\n\nconst styles = mergeStyleSets({\n  detailsList: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n  },\n});\n\ninterface ListViewProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n}\n\nexport default function ListView({\n  options,\n  sortOptions,\n}: ListViewProps): JSX.Element {\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const componentOrder = sortOptions\n    ? sortItems(subjects.dict, { ...subjects.order, options: sortOptions })\n    : subjects.order.order;\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  // TODO: render link button\n\n  const columns: IColumn[] = [\n    {\n      key: \"name\",\n      minWidth: 150,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n    {\n      key: \"description\",\n      minWidth: 150,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    {\n      key: \"created\",\n      minWidth: 150,\n      name: \"Created\",\n      onRender: renderDate,\n    },\n    {\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    {\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n  ];\n\n  return (\n    <DetailsList\n      className={styles.detailsList}\n      columns={columns}\n      items={items}\n      isHeaderVisible={true}\n      selectionMode={SelectionMode.none}\n    />\n  );\n}\n","import React from \"react\";\nimport { SubjectsRouteProps, getDisplay } from \"../../Routing\";\nimport GridView, { MIN_COL_WIDTH } from \"./GridView\";\nimport { isUndefined } from \"lodash\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport ListView from \"./ListView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    gridColumn: \"2\",\n    zIndex: 10,\n  },\n});\n\nexport default function ResponsiveGridView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { id } = match.params;\n  const display = getDisplay(location);\n\n  const windowSize = useWindowSize();\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(id) && !(id in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (isUndefined(id)) {\n    if (display === \"list\") {\n      return <ListView />;\n    } else {\n      return <GridView />;\n    }\n  }\n\n  const parentSubject = <SubjectComponent subject={dict[id]} id={id} />;\n  if (windowSize.innerWidth > MIN_COL_WIDTH * 2) {\n    const options = { parent: id };\n    return (\n      <div className={styles.wrapper}>\n        {display === \"grid\" ? (\n          <GridView options={options} />\n        ) : (\n          <ListView options={options} />\n        )}\n        <div className={styles.sidebar}>{parentSubject}</div>\n      </div>\n    );\n  }\n\n  return parentSubject;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getDisplay, getSearchMatch } from \"../Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../subject/model/Subject\";\nimport ListView from \"../subject/components/ListView\";\nimport GridView from \"../subject/components/GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport AppBar from \"./AppBar\";\nimport AppCommandBar from \"./AppCommandBar/AppCommandBar\";\nimport ResponsiveGridView from \"./subject/components/ResponsiveGridView\";\nimport { AllPaths, subjectBase, Paths } from \"./Routing\";\nimport SearchResults from \"./Search/SearchResults\";\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <Route path={AllPaths} component={AppCommandBar} />\n      <Switch>\n        <Route path={Paths.subject} component={ResponsiveGridView} />\n        <Route path={Paths.search} component={SearchResults} />\n        <Redirect to={subjectBase} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState, SubjectTypes } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Name\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./model/Date\";\nimport {\n  CREATE_SUBJECT,\n  createSubjectReducer,\n  CreateSubjectAction,\n} from \"./model/Create\";\nimport {\n  REMOVE_CHILD_SUBJECT,\n  removeChildReducer,\n  RemoveChildAction,\n} from \"./model/RemoveChild\";\nimport {\n  APPEND_CHILD_SUBJECT,\n  AppendChildAction,\n  appendChildReducer,\n} from \"./model/AppendChild\";\nimport {\n  getInitialOrder,\n  sortItems,\n  getInitialSortItemsOptions,\n} from \"./model/Order\";\nimport {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"./model/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  setFieldsDescReducer,\n  SetFieldsDescAction,\n} from \"./model/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  setSeparateCompleteReducer,\n  SetSeparateCompleteAction,\n} from \"./model/SetSeparateComplete\";\nimport { isUndefined } from \"lodash\";\n\nconst getInitialState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\nconst subjectReducer = (\n  state: SubjectState = getInitialState(),\n  action: Action,\n): SubjectState =>\n  produce(\n    state,\n    (draftState): SubjectState => {\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(draftState, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            draftState,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(draftState, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(\n            draftState,\n            action as UncompleteSubjectAction,\n          );\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(draftState, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(\n            draftState,\n            action as SetSubjectDueDateAction,\n          );\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT:\n          removeChildReducer(draftState, action as RemoveChildAction);\n          break;\n        case APPEND_CHILD_SUBJECT:\n          appendChildReducer(draftState, action as AppendChildAction);\n          break;\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(draftState, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(draftState, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            draftState,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (draftState.order.order.length > 0) {\n        draftState.order.order = sortItems(draftState.dict, draftState.order);\n      }\n      // Adds new `searchSortOptions` if it wasn't already in the state\n      if (isUndefined(draftState.searchSortOptions)) {\n        draftState.searchSortOptions = getInitialSortItemsOptions();\n      }\n      return draftState;\n    },\n  );\n\nexport default subjectReducer;\n","import { combineReducers } from \"redux\";\nimport subjectReducer from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\n\nexport interface State {\n  subjects: SubjectState;\n}\n\nexport default combineReducers({\n  subjects: subjectReducer,\n});\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \"./Subject\";\n\ninterface PersistSubject\n  extends Omit<Subject, \"created\" | \"completed\" | \"dueDate\" | \"parents\"> {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./subject/model/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}