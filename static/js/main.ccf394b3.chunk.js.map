{"version":3,"sources":["Search/Routing.ts","Search/SearchBar.tsx","subject/Routing.ts","Display.ts","Common.ts","AppBar.tsx","Order.ts","subject/model/AppendChild.ts","views/model/AppendChild.ts","subject/model/Create.ts","subject/model/SetSeparateComplete.ts","AppCommandBar/Common.ts","subject/model/SetFieldsArray.ts","subject/model/SetFieldsDesc.ts","AppCommandBar/SortButton.tsx","views/Routing.ts","Routing.ts","subject/model/Subject.ts","subject/components/SimpleListView.tsx","subject/components/ListItem/ListItemBase.tsx","views/components/AppendChildrenListItem.tsx","views/components/AppendChildren.tsx","AppCommandBar/AppCommandBar.tsx","TitleInput.tsx","subject/model/Name.ts","subject/model/Description.ts","subject/model/Completed.ts","subject/model/Delete.ts","subject/model/Date.ts","subject/components/ListItem/AppendChildrenListItem.tsx","subject/components/AppendChildren.tsx","subject/model/RemoveChild.ts","subject/components/ListItem/SubjectListItem.tsx","views/model/RemoveChild.ts","subject/components/Subject.tsx","subject/components/View.ts","subject/components/GridView.tsx","subject/components/ListView/ListViewContextMenu.tsx","subject/components/ListView/ListViewButtons.tsx","subject/components/ListView/ListView.tsx","subject/components/ViewWithSidebar.tsx","subject/components/SubjectView.tsx","Search/SearchResults.tsx","views/model/Create.ts","views/components/ViewsNav.tsx","views/model/Name.ts","views/components/View.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","views/Reducer.ts","Reducer.ts","subject/model/Transform.ts","views/model/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","styles","mergeStyleSets","search","display","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","subjectBase","gotoSubject","id","url","qs","stringify","getDisplay","location","parse","isUndefined","Array","isArray","updateDisplay","pathname","APPBAR_HEIGHT","PANEL_HEADER_HEIGHT","VIEW_TITLE_HEIGHT","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","react_router_dom","to","Text","variant","sortItems","subjects","_ref3","order","_ref3$options","fields","separateCompletedItems","items","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","dict","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","appendChild","child","type","appendChildReducer","state","parentOrder","add","appendChildView","viewId","appendChildViewReducer","views","createSubject","objectSpread","v4","setSeparateComplete","parameters","APP_COMMAND_BAR_HEIGHT","BUTTON_HEIGHT","setFieldsArray","setFieldsDesc","dragEnterClass","neutralLight","gripperWrapper","justifyContent","cursor","wrapper","SortButton","setSearchOptions","draggedIndex","useRef","draggedItem","selection","Selection","target","calloutVisible","setShowCallout","dismissCallout","openCallout","dispatch","useDispatch","insertBeforeItem","item","draggedItems","current","isIndexSelected","getSelection","filter","itm","indexOf","insertIndex","splice","apply","toConsumableArray","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","checked","sortColumns","minWidth","name","onRender","Icon","iconName","fieldName","Toggle","root","margin","defaultChecked","offText","onText","Fragment","ref","CommandBarButton","iconProps","ariaLabel","onClick","Callout","onDismiss","hidden","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","onBlur","DetailsList","columns","selectionMode","SelectionMode","none","gotoView","Paths","base","subject","view","viewBase","AllPaths","getItems","parentId","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","illegalIds","notifyNoChildren","useSelector","i","has","FocusZone","style","role","aria-label","List","border","neutralTertiary","borderRadius","gridTemplateRows","marginBottom","checkboxWrapper","checkbox","divider","background","gridColumn","marginTop","button","content","gridRow","paddingRight","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","newLabel","data-is-focusable","onContextMenu","Checkbox","TextField","borderless","ContextualMenu","bottomRightEdge","ListItem","AppendChildrenListItem","AppendChildren","hidePanel","isOpen","_useSelector","react_router","Panel","isLightDismiss","headerText","leftWrapper","rightWrapper","white","borderBottom","neutralQuaternary","position","zIndex","commandBarStyles","AppCommandBar","_match$params","rootOrder","searchSortOptions","appendChildrenPanelVisible","setAppendChildrenPanelVisible","showAppendChildrenPanel","hideAppendChildrenPanel","dispatchCreateChildSubject","dispatchCreateSubject","dispatchSetSeparateComplete","dispatchSetSeparateCompleteSearch","toggleView","leftComponents","rightComponents","panel","path","createSubjectButton","marginLeft","marginRight","menuProps","directionalHintFixed","fontSize","FontSizes","size28","outline","paddingBottom","textAlign","&:focus","TitleInput","_ref$textAlign","setSubjectName","setSubjectDescription","description","completeSubject","level","arguments","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","setSubjectDueDate","AppendChildrenListItem_ListItem","AppendChildrenHeight","padding","&:active","icon","components_AppendChildren","panelVisible","setPanelVisible","setMenuVisible","showPanel","toggleMenu","hideMenu","addChild","removeChild","open","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","removeChildOnClick","deleteSubjectOnClick","completeContextItems","uncompleteContextItems","contextItems","buttonLabel","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","removeChildView","headerWrapper","borderTopLeftRadius","borderTopRightRadius","header","headerOpenButton","borderBottomLeftRadius","borderBottomRightRadius","headerCloseButton","red","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","_ref$item","listHeight","showOpenButton","showCloseButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeSubjectOnClick","removeChildViewOnClick","completeItem","deleteItem","dueDate","Math","ceil","valueOf","toLocaleDateString","DefaultButton","split","green","created","primary","headerOpenLabel","headerCloseLabel","Stack","verticalAlign","resizable","multiline","rows","field","Label","DatePicker","onSelectDate","minHeight","getDiffIndex","oldOrder","newOrder","ROWS_PER_PAGE","ROW_HEIGHT","MIN_COL_WIDTH","grid","tile","float","contents","getPageHeight","GridView","objectWithoutProperties","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","currentOrder","setCurrentOrder","index","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","renderedWindowsAhead","ListViewContextMenu","ev","onEditClick","editClick","rowButton","rowButtonWrapper","subjectWrapper","ListViewButtons","openModal","openModalOnClick","openLabel","editLabel","closeLabel","withRouter","sortOptions","reorderParams","sortFields","column","isSortedDescending","modalItem","setModalItem","dismissModal","renderSubjectString","_index","renderChildren","toLocaleString","renderDate","renderButtons","onItemInvoked","columnsDict","isResizable","reorder","targetIndex","dragged","_","isSorted","listRef","focusIndex","getKey","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","Modal","main","sidebar","ViewWithSidebar","viewComponent","sidebarComponent","setOrder","SubjectView","windowSize","useWindowSize","ListView_ListView","parentSubject","innerWidth","searchParams","reduce","acc","curr","String","SearchResults","childId","includes","createView","nav","borderRight","boxSizing","overflowY","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","Nav","expandButtonAriaLabel","updateViewName","ViewComponent","localName","setLocalName","updateName","View","App","component","Boolean","window","hostname","subjectReducer","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","subjectsAppendChildReducer","subjectsAppendChild","createSubjectReducer","removeChildReducer","_ref$parameters","setFieldsArrayReducer","f","setFieldsDescReducer","setSeparateCompleteReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","updateViewNameReducer","removeChildViewReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","_i","_Object$entries","entries","_ref4","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccf394b3.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../subject/model/Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { gotoSearch, SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { Subject } from \"../subject/model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import qs from \"query-string\";\nimport { DisplayOptions } from \"../Display\";\n\nexport interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n","import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport const updateDisplay = (\n  location: Location,\n  display: DisplayOptions,\n): string => `${location.pathname}?display=${display}`;\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\nexport const PANEL_HEADER_HEIGHT = 115;\nexport const VIEW_TITLE_HEIGHT = 71;\n","import React from \"react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport SearchBar from \"./Search/SearchBar\";\nimport { SearchRouteProps } from \"./Search/Routing\";\nimport { gotoSubject } from \"./subject/Routing\";\nimport { getDisplay } from \"./Display\";\nimport { APPBAR_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(\n  props: RouteComponentProps<SearchRouteProps>,\n): JSX.Element {\n  const display = getDisplay(props.location);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject(display)} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","import { Subject, SubjectDictState } from \"./subject/model/Subject\";\nimport { isUndefined } from \"lodash\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_SUBJECT = \"APPEND_CHILD_SUBJECT\";\n\nexport interface AppendChildAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChild = (\n  subjectId: string,\n  child: string,\n): AppendChildAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT,\n});\n\nexport const appendChildReducer = (\n  state: SubjectState,\n  { subjectId, child }: AppendChildAction,\n): void => {\n  const parentOrder = state.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(state.dict, parentOrder);\n  state.dict[child].parents.add(subjectId);\n};\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_VIEW = \"APPEND_CHILD_VIEW\";\n\nexport interface AppendChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendChildView = (\n  viewId: string,\n  subjectId: string,\n): AppendChildViewAction => ({\n  subjectId,\n  type: APPEND_CHILD_VIEW,\n  viewId,\n});\n\nexport const appendChildViewReducer = (\n  { subjects, views }: State,\n  { subjectId, viewId }: AppendChildViewAction,\n): void => {\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n};\n","import { Subject, SubjectTypes, SubjectBaseAction } from \"./Subject\";\nimport { v4 } from \"uuid\";\nimport { getInitialOrder } from \"../../Order\";\nimport {\n  appendChildReducer as subjectsAppendChildReducer,\n  appendChild as subjectsAppendChild,\n} from \"./AppendChild\";\nimport {\n  appendChildView,\n  appendChildViewReducer,\n} from \"../../views/model/AppendChild\";\nimport { State } from \"../../Reducer\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(\n      state.subjects,\n      subjectsAppendChild(parentId, subjectId),\n    );\n  }\n  if (viewId !== undefined) {\n    appendChildViewReducer(state, appendChildView(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import { BaseAction } from \"../../Common\";\nimport { SubjectState } from \"./Subject\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends BaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nexport const setSeparateCompleteReducer = (\n  state: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import { SortField, sortItems, SetSortParameters } from \"../../Order\";\nimport { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends BaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nexport const setFieldsArrayReducer = (\n  state: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends BaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nexport const setFieldsDescReducer = (\n  state: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = state.dict[subjectId].children;\n        children.order = sortItems(state.dict, children);\n      }\n      return;\n    }\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../subject/model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../subject/model/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId }));\n    },\n    [dispatch, fields, subjectId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(setFieldsDesc(key, checked, { setSearchOptions, subjectId }));\n    },\n    [dispatch, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { searchBase } from \"./Search/Routing\";\nimport { subjectBase } from \"./subject/Routing\";\nimport { viewBase } from \"./views/Routing\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n  viewId?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  const viewId = options ? options.viewId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id], viewId };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FocusZone, List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  parentId?: string;\n  viewId?: string;\n  illegalIds?: Set<string>;\n  order: string[];\n  maxHeight: number | string;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  order,\n  parentId,\n  maxHeight,\n  onRenderCell,\n  illegalIds,\n  notifyNoChildren,\n  viewId,\n}: ListViewProps): JSX.Element {\n  const { subjects } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => !!illegalIds && !illegalIds.has(i.id),\n    [illegalIds],\n  );\n\n  const options = {\n    condition: illegalIds ? condition : undefined,\n    parentId,\n    viewId,\n  };\n  const children = getItems(subjects.dict, order, options);\n\n  return (\n    <FocusZone className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          {\"There's nothing here\"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </FocusZone>\n  );\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../subject/model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"../../subject/components/ListItem/ListItemBase\";\nimport { appendChildView } from \"../model/AppendChild\";\n\nfunction ListItem({ id, viewId, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChildView(viewId!, id));\n      }\n    },\n    [dispatch, id, viewId],\n  );\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.viewId)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React from \"react\";\nimport { Panel, IPanelProps } from \"office-ui-fabric-react\";\nimport SimpleListView from \"../../subject/components/SimpleListView\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport AppendChildrenListItem from \"./AppendChildrenListItem\";\nimport { isUndefined } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { Paths } from \"../../Routing\";\n\ninterface AppendChildrenProps {\n  isOpen: boolean;\n  hidePanel: IPanelProps[\"onDismiss\"];\n  viewId?: string;\n}\n\nexport default function AppendChildren({\n  hidePanel,\n  isOpen,\n  viewId,\n}: AppendChildrenProps): JSX.Element {\n  const { subjects, views } = useSelector((state: State) => state);\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n\n  const order = subjects.order.order;\n  const illegalIds = new Set(views.dict[viewId].children.order);\n\n  return (\n    <React.Fragment>\n      <Panel\n        isOpen={isOpen}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          viewId={viewId}\n          order={order}\n          illegalIds={illegalIds}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  CommandBarButton,\n  Toggle,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../subject/model/Create\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../subject/model/SetSeparateComplete\";\nimport { BUTTON_HEIGHT } from \"./Common\";\nimport SortButton from \"./SortButton\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SubjectsRouteProps, subjectBase } from \"../subject/Routing\";\nimport { getDisplay, updateDisplay } from \"../Display\";\nimport { SearchRouteProps, searchBase } from \"../Search/Routing\";\nimport { Paths } from \"../Routing\";\nimport { ViewRouteProps } from \"../views/Routing\";\nimport AppendChildren from \"../views/components/AppendChildren\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: BUTTON_HEIGHT,\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n    zIndex: 10,\n  },\n});\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ntype AppCommandbarProps = RouteComponentProps<\n  SubjectsRouteProps & SearchRouteProps & ViewRouteProps\n>;\n\nexport default function AppCommandBar({\n  match,\n  location,\n  history,\n}: AppCommandbarProps): JSX.Element {\n  const { parentId, viewId } = match.params;\n  const dispatch = useDispatch();\n  const display = getDisplay(location);\n\n  const { dict, order: rootOrder, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const [appendChildrenPanelVisible, setAppendChildrenPanelVisible] = useState(\n    false,\n  );\n  const showAppendChildrenPanel = useCallback((): void => {\n    setAppendChildrenPanelVisible(true);\n  }, []);\n  const hideAppendChildrenPanel = useCallback((): void => {\n    setAppendChildrenPanelVisible(false);\n  }, []);\n\n  const dispatchCreateChildSubject = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  const dispatchCreateSubject = useCallback((): void => {\n    dispatch(createSubject());\n  }, [dispatch]);\n\n  const dispatchSetSeparateComplete = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId: parentId }));\n    },\n    [dispatch, parentId],\n  );\n\n  const dispatchSetSeparateCompleteSearch = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { setSearchOptions: true }));\n    },\n    [dispatch],\n  );\n\n  const toggleView = useCallback((): void => {\n    history.push(updateDisplay(location, display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, history, location]);\n\n  const leftComponents: JSX.Element[] = [];\n  const rightComponents: JSX.Element[] = [];\n  let panel: JSX.Element | null = null;\n\n  if (match.path === Paths.subject || match.path === subjectBase) {\n    const order =\n      parentId && parentId in dict\n        ? dict[parentId].children.options\n        : rootOrder.options;\n\n    const createSubjectButton = parentId ? (\n      <CommandBarButton\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />\n    ) : (\n      <CommandBarButton\n        text=\"Create subject\"\n        iconProps={{ iconName: \"Add\" }}\n        ariaLabel=\"Create subject\"\n        onClick={dispatchCreateSubject}\n        styles={commandBarStyles}\n      />\n    );\n\n    leftComponents.push(<div key=\"createSubject\">{createSubjectButton}</div>);\n\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton key=\"sort\" subjectId={parentId} fields={order.fields} />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={order.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateComplete}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.search || match.path === searchBase) {\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton\n          key=\"sort\"\n          setSearchOptions={true}\n          fields={searchSortOptions.fields}\n        />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={searchSortOptions.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateCompleteSearch}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.view) {\n    leftComponents.push(\n      <CommandBarButton\n        key=\"appendChildren\"\n        text=\"Append child subjects\"\n        iconProps={{ iconName: \"RowsChild\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={showAppendChildrenPanel}\n        styles={commandBarStyles}\n      />,\n      <CommandBarButton\n        key=\"createSubjectForView\"\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />,\n    );\n\n    panel = (\n      <AppendChildren\n        hidePanel={hideAppendChildrenPanel}\n        isOpen={appendChildrenPanelVisible}\n        viewId={viewId}\n      />\n    );\n  }\n\n  rightComponents.push(\n    <CommandBarButton\n      key=\"toggleView\"\n      ariaLabel=\"Toggle view\"\n      iconProps={{\n        iconName: display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n      }}\n      text={display === \"list\" ? \"List\" : \"Grid\"}\n      styles={{\n        root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n      }}\n      menuProps={{\n        directionalHintFixed: true,\n        items: [\n          display === \"list\"\n            ? {\n                iconProps: { iconName: \"GridViewMedium\" },\n                key: \"gridButton\",\n                onClick: toggleView,\n                text: \"Grid\",\n              }\n            : {\n                iconProps: { iconName: \"BulletedListText\" },\n                key: \"listButton\",\n                onClick: toggleView,\n                text: \"List\",\n              },\n        ],\n      }}\n    />,\n  );\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <div className={styles.leftWrapper}>{leftComponents}</div>\n        <div className={styles.rightWrapper}>{rightComponents}</div>\n      </div>\n      {panel}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    height: 32,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.dict[subjectId].name = name;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.dict[subjectId].description = description;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState, SubjectDictState } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  dict: SubjectDictState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(dict, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state.dict, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.dict[subjectId].completed = undefined;\n  sortAllParents(state.dict, subjectId);\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state.dict[subjectId].parents) {\n    remove(\n      state.dict[parentId].children.order,\n      (s): boolean => s === subjectId,\n    );\n  }\n  for (const childId of state.dict[subjectId].children.order) {\n    state.dict[childId].parents.delete(subjectId);\n  }\n  remove(state.order.order, (s): boolean => s === subjectId);\n  sortAllParents(state.dict, subjectId);\n  delete state.dict[subjectId];\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: SubjectState,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.dict[subjectId].dueDate = date;\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { appendChild } from \"../../model/AppendChild\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"./ListItemBase\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChild(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Icon,\n  Text,\n  Panel,\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react\";\nimport SimpleListView from \"./SimpleListView\";\nimport AppendChildrenListItem from \"./ListItem/AppendChildrenListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../model/Create\";\nimport { border, gridTemplateColumns } from \"./ListItem/ListItemBase\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\n\nexport const AppendChildrenHeight = 32;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"RowsChild\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subjects\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          parentId={parent}\n          illegalIds={\n            new Set(subjects.dict[parent].children.order.concat(parent))\n          }\n          order={subjects.order.order}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      <ContextualMenu\n        hidden={!menuVisible}\n        isBeakVisible={false}\n        onDismiss={hideMenu}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems}\n      />\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { remove } from \"lodash\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const REMOVE_CHILD_SUBJECT = \"REMOVE_CHILD_SUBJECT\";\n\nexport interface RemoveChildAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChild = (\n  subjectId: string,\n  parent: string,\n): RemoveChildAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT,\n});\n\nexport const removeChildReducer = (\n  state: SubjectState,\n  { subjectId, parent }: RemoveChildAction,\n): void => {\n  remove(state.dict[parent].children.order, (s): boolean => s === subjectId);\n  state.dict[subjectId].parents.delete(parent);\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { Link } from \"react-router-dom\";\nimport { removeChild } from \"../../model/RemoveChild\";\nimport ListItemBase from \"./ListItemBase\";\nimport { isUndefined } from \"lodash\";\nimport { setSubjectName } from \"../../model/Name\";\nimport { gotoSubject } from \"../../Routing\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChild(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Remove\" },\n      key: \"remove\",\n      onClick: removeChildOnClick,\n      text: \"Remove this as a child\",\n    },\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { remove } from \"lodash\";\n\nexport const REMOVE_CHILD_VIEW = \"REMOVE_CHILD_VIEW\";\n\nexport interface RemoveChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const removeChildView = (\n  viewId: string,\n  subjectId: string,\n): RemoveChildViewAction => ({\n  subjectId,\n  type: REMOVE_CHILD_VIEW,\n  viewId,\n});\n\nexport const removeChildViewReducer = (\n  { views }: State,\n  { subjectId, viewId }: RemoveChildViewAction,\n): void => {\n  const view = views.dict[viewId];\n  remove(view.children.order, (v): boolean => v === subjectId);\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FocusZone,\n  Stack,\n  Text,\n  TextField,\n  Label,\n  DatePicker,\n  DefaultButton,\n  IconButton,\n  DirectionalHint,\n} from \"office-ui-fabric-react\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { Item } from \"../model/Subject\";\nimport TitleInput from \"../../TitleInput\";\nimport SimpleListView from \"./SimpleListView\";\nimport { setSubjectName } from \"../model/Name\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\nimport { setSubjectDueDate } from \"../model/Date\";\nimport AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport SubjectListItem from \"./ListItem/SubjectListItem\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../Routing\";\nimport { State } from \"../../Reducer\";\nimport { removeChildView } from \"../../views/model/RemoveChild\";\n\ninterface SubjectProps {\n  item: Item;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n  showCloseButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    display: \"grid\",\n    gridTemplateColumns: \"32px auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n  },\n  headerOpenButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    margin: 0,\n    marginTop: 0,\n    outline: \"none\",\n    zIndex: 2,\n  },\n  headerCloseButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 0,\n    margin: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:active\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n      },\n    },\n  },\n  headerLink: {\n    gridColumn: \"3\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  item: { subject, id, viewId },\n  listHeight,\n  showOpenButton,\n  showCloseButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeChildView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeItem = {\n    key: \"complete-2-level\",\n    text: \"Mark this and its children as complete\",\n    onClick: completeSubjectOnClick,\n  };\n  const deleteItem = {\n    key: \"delete\",\n    text: \"Delete this\",\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let header;\n  let heroButton;\n  let backgroundColor;\n  if (!subject.completed) {\n    backgroundColor = theme.palette.green;\n    header = (\n      <Text className={styles.header}>\n        Created {subject.created.toLocaleDateString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        primary\n        text=\"Mark as complete\"\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeItem, deleteItem],\n        }}\n      />\n    );\n  } else {\n    backgroundColor = theme.palette.red;\n    header = (\n      <Text className={styles.header}>\n        Completed {subject.completed.toLocaleDateString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        text=\"Mark as uncomplete\"\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const headerOpenLabel = \"Open \" + subject.name;\n  const headerCloseLabel = \"Close \" + subject.name;\n\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <div className={styles.headerWrapper} style={{ backgroundColor }}>\n          {showCloseButton ? (\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.headerCloseButton}\n              iconProps={{ iconName: \"Cancel\" }}\n              title={headerCloseLabel}\n              ariaLabel={headerCloseLabel}\n              onClick={removeChildViewOnClick}\n            />\n          ) : null}\n          {header}\n          {showOpenButton ? (\n            <Link to={gotoSubject(\"grid\", id)} className={styles.headerLink}>\n              <IconButton\n                styles={{ root: { width: \"\" } }}\n                className={styles.headerOpenButton}\n                iconProps={{ iconName: \"OpenFile\" }}\n                title={headerOpenLabel}\n                ariaLabel={headerOpenLabel}\n              />\n            </Link>\n          ) : null}\n        </div>\n\n        <div className={styles.body}>\n          <TitleInput\n            textAlign=\"center\"\n            className={styles.title}\n            value={name}\n            onChange={setNameLocal}\n            onBlur={setNameRedux}\n          />\n          <TextField\n            resizable={false}\n            multiline\n            rows={3}\n            value={description}\n            onChange={setDescriptionLocal}\n            onBlur={setDescriptionRedux}\n            className={styles.description}\n            styles={{ field: { height: 63 } }}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <div className={styles.datePicker}>\n              <DatePicker\n                value={subject.dueDate}\n                onSelectDate={setDueDateRedux}\n              />\n              {subject.dueDate ? (\n                <IconButton\n                  iconProps={{ iconName: \"cancel\" }}\n                  title=\"Clear date\"\n                  onClick={clearDueDateOnClick}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>\n              {`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}\n            </Label>\n          </div>\n          <div\n            style={{\n              minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n            }}\n          >\n            <SimpleListView\n              parentId={id}\n              order={subjects.dict[id].children.order}\n              maxHeight={`calc(${listHeight})`}\n              onRenderCell={SubjectListItem}\n            />\n            <AppendChildren parent={id} />\n          </div>\n          <div className={styles.heroButton}>{heroButton}</div>\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","export const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport { List, IRectangle, ScrollToMode } from \"office-ui-fabric-react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Item } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../Common\";\nimport { getDiffIndex } from \"./View\";\nimport { useSubjectView, SubjectViewHookProps } from \"./SubjectView\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n    overflow: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\ninterface GridViewProps extends SubjectViewHookProps {\n  showCloseButton?: boolean;\n}\n\nexport default function GridView({\n  showCloseButton,\n  ...props\n}: GridViewProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback(\n    (props?: Item): JSX.Element | undefined => {\n      if (!props) {\n        return;\n      }\n\n      return (\n        <div\n          className={styles.tile}\n          data-is-focusable={true}\n          key={props.id}\n          style={{\n            height: ROW_HEIGHT,\n            width: 100 / columnCount.current + \"%\",\n          }}\n        >\n          <div className={styles.padding}>\n            <div className={styles.contents}>\n              <SubjectComponent\n                showCloseButton={showCloseButton}\n                item={props}\n                listHeight={\"260px\"}\n                showOpenButton={true}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    },\n    [showCloseButton],\n  );\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  return (\n    <List\n      ref={gridRef}\n      className={styles.grid}\n      items={items}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport {\n  ContextualMenu,\n  IContextualMenuItem,\n  DirectionalHint,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { removeChildView } from \"../../../views/model/RemoveChild\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  showCloseButton?: boolean;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  showCloseButton,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id, viewId } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeChildView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  if (showCloseButton) {\n    contextItems.push({\n      iconProps: { iconName: \"Cancel\" },\n      key: \"removeChildView\",\n      onClick: removeChildViewOnClick,\n      text: \"Remove this subject from this view\",\n    });\n  }\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { gotoSubject } from \"../../Routing\";\nimport { Link } from \"react-router-dom\";\nimport { IconButton, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeChildView } from \"../../../views/model/RemoveChild\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewButtonsProps {\n  item: Item;\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewButtons({\n  item,\n  openModal,\n  showCloseButton,\n}: ListViewButtonsProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const openModalOnClick = useCallback((): void => {\n    openModal(item);\n  }, [item, openModal]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (item.viewId && item.id) {\n      dispatch(removeChildView(item.viewId, item.id));\n    }\n  }, [dispatch, item]);\n\n  const openLabel = \"Open \" + item.subject.name;\n  const editLabel = \"Edit \" + item.subject.name;\n  const closeLabel = \"Close \" + item.subject.name;\n\n  return (\n    <div className={styles.rowButtonWrapper}>\n      {showCloseButton ? (\n        <IconButton\n          onClick={removeChildViewOnClick}\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"Cancel\" }}\n          title={closeLabel}\n          ariaLabel={closeLabel}\n        />\n      ) : null}\n      <IconButton\n        onClick={openModalOnClick}\n        styles={{ root: { width: \"\" } }}\n        className={styles.rowButton}\n        iconProps={{ iconName: \"Edit\" }}\n        title={editLabel}\n        ariaLabel={editLabel}\n      />\n      <Link to={gotoSubject(\"list\", item.id)}>\n        <IconButton\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"OpenFile\" }}\n          title={openLabel}\n          ariaLabel={openLabel}\n        />\n      </Link>\n    </div>\n  );\n}\n","import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport {\n  IColumn,\n  DetailsList,\n  SelectionMode,\n  mergeStyleSets,\n  IDetailsList,\n  getTheme,\n  Modal,\n} from \"office-ui-fabric-react\";\nimport { Subject, GetItemsOptions, Item } from \"../../model/Subject\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../../Reducer\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT, VIEW_TITLE_HEIGHT } from \"../../../Common\";\nimport { SortItemsOptions, SortFieldKey } from \"../../../Order\";\nimport { gotoSubject } from \"../../Routing\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { setFieldsArray } from \"../../model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../../model/SetFieldsDesc\";\nimport { getDiffIndex } from \"../View\";\nimport SubjectComponent from \"../Subject\";\nimport ListViewContextMenu, {\n  ListViewContextMenuProps,\n} from \"./ListViewContextMenu\";\nimport { useSubjectView } from \"../SubjectView\";\nimport { Paths } from \"../../../Routing\";\nimport ListViewButtons from \"./ListViewButtons\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  showCloseButton?: boolean;\n}\n\nfunction ListView({\n  match,\n  history,\n  options,\n  sortOptions,\n  showCloseButton,\n}: ListViewProps & RouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem]);\n\n  //#region Render\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => (\n      <ListViewButtons\n        item={item}\n        openModal={openModal}\n        showCloseButton={showCloseButton}\n      />\n    ),\n    [openModal, showCloseButton],\n  );\n  //#endregion\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(\"list\", item.id));\n    },\n    [history],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"itemButtons\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n          showCloseButton,\n        });\n\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu, showCloseButton],\n  );\n\n  const height = `calc(100vh - ${APPBAR_HEIGHT +\n    APP_COMMAND_BAR_HEIGHT +\n    (match.path === Paths.view ? VIEW_TITLE_HEIGHT : 0)}px)`;\n  return (\n    <React.Fragment>\n      <DetailsList\n        styles={{ root: { height } }}\n        getKey={getKey}\n        componentRef={listRef}\n        onColumnHeaderClick={dispatchSetFieldsDesc}\n        columns={columns}\n        items={items}\n        isHeaderVisible={true}\n        selectionMode={SelectionMode.none}\n        onItemInvoked={onItemInvoked}\n        onItemContextMenu={onItemContextMenu}\n        columnReorderOptions={{\n          frozenColumnCountFromEnd: 1,\n          frozenColumnCountFromStart: 0,\n          handleColumnReorder: reorder,\n        }}\n      />\n      {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n      <Modal\n        isOpen={!!modalItem}\n        onDismiss={dismissModal}\n        styles={{\n          main: {\n            backgroundColor: \"none\",\n            border: \"1px solid transparent\",\n            borderRadius: 4,\n          },\n        }}\n      >\n        <div className={styles.subjectWrapper}>\n          {modalItem ? (\n            <SubjectComponent\n              showCloseButton={showCloseButton}\n              item={modalItem}\n              showOpenButton={true}\n            />\n          ) : null}\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(ListView);\n","import React from \"react\";\nimport { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport { MIN_COL_WIDTH } from \"./GridView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    gridColumn: \"2\",\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n});\n\ninterface ViewWithSidebarProps {\n  viewComponent: JSX.Element;\n  sidebarComponent: JSX.Element;\n}\n\nexport default function ViewWithSidebar({\n  viewComponent,\n  sidebarComponent,\n}: ViewWithSidebarProps): JSX.Element {\n  return (\n    <div className={styles.wrapper}>\n      {viewComponent}\n      <div className={styles.sidebar}>{sidebarComponent}</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SubjectsRouteProps } from \"../Routing\";\nimport { getDisplay } from \"../../Display\";\nimport GridView, { MIN_COL_WIDTH } from \"./GridView\";\nimport { isUndefined } from \"lodash\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport ListView from \"./ListView/ListView\";\nimport ViewWithSidebar from \"./ViewWithSidebar\";\nimport { GetItemsOptions, getItems, Item } from \"../model/Subject\";\nimport {\n  SortItemsOptions,\n  sortItems,\n  SortField,\n  SetSortParameters,\n} from \"../../Order\";\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\ninterface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = {};\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId: id } = match.params;\n  const display = getDisplay(location);\n\n  const windowSize = useWindowSize();\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(id) && !(id in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (isUndefined(id)) {\n    if (display === \"list\") {\n      return <ListView />;\n    } else {\n      return <GridView />;\n    }\n  }\n\n  const parentSubject = <SubjectComponent item={{ id, subject: dict[id] }} />;\n  if (windowSize.innerWidth > MIN_COL_WIDTH * 2) {\n    const options = { parentId: id };\n    return (\n      <ViewWithSidebar\n        viewComponent={\n          display === \"grid\" ? (\n            <GridView options={options} />\n          ) : (\n            <ListView options={options} />\n          )\n        }\n        sidebarComponent={parentSubject}\n      />\n    );\n  }\n\n  return parentSubject;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../subject/model/Subject\";\nimport ListView from \"../subject/components/ListView/ListView\";\nimport GridView from \"../subject/components/GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\nimport { getDisplay } from \"../Display\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../../Order\";\nimport { ViewBaseAction } from \"./View\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Nav,\n  getTheme,\n  mergeStyleSets,\n  INavLinkGroup,\n  INavLink,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createView } from \"../model/Create\";\nimport { State } from \"../../Reducer\";\nimport { RouteComponentProps } from \"react-router\";\nimport { ViewRouteProps, gotoView } from \"../Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"../../subject/Routing\";\nimport { Paths } from \"../../Routing\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  nav: {\n    background: theme.palette.white,\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: 208,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<SubjectsRouteProps & ViewRouteProps>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n        viewGroup,\n        {\n          icon: \"Add\",\n          key: \"createView\",\n          name: \"Create view\",\n          onClick: dispatchCreateView,\n          url: \"\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Nav\n      selectedKey={selectedKey}\n      expandButtonAriaLabel=\"Expand or collapse\"\n      className={styles.nav}\n      groups={groups}\n    />\n  );\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\n\nexport const UPDATE_VIEW_NAME = \"UPDATE_VIEW_NAME\";\n\nexport interface UpdateViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const updateViewName = (\n  viewId: string,\n  name: string,\n): UpdateViewNameAction => ({\n  name,\n  type: UPDATE_VIEW_NAME,\n  viewId,\n});\n\nexport const updateViewNameReducer = (\n  { views }: State,\n  { name, viewId }: UpdateViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\nimport { ViewRouteProps } from \"../Routing\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { isUndefined } from \"lodash\";\nimport GridView from \"../../subject/components/GridView\";\nimport ListView from \"../../subject/components/ListView/ListView\";\nimport { getDisplay } from \"../../Display\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport TitleInput from \"../../TitleInput\";\nimport { Paths } from \"../../Routing\";\nimport { updateViewName } from \"../model/Name\";\nimport { Location } from \"history\";\n\nconst styles = mergeStyleSets({\n  title: {\n    marginTop: 10,\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ location, viewId }: ViewProps): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(updateViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const display = getDisplay(location);\n\n  const options = { viewId };\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} showCloseButton={true} />\n    ) : (\n      <ListView options={options} showCloseButton={true} />\n    );\n\n  return (\n    <div className={styles.wrapper}>\n      <TitleInput\n        className={styles.title}\n        value={localName}\n        onChange={onChange}\n        onBlur={updateName}\n      />\n      {viewComponent}\n    </div>\n  );\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport AppBar from \"./AppBar\";\nimport AppCommandBar from \"./AppCommandBar/AppCommandBar\";\nimport SubjectView from \"./subject/components/SubjectView\";\nimport { AllPaths, Paths } from \"./Routing\";\nimport SearchResults from \"./Search/SearchResults\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport ViewsNav from \"./views/components/ViewsNav\";\nimport { subjectBase } from \"./subject/Routing\";\nimport View from \"./views/components/View\";\n\nconst styles = mergeStyleSets({\n  main: {\n    overflowY: \"auto\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <Route path={AllPaths} component={AppCommandBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState, SubjectTypes } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Name\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./model/Date\";\nimport {\n  CREATE_SUBJECT,\n  createSubjectReducer,\n  CreateSubjectAction,\n} from \"./model/Create\";\nimport {\n  REMOVE_CHILD_SUBJECT,\n  removeChildReducer,\n  RemoveChildAction,\n} from \"./model/RemoveChild\";\nimport {\n  APPEND_CHILD_SUBJECT,\n  AppendChildAction,\n  appendChildReducer,\n} from \"./model/AppendChild\";\nimport {\n  getInitialOrder,\n  sortItems,\n  getInitialSortItemsOptions,\n} from \"../Order\";\nimport {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"./model/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  setFieldsDescReducer,\n  SetFieldsDescAction,\n} from \"./model/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  setSeparateCompleteReducer,\n  SetSeparateCompleteAction,\n} from \"./model/SetSeparateComplete\";\nimport { isUndefined } from \"lodash\";\nimport { State } from \"../Reducer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      const { subjects } = draftState;\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(subjects, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            subjects,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(subjects, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(subjects, action as UncompleteSubjectAction);\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(subjects, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(subjects, action as SetSubjectDueDateAction);\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT:\n          removeChildReducer(subjects, action as RemoveChildAction);\n          break;\n        case APPEND_CHILD_SUBJECT:\n          appendChildReducer(subjects, action as AppendChildAction);\n          break;\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(subjects, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(subjects, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            subjects,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n      // Adds new `searchSortOptions` if it wasn't already in the state\n      if (isUndefined(subjects.searchSortOptions)) {\n        subjects.searchSortOptions = getInitialSortItemsOptions();\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import { ViewState } from \"./model/View\";\nimport { Action } from \"redux\";\nimport produce from \"immer\";\nimport { State } from \"../Reducer\";\nimport {\n  createViewReducer,\n  CREATE_VIEW,\n  CreateViewAction,\n} from \"./model/Create\";\nimport {\n  UPDATE_VIEW_NAME,\n  updateViewNameReducer,\n  UpdateViewNameAction,\n} from \"./model/Name\";\nimport {\n  AppendChildViewAction,\n  APPEND_CHILD_VIEW,\n  appendChildViewReducer,\n} from \"./model/AppendChild\";\nimport {\n  REMOVE_CHILD_VIEW,\n  RemoveChildViewAction,\n  removeChildViewReducer,\n} from \"./model/RemoveChild\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case UPDATE_VIEW_NAME:\n          updateViewNameReducer(draftState, action as UpdateViewNameAction);\n          break;\n        case APPEND_CHILD_VIEW:\n          appendChildViewReducer(draftState, action as AppendChildViewAction);\n          break;\n        case REMOVE_CHILD_VIEW:\n          removeChildViewReducer(draftState, action as RemoveChildViewAction);\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\nimport { ViewState } from \"./views/model/View\";\nimport viewReducer, { initialViewState } from \"./views/Reducer\";\n\nexport interface State {\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(initialReducer, subjectReducer, viewReducer);\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \"./Subject\";\n\ninterface PersistSubject\n  extends Omit<Subject, \"created\" | \"completed\" | \"dueDate\" | \"parents\"> {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \"./View\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    const orderSet = new Set<string>();\n    for (const viewId of state.order) {\n      orderSet.add(state.dict[viewId].name);\n    }\n    return { ...state, orderSet };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./subject/model/Transform\";\nimport transformViews from \"./views/model/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}