{"version":3,"sources":["subject/components/Title.tsx","subject/components/ListItem.tsx","subject/components/ListView.tsx","subject/components/Subject.tsx","subject/model/Title.ts","subject/components/GridView.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","Reducer.ts","index.tsx"],"names":["theme","getTheme","styles","mergeStyleSets","title","textAlign","fontSize","FontSizes","size28","border","outline","borderRadius","paddingBottom","width","selectors","&:focus","borderBottom","palette","neutralTertiary","&:hover","Title","_ref","value","className","onBlur","onChange","react_default","a","createElement","defaultValue","wrapper","display","flexDirection","marginTop","marginBottom","checkbox","margin","content","flexGrow","paddingLeft","paddingRight","open","color","white","background","themePrimary","cursor","height","filter","&:active","ListItem","id","subject","hostId","useRef","getId","listItemRef","_useState","useState","_useState2","Object","slicedToArray","calloutVisible","_setCalloutVisible","setCalloutVisible","e","preventDefault","data-is-focusable","onContextMenu","ref","Checkbox","label","name","TooltipHost","current","aria-labelledby","Icon","iconName","ContextualMenu","isBeakVisible","onDismiss","target","directionalHint","DirectionalHint","bottomRightEdge","items","contextItems","ListViewItem","props","list","overflow","borderTop","ListView","subjects","useSelector","state","childIds","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","err","return","FocusZone","List","onRenderCell","header","backgroundColor","neutralLight","padding","body","paddingTop","description","date","justifyContent","daysLeft","key","text","Subject","dispatch","useDispatch","updateName","dueDate","Date","getDate","Stack","verticalAlign","Text","created","toLocaleString","subjectId","type","updateSubjectNameAction","TextField","multiline","rows","Label","DatePicker","concat","DefaultButton","primary","style","menuProps","bottomCenter","position","tile","float","sizer","padder","left","top","right","bottom","contents","GridView","columnCount","columnWidth","entries","getItemCountForPage","itemIndex","surfaceRect","Math","ceil","floor","getPageHeight","ROW_HEIGHT","renderedWindowsAhead","_props","App","Boolean","window","location","hostname","match","getRandomChildren","max","i","random","toString","subjectReducer","arguments","length","amount","getInitialState","action","produce","draftState","updateSubjectNameReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","initializeIcons","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c99cbb44.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\n\ninterface TitleProps {\n  className: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    textAlign: \"center\",\n    fontSize: FontSizes.size28,\n    border: \"1px solid transparent\",\n    outline: \"none\",\n    borderRadius: 0,\n    paddingBottom: 4,\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function({\n  value,\n  className,\n  onBlur,\n  onChange,\n}: TitleProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        defaultValue={\"Untitled\"}\n      />\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { getId } from \"office-ui-fabric-react/lib/Utilities\";\nimport { DirectionalHint } from \"office-ui-fabric-react/lib/Callout\";\nimport { ContextualMenu } from \"office-ui-fabric-react/lib/ContextualMenu\";\nimport { Subject } from \"../model/Subject\";\nimport { contextItems } from \"./Subject\";\n\nconst theme = getTheme();\n\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    border,\n    borderRadius: 2,\n    marginTop: 1,\n    marginBottom: 1,\n  },\n  checkbox: {\n    margin: 8,\n  },\n  content: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n  open: {\n    color: theme.palette.white,\n    background: theme.palette.themePrimary,\n    fontSize: 18,\n    cursor: \"pointer\",\n    border: \"none\",\n    outline: \"none\",\n    margin: -1,\n    height: 40,\n    selectors: {\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n      },\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n      },\n    },\n  },\n});\n\ninterface ListItemProps {\n  id: string;\n  subject: Subject;\n}\n\nexport default function ListItem({ id, subject }: ListItemProps): JSX.Element {\n  const hostId = useRef(getId(id));\n  const listItemRef = useRef(null);\n\n  const [calloutVisible, _setCalloutVisible] = useState(false);\n  function setCalloutVisible(e: React.MouseEvent<HTMLDivElement>) {\n    e.preventDefault();\n    _setCalloutVisible(!calloutVisible);\n  }\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={listItemRef}\n    >\n      <div className={styles.wrapper}>\n        <Checkbox label={subject.name} className={styles.checkbox} />\n\n        <div className={styles.content}>\n          {/* // TODO: include custom content here. It should render below. */}\n        </div>\n\n        <TooltipHost content={\"Open \" + subject.name} id={hostId.current}>\n          <button className={styles.open} aria-labelledby={hostId.current}>\n            <Icon iconName=\"OpenFile\" />\n          </button>\n        </TooltipHost>\n      </div>\n\n      {calloutVisible ? (\n        <ContextualMenu\n          isBeakVisible={false}\n          onDismiss={setCalloutVisible}\n          target={listItemRef}\n          directionalHint={DirectionalHint.bottomRightEdge}\n          items={contextItems}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport function ListViewItem(props?: ListItemProps): JSX.Element | undefined {\n  if (!props) {\n    return;\n  }\n\n  const { id, subject } = props;\n  return <ListItem id={id} subject={subject} />;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List } from \"office-ui-fabric-react/lib/List\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { FocusZone } from \"office-ui-fabric-react/lib/FocusZone\";\nimport { State } from \"../../Reducer\";\nimport { ListViewItem } from \"./ListItem\";\n\ninterface ListViewProps {\n  id: string;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n    height: 300,\n    borderTop: border,\n    borderBottom: border,\n  },\n});\n\nexport default function({ id }: ListViewProps): JSX.Element {\n  const subjects = useSelector((state: State) => state.subjects);\n\n  const childIds = subjects[id].children;\n  const children = [];\n  for (const id of childIds) {\n    children.push({ id, subject: subjects[id] });\n  }\n\n  return (\n    <FocusZone>\n      <List\n        items={children}\n        onRenderCell={ListViewItem}\n        className={styles.list}\n      />\n    </FocusZone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Subject } from \"../model/Subject\";\nimport { FocusZone } from \"office-ui-fabric-react/lib/FocusZone\";\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\nimport { Label } from \"office-ui-fabric-react/lib/Label\";\nimport { DatePicker } from \"office-ui-fabric-react/lib/DatePicker\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { DefaultButton } from \"office-ui-fabric-react/lib/Button\";\nimport { DirectionalHint } from \"office-ui-fabric-react/lib/Callout\";\n\nimport Title from \"./Title\";\nimport ListView from \"./ListView\";\nimport { useDispatch } from \"react-redux\";\nimport { updateSubjectNameAction } from \"../model/Title\";\n\ninterface SubjectProps {\n  subject: Subject;\n  id: string;\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  header: {\n    backgroundColor: theme.palette.themePrimary,\n    color: theme.palette.neutralLight,\n    padding: 5,\n    selectors: {\n      \"&:focus\": {\n        outline: \"none\",\n        border: \"none\",\n      },\n    },\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    paddingTop: 10,\n    paddingBottom: 5,\n  },\n  description: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n});\n\nexport const contextItems = [\n  {\n    key: \"complete-1-level\",\n    text: \"Mark as complete\",\n  },\n  {\n    key: \"complete-2-level\",\n    text: \"Mark this and its children as complete\",\n  },\n  {\n    key: \"complete-insane\",\n    text: \"Mark this and every descendant as complete\",\n  },\n  {\n    key: \"delete\",\n    text: \"Delete this\",\n  },\n];\n\nexport default function({ subject, id }: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, updateName] = useState(subject.name);\n\n  const updateTitleLocal = (e: React.ChangeEvent<HTMLInputElement>) => {\n    updateName(e.target.value);\n  };\n  const updateTitleRedux = () => {\n    dispatch(updateSubjectNameAction(id, name));\n  };\n  const updateDescription = () => {};\n\n  const daysLeft = subject.dueDate\n    ? new Date().getDate() - subject.dueDate.getDate()\n    : \"∞\";\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <Text className={styles.header}>\n          Created {subject.created.toLocaleString()}\n        </Text>\n\n        <div className={styles.body}>\n          <Title\n            className={styles.title}\n            value={name}\n            onChange={updateTitleLocal}\n            onBlur={updateTitleRedux}\n          />\n          <TextField\n            multiline\n            rows={3}\n            value={subject.description}\n            onChange={updateDescription}\n            className={styles.description}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <DatePicker value={subject.dueDate} />\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>{`${daysLeft} days left`}</Label>\n          </div>\n          <ListView id={id} />\n          <DefaultButton\n            primary\n            text=\"Mark as complete\"\n            style={{ marginTop: 10 }}\n            menuProps={{\n              directionalHint: DirectionalHint.bottomCenter,\n              isBeakVisible: false,\n              items: contextItems,\n            }}\n          />\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\n\nexport const UPDATE_SUBJECT_NAME = \"UPDATE_SUBJECT_NAME\";\n\nexport interface UpdateSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const updateSubjectNameAction = (\n  subjectId: string,\n  name: string,\n): UpdateSubjectNameAction => ({\n  name,\n  subjectId,\n  type: UPDATE_SUBJECT_NAME,\n});\n\nexport const updateSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: UpdateSubjectNameAction,\n): void => {\n  state[subjectId].name = name;\n};\n","import React from \"react\";\nimport { List } from \"office-ui-fabric-react/lib/List\";\nimport { IRectangle } from \"office-ui-fabric-react/lib/Utilities\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Subject } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 600;\nconst MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"hidden\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  sizer: {\n    paddingBottom: \"100%\",\n  },\n  padder: {\n    position: \"absolute\",\n    left: 4,\n    top: 4,\n    right: 4,\n    bottom: 4,\n  },\n  contents: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    outline: \"1px solid \" + theme.palette.neutralTertiary,\n  },\n});\n\nexport default function(): JSX.Element {\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n\n  const subjects = useSelector((state: State) => state.subjects);\n\n  const renderCell = (props?: [string, Subject]): JSX.Element | undefined => {\n    if (!props) {\n      return;\n    }\n\n    const [id, subject] = props;\n    return (\n      <div\n        className={styles.tile}\n        data-is-focusable={true}\n        style={{\n          width: 100 / columnCount.current + \"%\",\n          height: ROW_HEIGHT,\n        }}\n      >\n        <div className={styles.sizer}>\n          <div className={styles.padder}>\n            <div className={styles.contents}>\n              <SubjectComponent subject={subject} id={id} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\n  const getItemCountForPage = (\n    itemIndex?: number,\n    surfaceRect?: IRectangle,\n  ): number => {\n    if (itemIndex === 0 && surfaceRect) {\n      columnCount.current = Math.ceil(surfaceRect.width / MIN_COL_WIDTH);\n      columnWidth.current = Math.floor(surfaceRect.width / columnCount.current);\n    }\n\n    return columnCount.current * ROWS_PER_PAGE;\n  };\n\n  return (\n    <List\n      className={styles.list}\n      items={Object.entries(subjects)}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React from \"react\";\nimport GridView from \"./subject/components/GridView\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <GridView />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState } from \"./model/Subject\";\nimport {\n  UPDATE_SUBJECT_NAME,\n  updateSubjectNameReducer,\n  UpdateSubjectNameAction,\n} from \"./model/Title\";\n\nconst NUM_ITEMS = 23;\n\nfunction getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst getRandomChildren = (): string[] => {\n  const children = [];\n  for (let i = 0; i < 12; i++) {\n    children.push(getRandomInt(NUM_ITEMS).toString());\n  }\n  return children;\n};\n\nconst getInitialState = (amount: number): SubjectState => {\n  const state: SubjectState = {};\n  for (let i = 0; i < amount; i++) {\n    state[i.toString()] = {\n      type: \"BaseSubject\",\n      name: `Name${i}`,\n      created: new Date(),\n      description: `Description${i}`,\n      dueDate: new Date(),\n      children: getRandomChildren(),\n    };\n  }\n  return state;\n};\n\nconst subjectReducer = (\n  state: SubjectState = getInitialState(NUM_ITEMS),\n  action: Action,\n) =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case UPDATE_SUBJECT_NAME:\n        updateSubjectNameReducer(draftState, action as UpdateSubjectNameAction);\n        break;\n      default:\n        break;\n    }\n    return draftState;\n  });\n\nexport default subjectReducer;\n","import { combineReducers } from \"redux\";\nimport subjectReducer from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\n\nexport interface State {\n  subjects: SubjectState;\n}\n\nexport default combineReducers({\n  subjects: subjectReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\n\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}