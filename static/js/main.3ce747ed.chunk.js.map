{"version":3,"sources":["Search/Routing.ts","subject/Routing.ts","views/Routing.ts","Routing.ts","Common.ts","Search/SearchBar.tsx","Display.ts","AppBar.tsx","AppCommandBar/Common.ts","AppCommandBar/AppCommandBar.tsx","Order.ts","subject/model/Completed.ts","subject/model/Delete.ts","views/model/RemoveChild.ts","subject/components/SubjectButtonsProps.ts","subject/components/ListView/ListViewContextMenu.tsx","TitleInput.tsx","subject/model/Subject.ts","subject/components/SimpleListView.tsx","subject/model/Name.ts","subject/model/Description.ts","subject/model/Date.ts","subject/model/AppendChild.ts","subject/components/ListItem/ListItemBase.tsx","subject/components/ListItem/AppendChildrenListItem.tsx","views/model/AppendChild.ts","subject/model/Create.ts","subject/components/AppendChildren.tsx","subject/model/RemoveChild.ts","subject/components/ListItem/SubjectListItem.tsx","subject/components/Subject.tsx","subject/components/ListView/ListViewModal.tsx","Wrapper.tsx","views/components/AppendChildrenListItem.tsx","views/components/AppendChildren.tsx","subject/model/SetFieldsArray.ts","subject/model/SetFieldsDesc.ts","AppCommandBar/SortButton.tsx","subject/model/SetSeparateComplete.ts","subject/components/UseCommandBar.tsx","subject/components/ListView/ListViewButtons.tsx","subject/components/View.ts","subject/components/GridView.tsx","subject/components/SubjectView.tsx","subject/components/ListView/ListView.tsx","subject/components/ListView/UseListViewDetailsList.ts","subject/components/ListView/UseListViewModal.tsx","subject/components/ListView/UseListViewContextMenu.tsx","subject/components/ListView/UseListViewRender.tsx","subject/components/ListView/UseListViewScroll.ts","Search/SearchResults.tsx","views/model/Name.ts","views/components/View.tsx","views/model/Create.ts","views/components/ViewsNav/ViewsNav.tsx","views/components/ViewsNav/index.ts","views/components/ViewsNav/UseGetCreateButtonItems.ts","App.tsx","ServiceWorker.ts","subject/Reducer.ts","views/Reducer.ts","Reducer.ts","subject/model/Transform.ts","views/model/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","subjectBase","gotoSubject","display","id","url","qs","stringify","gotoView","viewId","Paths","base","search","subject","view","viewBase","AllPaths","APPBAR_HEIGHT","PANEL_HEADER_HEIGHT","VIEW_TITLE_HEIGHT","styles","mergeStyleSets","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","getDisplay","location","parse","isUndefined","Array","isArray","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","_match$params","parentId","isSubjects","path","isSearch","isViews","_useSelector","useSelector","state","subjects","views","titleChild","dict","name","document","react_router_dom","to","Text","variant","APP_COMMAND_BAR_HEIGHT","BUTTON_HEIGHT","commandBarStyle","borderBottom","neutralQuaternary","margin","padding","zIndex","leftWrapper","rightWrapper","wrapper","objectSpread","white","justifyContent","paddingRight","position","withRouter","items","farItems","toggleView","pathname","updateDisplay","CommandBarButton","ariaLabel","iconProps","iconName","root","background","menuProps","directionalHintFixed","onClick","sortItems","_ref3","order","_ref3$options","fields","separateCompletedItems","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","completeSubject","level","arguments","type","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","removeChildView","completeItem","completeWithChildrenItem","uncompleteItem","removeItem","deleteItem","ListViewContextMenu","item","showCloseButton","ev","onDismiss","onEditClick","dispatch","useDispatch","checked","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","deleteSubjectOnClick","editClick","removeChildViewOnClick","completeContextItems","uncompleteContextItems","contextItems","toConsumableArray","ContextualMenu","target","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","border","borderRadius","fontSize","FontSizes","size28","outline","paddingBottom","textAlign","&:focus","neutralTertiary","TitleInput","onBlur","_ref$textAlign","style","getItems","current","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","illegalIds","notifyNoChildren","i","has","role","aria-label","List","setSubjectName","setSubjectDescription","description","setSubjectDueDate","appendChild","child","appendChildReducer","parentOrder","add","gridTemplateRows","marginBottom","checkboxWrapper","checkbox","divider","gridColumn","marginTop","button","content","gridRow","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","useRef","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","newLabel","data-is-focusable","onContextMenu","ref","Checkbox","TextField","borderless","hidden","bottomRightEdge","ListItem","AppendChildrenListItem","appendChildView","appendChildViewReducer","createSubject","v4","AppendChildrenHeight","cursor","&:active","filter","icon","AppendChildren","panelVisible","setPanelVisible","setMenuVisible","hidePanel","showPanel","toggleMenu","hideMenu","addChild","Fragment","Icon","Panel","isOpen","isLightDismiss","headerText","removeChild","open","removeChildOnClick","buttonLabel","tabIndex","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","focusBorder","headerWrapper","borderTopLeftRadius","borderTopRightRadius","header","neutralLight","headerOpenButton","borderBottomLeftRadius","borderBottomRightRadius","headerCloseButton","red","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","_ref$item","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeSubjectOnClick","completeButtonItem","deleteButtonItem","dueDate","Math","ceil","valueOf","toLocaleDateString","DefaultButton","split","green","created","primary","headerOpenLabel","headerCloseLabel","Stack","verticalAlign","resizable","multiline","rows","field","Label","DatePicker","disableAutoFocus","onSelectDate","minHeight","subjectWrapper","ListViewModal","modalItem","dismissModal","Modal","main","MIN_COL_WIDTH","mainWrapper","sidebar","minWidth","Wrapper","commandBar","windowSize","useWindowSize","innerWidth","AppendChildrenListItem_ListItem","react_router","setFieldsArray","parameters","setFieldsDesc","dragEnterClass","gripperWrapper","SortButton","setSearchOptions","draggedIndex","draggedItem","selection","Selection","calloutVisible","setShowCallout","dismissCallout","openCallout","insertBeforeItem","draggedItems","isIndexSelected","getSelection","itm","indexOf","insertIndex","splice","apply","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","sortColumns","onRender","fieldName","Toggle","defaultChecked","offText","onText","Callout","DetailsList","columns","selectionMode","SelectionMode","none","setSeparateComplete","commandBarStyles","useCommandBar","showSort","currentOrder","setSeparateCompleteOnChange","panelOpen","setShowPanel","AppendChildren_AppendChildren","marginLeft","marginRight","rowButton","rowButtonWrapper","ListViewButtons","openModal","openModalOnClick","openLabel","editLabel","closeLabel","getDiffIndex","oldOrder","newOrder","ROWS_PER_PAGE","ROW_HEIGHT","grid","overflowY","tile","float","contents","getPageHeight","objectWithoutProperties","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","setCurrentOrder","index","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","commandBarItems","AppCommandBar_AppCommandBar","renderedWindowsAhead","sortOptions","sortFields","reorderParams","setOrder","SubjectView","ListView_ListView","components_GridView","_useListViewDetailsLi","reorder","targetIndex","dragged","_","column","isSortedDescending","getKey","onItemInvoked","useListViewDetailsList","_useListViewModal","setModalItem","useListViewModal","_useListViewContextMe","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","useListViewContextMenu","renderSubjectString","_index","renderChildren","toLocaleString","renderDate","renderButtons","columnsDict","isResizable","isSorted","useListViewRender","listRef","focusIndex","useListViewScroll","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","searchParams","reduce","acc","curr","String","SearchResults","searchSortOptions","childId","includes","updateViewName","ViewComponent","localName","setLocalName","updateName","viewComponent","View","createView","navWrapper","borderRight","nav","boxSizing","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","createSubjectOnClick","useGetCreateButtonItems","CommandBar","Nav","expandButtonAriaLabel","navItems","App","component","Boolean","window","hostname","subjectReducer","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","subjectsAppendChildReducer","subjectsAppendChild","createSubjectReducer","removeChildReducer","_ref$parameters","setFieldsArrayReducer","f","setFieldsDescReducer","setSeparateCompleteReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","updateViewNameReducer","removeChildViewReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","_i","_Object$entries","entries","_ref4","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ce747ed.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../subject/model/Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","import qs from \"query-string\";\nimport { DisplayOptions } from \"../Display\";\n\nexport interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { SearchRouteProps, searchBase } from \"./Search/Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"./subject/Routing\";\nimport { ViewRouteProps, viewBase } from \"./views/Routing\";\n\nimport { RouteComponentProps } from \"react-router\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n\nexport type AllParams = SubjectsRouteProps & SearchRouteProps & ViewRouteProps;\nexport type AllRouteComponentProps = RouteComponentProps<AllParams>;\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\nexport const PANEL_HEADER_HEIGHT = 115;\nexport const VIEW_TITLE_HEIGHT = 71;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { gotoSearch, SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { Subject } from \"../subject/model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport const updateDisplay = (\n  location: Location,\n  display: DisplayOptions,\n): string => `${location.pathname}?display=${display}`;\n","import { AllRouteComponentProps, Paths } from \"./Routing\";\nimport React, { useEffect } from \"react\";\nimport { getSearchMatch, searchBase } from \"./Search/Routing\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { gotoSubject, subjectBase } from \"./subject/Routing\";\n\nimport { APPBAR_HEIGHT } from \"./Common\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./Search/SearchBar\";\nimport { State } from \"./Reducer\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { getDisplay } from \"./Display\";\nimport { useSelector } from \"react-redux\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(props: AllRouteComponentProps): JSX.Element {\n  const display = getDisplay(props.location);\n\n  const { match } = props;\n  const { parentId, viewId } = match.params;\n\n  const isSubjects = match.path === Paths.subject || match.path === subjectBase;\n  const isSearch = match.path === Paths.search || match.path === searchBase;\n  const isViews = match.path === Paths.view && viewId;\n\n  const { subjects, views } = useSelector((state: State) => state);\n\n  // Responsive page title\n  useEffect((): void => {\n    let path: string | null = null;\n    let titleChild: string | null = null;\n    if (isSubjects) {\n      path = \"subjects\";\n      if (parentId) {\n        titleChild = subjects.dict[parentId].name;\n      }\n    } else if (isSearch) {\n      const [param, query] = getSearchMatch(match);\n      path = \"search/\" + param;\n      titleChild = query;\n    } else if (isViews) {\n      if (viewId) {\n        path = \"views\";\n        titleChild = views.dict[viewId].name;\n      }\n    }\n\n    if (path) {\n      if (titleChild) {\n        document.title = `hub/${path}: ${titleChild}`;\n      } else {\n        document.title = `hub/${path}`;\n      }\n    } else {\n      document.title = `hub`;\n    }\n  }, [\n    isSubjects,\n    parentId,\n    subjects.dict,\n    isSearch,\n    match,\n    isViews,\n    viewId,\n    views.dict,\n  ]);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject(display)} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import {\n  CommandBarButton,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { getDisplay, updateDisplay } from \"../Display\";\n\nimport { BUTTON_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\n\nexport const commandBarStyle = {\n  borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n  boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n  height: BUTTON_HEIGHT,\n  margin: 0,\n  padding: 0,\n  zIndex: 10,\n};\n\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    ...commandBarStyle,\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n  },\n});\n\ninterface AppCommandBarProps {\n  items: JSX.Element[];\n  farItems?: JSX.Element[];\n}\n\nexport default withRouter(function AppCommandBar({\n  items,\n  farItems,\n  location,\n  history,\n}: AppCommandBarProps & RouteComponentProps) {\n  const display = getDisplay(location);\n\n  const toggleView = useCallback((): void => {\n    history.push(updateDisplay(location, display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, history, location]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.leftWrapper}>{items}</div>\n      <div className={styles.rightWrapper}>\n        {farItems}\n        <CommandBarButton\n          key=\"toggleView\"\n          ariaLabel=\"Toggle view\"\n          iconProps={{\n            iconName:\n              display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n          }}\n          text={display === \"list\" ? \"List\" : \"Grid\"}\n          styles={{\n            root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n          }}\n          menuProps={{\n            directionalHintFixed: true,\n            items: [\n              display === \"list\"\n                ? {\n                    iconProps: { iconName: \"GridViewMedium\" },\n                    key: \"gridButton\",\n                    onClick: toggleView,\n                    text: \"Grid\",\n                  }\n                : {\n                    iconProps: { iconName: \"BulletedListText\" },\n                    key: \"listButton\",\n                    onClick: toggleView,\n                    text: \"List\",\n                  },\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import { Subject, SubjectDictState } from \"./subject/model/Subject\";\nimport { isUndefined } from \"lodash\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction, SubjectState, SubjectDictState } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  dict: SubjectDictState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(dict, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state.dict, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.dict[subjectId].completed = undefined;\n  sortAllParents(state.dict, subjectId);\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state.dict[subjectId].parents) {\n    remove(\n      state.dict[parentId].children.order,\n      (s): boolean => s === subjectId,\n    );\n  }\n  for (const childId of state.dict[subjectId].children.order) {\n    state.dict[childId].parents.delete(subjectId);\n  }\n  remove(state.order.order, (s): boolean => s === subjectId);\n  sortAllParents(state.dict, subjectId);\n  delete state.dict[subjectId];\n};\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { remove } from \"lodash\";\n\nexport const REMOVE_CHILD_VIEW = \"REMOVE_CHILD_VIEW\";\n\nexport interface RemoveChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const removeChildView = (\n  viewId: string,\n  subjectId: string,\n): RemoveChildViewAction => ({\n  subjectId,\n  type: REMOVE_CHILD_VIEW,\n  viewId,\n});\n\nexport const removeChildViewReducer = (\n  { views }: State,\n  { subjectId, viewId }: RemoveChildViewAction,\n): void => {\n  const view = views.dict[viewId];\n  remove(view.children.order, (v): boolean => v === subjectId);\n};\n","export const completeItem = {\n  iconProps: { iconName: \"Completed\" },\n  key: \"complete-1-level\",\n  text: \"Mark as complete\",\n};\n\nexport const completeWithChildrenItem = {\n  iconProps: { iconName: \"CompletedSolid\" },\n  key: \"complete-2-level\",\n  text: \"Mark this and its children as complete\",\n};\n\nexport const uncompleteItem = {\n  iconProps: { iconName: \"Blocked2\" },\n  key: \"uncomplete\",\n  text: \"Mark as incomplete\",\n};\n\nexport const removeItem = {\n  iconProps: { iconName: \"Remove\" },\n  key: \"remove\",\n  text: \"Remove this as a child\",\n};\n\nexport const deleteItem = {\n  iconProps: { iconName: \"Delete\" },\n  key: \"delete\",\n  text: \"Delete this\",\n};\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport {\n  ContextualMenu,\n  IContextualMenuItem,\n  DirectionalHint,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { removeChildView } from \"../../../views/model/RemoveChild\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  showCloseButton?: boolean;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  showCloseButton,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id, viewId } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeChildView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  if (showCloseButton) {\n    contextItems.push({\n      iconProps: { iconName: \"Cancel\" },\n      key: \"removeChildView\",\n      onClick: removeChildViewOnClick,\n      text: \"Remove this subject from this view\",\n    });\n  }\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    height: 32,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n  viewId?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  const viewId = options ? options.viewId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id], viewId };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  parentId?: string;\n  viewId?: string;\n  illegalIds?: Set<string>;\n  order: string[];\n  maxHeight: number | string;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  order,\n  parentId,\n  maxHeight,\n  onRenderCell,\n  illegalIds,\n  notifyNoChildren,\n  viewId,\n}: ListViewProps): JSX.Element {\n  const { subjects } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => !!illegalIds && !illegalIds.has(i.id),\n    [illegalIds],\n  );\n\n  const options = {\n    condition: illegalIds ? condition : undefined,\n    parentId,\n    viewId,\n  };\n  const children = getItems(subjects.dict, order, options);\n\n  return (\n    <div className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          {\"There's nothing here\"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </div>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.dict[subjectId].name = name;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.dict[subjectId].description = description;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: SubjectState,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.dict[subjectId].dueDate = date;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_SUBJECT = \"APPEND_CHILD_SUBJECT\";\n\nexport interface AppendChildAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChild = (\n  subjectId: string,\n  child: string,\n): AppendChildAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT,\n});\n\nexport const appendChildReducer = (\n  state: SubjectState,\n  { subjectId, child }: AppendChildAction,\n): void => {\n  const parentOrder = state.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(state.dict, parentOrder);\n  state.dict[child].parents.add(subjectId);\n};\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { appendChild } from \"../../model/AppendChild\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"./ListItemBase\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChild(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_VIEW = \"APPEND_CHILD_VIEW\";\n\nexport interface AppendChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendChildView = (\n  viewId: string,\n  subjectId: string,\n): AppendChildViewAction => ({\n  subjectId,\n  type: APPEND_CHILD_VIEW,\n  viewId,\n});\n\nexport const appendChildViewReducer = (\n  { subjects, views }: State,\n  { subjectId, viewId }: AppendChildViewAction,\n): void => {\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n};\n","import { Subject, SubjectTypes, SubjectBaseAction } from \"./Subject\";\nimport { v4 } from \"uuid\";\nimport { getInitialOrder } from \"../../Order\";\nimport {\n  appendChildReducer as subjectsAppendChildReducer,\n  appendChild as subjectsAppendChild,\n} from \"./AppendChild\";\nimport {\n  appendChildView,\n  appendChildViewReducer,\n} from \"../../views/model/AppendChild\";\nimport { State } from \"../../Reducer\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(\n      state.subjects,\n      subjectsAppendChild(parentId, subjectId),\n    );\n  }\n  if (viewId !== undefined) {\n    appendChildViewReducer(state, appendChildView(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Icon,\n  Text,\n  Panel,\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react\";\nimport SimpleListView from \"./SimpleListView\";\nimport AppendChildrenListItem from \"./ListItem/AppendChildrenListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../model/Create\";\nimport { border, gridTemplateColumns } from \"./ListItem/ListItemBase\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\n\nexport const AppendChildrenHeight = 32;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        outline: \"1px solid \" + theme.palette.themePrimary,\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"RowsChild\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subjects\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          parentId={parent}\n          illegalIds={\n            new Set(subjects.dict[parent].children.order.concat(parent))\n          }\n          order={subjects.order.order}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      <ContextualMenu\n        hidden={!menuVisible}\n        isBeakVisible={false}\n        onDismiss={hideMenu}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems}\n      />\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { remove } from \"lodash\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const REMOVE_CHILD_SUBJECT = \"REMOVE_CHILD_SUBJECT\";\n\nexport interface RemoveChildAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChild = (\n  subjectId: string,\n  parent: string,\n): RemoveChildAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT,\n});\n\nexport const removeChildReducer = (\n  state: SubjectState,\n  { subjectId, parent }: RemoveChildAction,\n): void => {\n  remove(state.dict[parent].children.order, (s): boolean => s === subjectId);\n  state.dict[subjectId].parents.delete(parent);\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { Link } from \"react-router-dom\";\nimport { removeChild } from \"../../model/RemoveChild\";\nimport ListItemBase from \"./ListItemBase\";\nimport { isUndefined } from \"lodash\";\nimport { setSubjectName } from \"../../model/Name\";\nimport { gotoSubject } from \"../../Routing\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  uncompleteItem,\n  removeItem,\n  deleteItem,\n} from \"../SubjectButtonsProps\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChild(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      ...removeItem,\n      onClick: removeChildOnClick,\n    },\n    {\n      ...deleteItem,\n      onClick: deleteSubjectOnClick,\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)} tabIndex={-1}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Stack,\n  Text,\n  TextField,\n  Label,\n  DatePicker,\n  DefaultButton,\n  IconButton,\n  DirectionalHint,\n} from \"office-ui-fabric-react\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { Item } from \"../model/Subject\";\nimport TitleInput from \"../../TitleInput\";\nimport SimpleListView from \"./SimpleListView\";\nimport { setSubjectName } from \"../model/Name\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\nimport { setSubjectDueDate } from \"../model/Date\";\nimport AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport SubjectListItem from \"./ListItem/SubjectListItem\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../Routing\";\nimport { State } from \"../../Reducer\";\nimport { removeChildView } from \"../../views/model/RemoveChild\";\nimport {\n  completeWithChildrenItem,\n  deleteItem,\n  completeItem,\n  uncompleteItem,\n} from \"./SubjectButtonsProps\";\n\ninterface SubjectProps {\n  item: Item;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n  showCloseButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst focusBorder = \"1px solid \" + theme.palette.themePrimary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    display: \"grid\",\n    gridTemplateColumns: \"32px auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n  },\n  headerOpenButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    margin: 0,\n    marginTop: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 4,\n        outline: \"none\",\n      },\n    },\n  },\n  headerCloseButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 0,\n    margin: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:active\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 0,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n      },\n    },\n  },\n  headerLink: {\n    gridColumn: \"3\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  item: { subject, id, viewId },\n  listHeight,\n  showOpenButton,\n  showCloseButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeChildView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeButtonItem = {\n    ...completeWithChildrenItem,\n    onClick: completeSubjectOnClick,\n  };\n  const deleteButtonItem = {\n    ...deleteItem,\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let text: string;\n  let heroButton;\n  let backgroundColor;\n  if (!subject.completed) {\n    backgroundColor = theme.palette.green;\n    text = \"Created \" + subject.created.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        primary\n        {...completeItem}\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeButtonItem, deleteButtonItem],\n        }}\n      />\n    );\n  } else {\n    backgroundColor = theme.palette.red;\n    text = \"Completed \" + subject.completed.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        {...uncompleteItem}\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteButtonItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const header = (\n    <Text className={styles.header} tabIndex={-1}>\n      {text}\n    </Text>\n  );\n\n  const headerOpenLabel = \"Open \" + subject.name;\n  const headerCloseLabel = \"Close \" + subject.name;\n\n  return (\n    <Stack verticalAlign={\"center\"}>\n      <div className={styles.headerWrapper} style={{ backgroundColor }}>\n        {showCloseButton ? (\n          <IconButton\n            styles={{ root: { width: \"\" } }}\n            className={styles.headerCloseButton}\n            iconProps={{ iconName: \"Cancel\" }}\n            title={headerCloseLabel}\n            ariaLabel={headerCloseLabel}\n            onClick={removeChildViewOnClick}\n          />\n        ) : null}\n        {header}\n        {showOpenButton ? (\n          <Link\n            to={gotoSubject(\"grid\", id)}\n            className={styles.headerLink}\n            tabIndex={-1}\n          >\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.headerOpenButton}\n              iconProps={{ iconName: \"OpenFile\" }}\n              title={headerOpenLabel}\n              ariaLabel={headerOpenLabel}\n            />\n          </Link>\n        ) : null}\n      </div>\n\n      <div className={styles.body}>\n        <TitleInput\n          textAlign=\"center\"\n          className={styles.title}\n          value={name}\n          onChange={setNameLocal}\n          onBlur={setNameRedux}\n        />\n        <TextField\n          resizable={false}\n          multiline\n          rows={3}\n          value={description}\n          onChange={setDescriptionLocal}\n          onBlur={setDescriptionRedux}\n          className={styles.description}\n          styles={{ field: { height: 63 } }}\n        />\n        <div className={styles.date}>\n          <Label>Due date:</Label>\n          <div className={styles.datePicker}>\n            <DatePicker\n              disableAutoFocus={true}\n              value={subject.dueDate}\n              onSelectDate={setDueDateRedux}\n            />\n            {subject.dueDate ? (\n              <IconButton\n                iconProps={{ iconName: \"cancel\" }}\n                title=\"Clear date\"\n                onClick={clearDueDateOnClick}\n              />\n            ) : null}\n          </div>\n        </div>\n        <div className={styles.daysLeft}>\n          <Label>{`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}</Label>\n        </div>\n        <div\n          style={{\n            minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n          }}\n        >\n          <SimpleListView\n            parentId={id}\n            order={subjects.dict[id].children.order}\n            maxHeight={`calc(${listHeight})`}\n            onRenderCell={SubjectListItem}\n          />\n          <AppendChildren parent={id} />\n        </div>\n        <div className={styles.heroButton}>{heroButton}</div>\n      </div>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { Modal, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport SubjectComponent from \"../Subject\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewModalProps {\n  modalItem: Item | null;\n  dismissModal: () => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewModal({\n  modalItem,\n  dismissModal,\n  showCloseButton,\n}: ListViewModalProps): JSX.Element {\n  return (\n    <Modal\n      isOpen={!!modalItem}\n      onDismiss={dismissModal}\n      styles={{\n        main: {\n          backgroundColor: \"none\",\n          border: \"1px solid transparent\",\n          borderRadius: 4,\n        },\n      }}\n    >\n      <div className={styles.subjectWrapper}>\n        {modalItem ? (\n          <SubjectComponent\n            showCloseButton={showCloseButton}\n            item={modalItem}\n            showOpenButton={true}\n          />\n        ) : null}\n      </div>\n    </Modal>\n  );\n}\n","import { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\n\nimport React from \"react\";\nimport { State } from \"./Reducer\";\nimport SubjectComponent from \"./subject/components/Subject\";\nimport { useSelector } from \"react-redux\";\nimport useWindowSize from \"@rehooks/window-size\";\n\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  content: {\n    alignItems: \"stretch\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n  },\n  mainWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    minWidth: MIN_COL_WIDTH,\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n});\n\ninterface WrapperProps {\n  commandBar?: JSX.Element;\n  main: JSX.Element;\n  parentId?: string;\n  title?: JSX.Element;\n}\n\nexport default function Wrapper({\n  commandBar,\n  main,\n  parentId,\n  title,\n}: WrapperProps) {\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  const sidebar = parentId ? (\n    <div className={styles.sidebar}>\n      <SubjectComponent item={{ id: parentId, subject: dict[parentId] }} />\n    </div>\n  ) : null;\n\n  // 2 is for the border\n  const width = parentId ? `calc(100% - ${MIN_COL_WIDTH + 2}px)` : \"100%\";\n\n  const windowSize = useWindowSize();\n  if (sidebar && windowSize.innerWidth < MIN_COL_WIDTH * 2) {\n    return sidebar;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {commandBar}\n      <div className={styles.content}>\n        <div className={styles.mainWrapper} style={{ width }}>\n          {title}\n          {main}\n        </div>\n        {sidebar}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../subject/model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"../../subject/components/ListItem/ListItemBase\";\nimport { appendChildView } from \"../model/AppendChild\";\n\nfunction ListItem({ id, viewId, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChildView(viewId!, id));\n      }\n    },\n    [dispatch, id, viewId],\n  );\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.viewId)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React from \"react\";\nimport { Panel, IPanelProps } from \"office-ui-fabric-react\";\nimport SimpleListView from \"../../subject/components/SimpleListView\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport AppendChildrenListItem from \"./AppendChildrenListItem\";\nimport { isUndefined } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { Paths } from \"../../Routing\";\n\ninterface AppendChildrenProps {\n  isOpen: boolean;\n  hidePanel: IPanelProps[\"onDismiss\"];\n  viewId?: string;\n}\n\nexport default function AppendChildren({\n  hidePanel,\n  isOpen,\n  viewId,\n}: AppendChildrenProps): JSX.Element {\n  const { subjects, views } = useSelector((state: State) => state);\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n\n  const order = subjects.order.order;\n  const illegalIds = new Set(views.dict[viewId].children.order);\n\n  return (\n    <React.Fragment>\n      <Panel\n        isOpen={isOpen}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          viewId={viewId}\n          order={order}\n          illegalIds={illegalIds}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import { SortField, sortItems, SetSortParameters } from \"../../Order\";\nimport { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends BaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nexport const setFieldsArrayReducer = (\n  state: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends BaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nexport const setFieldsDescReducer = (\n  state: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = state.dict[subjectId].children;\n        children.order = sortItems(state.dict, children);\n      }\n      return;\n    }\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../subject/model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../subject/model/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId }));\n    },\n    [dispatch, fields, subjectId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(setFieldsDesc(key, checked, { setSearchOptions, subjectId }));\n    },\n    [dispatch, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","import { BaseAction } from \"../../Common\";\nimport { SubjectState } from \"./Subject\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends BaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nexport const setSeparateCompleteReducer = (\n  state: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { AllRouteComponentProps, Paths } from \"../../Routing\";\nimport { CommandBarButton, Toggle } from \"office-ui-fabric-react\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppendChildren from \"../../views/components/AppendChildren\";\nimport { BUTTON_HEIGHT } from \"../../AppCommandBar/Common\";\nimport SortButton from \"../../AppCommandBar/SortButton\";\nimport { State } from \"../../Reducer\";\nimport { setSeparateComplete } from \"../model/SetSeparateComplete\";\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ninterface UseCommandBarOptions {\n  subjectId?: string;\n  showSort?: boolean;\n  match: AllRouteComponentProps[\"match\"];\n}\n\nexport function useCommandBar({\n  match,\n  showSort,\n  subjectId,\n}: UseCommandBarOptions) {\n  const { viewId } = match.params;\n  const isViews = match.path === Paths.view && viewId;\n\n  const dispatch = useDispatch();\n  const subjects = useSelector((state: State) => state.subjects);\n\n  const currentOrder =\n    subjectId && subjectId in subjects.dict\n      ? subjects.dict[subjectId].children.options\n      : subjects.order.options;\n\n  const setSeparateCompleteOnChange = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId: subjectId }));\n    },\n    [dispatch, subjectId],\n  );\n\n  const items = [];\n\n  const [panelOpen, setShowPanel] = useState(false);\n  const showPanel = useCallback((): void => {\n    setShowPanel(true);\n  }, []);\n  const hidePanel = useCallback((): void => {\n    setShowPanel(false);\n  }, []);\n\n  if (isViews) {\n    items.push(\n      <CommandBarButton\n        key=\"appendChildren\"\n        text=\"Append child subjects\"\n        iconProps={{ iconName: \"RowsChild\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={showPanel}\n        styles={commandBarStyles}\n      />,\n      <AppendChildren\n        key=\"panel\"\n        hidePanel={hidePanel}\n        isOpen={panelOpen}\n        viewId={viewId}\n      />,\n    );\n  }\n\n  if (showSort) {\n    items.push(\n      <SortButton\n        key=\"sort\"\n        subjectId={subjectId}\n        fields={currentOrder.fields}\n      />,\n    );\n  }\n\n  items.push(\n    <Toggle\n      key=\"separateComplete\"\n      checked={currentOrder.separateCompletedItems}\n      offText={\"Don't separate completed items\"}\n      onText={\"Separate completed items\"}\n      onChange={setSeparateCompleteOnChange}\n      styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n    />,\n  );\n\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { gotoSubject } from \"../../Routing\";\nimport { Link } from \"react-router-dom\";\nimport { IconButton, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeChildView } from \"../../../views/model/RemoveChild\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewButtonsProps {\n  item: Item;\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewButtons({\n  item,\n  openModal,\n  showCloseButton,\n}: ListViewButtonsProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const openModalOnClick = useCallback((): void => {\n    openModal(item);\n  }, [item, openModal]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (item.viewId && item.id) {\n      dispatch(removeChildView(item.viewId, item.id));\n    }\n  }, [dispatch, item]);\n\n  const openLabel = \"Open \" + item.subject.name;\n  const editLabel = \"Edit \" + item.subject.name;\n  const closeLabel = \"Close \" + item.subject.name;\n\n  return (\n    <div className={styles.rowButtonWrapper}>\n      {showCloseButton ? (\n        <IconButton\n          onClick={removeChildViewOnClick}\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"Cancel\" }}\n          title={closeLabel}\n          ariaLabel={closeLabel}\n        />\n      ) : null}\n      <IconButton\n        onClick={openModalOnClick}\n        styles={{ root: { width: \"\" } }}\n        className={styles.rowButton}\n        iconProps={{ iconName: \"Edit\" }}\n        title={editLabel}\n        ariaLabel={editLabel}\n      />\n      <Link to={gotoSubject(\"list\", item.id)}>\n        <IconButton\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"OpenFile\" }}\n          title={openLabel}\n          ariaLabel={openLabel}\n        />\n      </Link>\n    </div>\n  );\n}\n","export const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n","import { IRectangle, List, ScrollToMode } from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { SubjectViewHookProps, useSubjectView } from \"./SubjectView\";\nimport Wrapper, { MIN_COL_WIDTH } from \"../../Wrapper\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { AllRouteComponentProps } from \"../../Routing\";\nimport AppCommandBar from \"../../AppCommandBar/AppCommandBar\";\nimport { Item } from \"../model/Subject\";\nimport { State } from \"../../Reducer\";\nimport SubjectComponent from \"./Subject\";\nimport { getDiffIndex } from \"./View\";\nimport { useCommandBar } from \"./UseCommandBar\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: \"100%\",\n    overflow: \"auto\",\n    overflowY: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\ninterface GridViewProps extends SubjectViewHookProps {\n  title?: JSX.Element;\n  showCloseButton?: boolean;\n}\n\nfunction GridView({\n  title,\n  history: _history,\n  location: _location,\n  match,\n  showCloseButton,\n  ...props\n}: GridViewProps & AllRouteComponentProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback(\n    (props?: Item): JSX.Element | undefined => {\n      if (!props) {\n        return;\n      }\n\n      return (\n        <div\n          className={styles.tile}\n          data-is-focusable={true}\n          key={props.id}\n          style={{\n            height: ROW_HEIGHT,\n            width: 100 / columnCount.current + \"%\",\n          }}\n        >\n          <div className={styles.padding}>\n            <div className={styles.contents}>\n              <SubjectComponent\n                showCloseButton={showCloseButton}\n                item={props}\n                listHeight={\"260px\"}\n                showOpenButton={true}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    },\n    [showCloseButton],\n  );\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  const commandBarItems = useCommandBar({ match, showSort: true, subjectId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <List\n          ref={gridRef}\n          className={styles.grid}\n          items={items}\n          getItemCountForPage={getItemCountForPage}\n          getPageHeight={getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={renderCell}\n        />\n      }\n      parentId={subjectId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(GridView);\n","import { GetItemsOptions, Item, getItems } from \"../model/Subject\";\nimport React, { useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport {\n  SetSortParameters,\n  SortField,\n  SortItemsOptions,\n  sortItems,\n} from \"../../Order\";\n\nimport GridView from \"./GridView\";\nimport ListView from \"./ListView/ListView\";\nimport { State } from \"../../Reducer\";\nimport { SubjectsRouteProps } from \"../Routing\";\nimport { getDisplay } from \"../../Display\";\nimport { isUndefined } from \"lodash\";\nimport { useSelector } from \"react-redux\";\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\nexport interface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = {};\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId } = match.params;\n  const display = getDisplay(location);\n\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(parentId) && !(parentId in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const options = { parentId };\n  // if (isUndefined(parentId)) {\n  if (display === \"list\") {\n    return <ListView options={options} />;\n  } else {\n    return <GridView options={options} />;\n  }\n}\n","import { APPBAR_HEIGHT, VIEW_TITLE_HEIGHT } from \"../../../Common\";\nimport { AllRouteComponentProps, Paths } from \"../../../Routing\";\nimport { DetailsList, SelectionMode } from \"office-ui-fabric-react\";\n\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../../AppCommandBar/Common\";\nimport AppCommandBar from \"../../../AppCommandBar/AppCommandBar\";\nimport { GetItemsOptions } from \"../../model/Subject\";\nimport ListViewContextMenu from \"./ListViewContextMenu\";\nimport ListViewModal from \"./ListViewModal\";\nimport React from \"react\";\nimport { SortItemsOptions } from \"../../../Order\";\nimport { State } from \"../../../Reducer\";\nimport Wrapper from \"../../../Wrapper\";\nimport { useCommandBar } from \"../UseCommandBar\";\nimport { useListViewContextMenu } from \"./UseListViewContextMenu\";\nimport { useListViewDetailsList } from \"./UseListViewDetailsList\";\nimport { useListViewModal } from \"./UseListViewModal\";\nimport { useListViewRender } from \"./UseListViewRender\";\nimport { useListViewScroll } from \"./UseListViewScroll\";\nimport { useSelector } from \"react-redux\";\nimport { useSubjectView } from \"../SubjectView\";\nimport { withRouter } from \"react-router-dom\";\n\ninterface ListViewProps {\n  title?: JSX.Element;\n  options?: GetItemsOptions;\n  showCloseButton?: boolean;\n  sortOptions?: SortItemsOptions;\n}\n\nfunction ListView({\n  title,\n  history,\n  match,\n  options,\n  showCloseButton,\n  sortOptions,\n}: ListViewProps & AllRouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const {\n    dispatchSetFieldsDesc,\n    getKey,\n    onItemInvoked,\n    reorder,\n  } = useListViewDetailsList({\n    history,\n    reorderParams,\n    sortFields,\n  });\n\n  const { dismissModal, modalItem, openModal, setModalItem } = useListViewModal(\n    subjects,\n  );\n  const { contextMenuProps, onItemContextMenu } = useListViewContextMenu(\n    setModalItem,\n    showCloseButton,\n  );\n\n  const columns = useListViewRender({\n    openModal,\n    showCloseButton,\n    sortFields,\n  });\n\n  const listRef = useListViewScroll({\n    componentOrder,\n    currentOrder,\n    parentId,\n    setCurrentOrder,\n    subjects,\n  });\n\n  const height = `calc(100vh - ${APPBAR_HEIGHT +\n    APP_COMMAND_BAR_HEIGHT +\n    (match.path === Paths.view ? VIEW_TITLE_HEIGHT : 0)}px)`;\n\n  const commandBarItems = useCommandBar({ match, subjectId: parentId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <React.Fragment>\n          <DetailsList\n            styles={{ root: { height } }}\n            getKey={getKey}\n            componentRef={listRef}\n            onColumnHeaderClick={dispatchSetFieldsDesc}\n            columns={columns}\n            items={items}\n            isHeaderVisible={true}\n            selectionMode={SelectionMode.none}\n            onItemInvoked={onItemInvoked}\n            onItemContextMenu={onItemContextMenu}\n            columnReorderOptions={{\n              frozenColumnCountFromEnd: 1,\n              frozenColumnCountFromStart: 0,\n              handleColumnReorder: reorder,\n            }}\n          />\n          {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n          <ListViewModal\n            modalItem={modalItem}\n            dismissModal={dismissModal}\n            showCloseButton={showCloseButton}\n          />\n        </React.Fragment>\n      }\n      parentId={parentId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(ListView);\n","import { useCallback } from \"react\";\nimport { setFieldsArray } from \"../../model/SetFieldsArray\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsDesc } from \"../../model/SetFieldsDesc\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../../../Order\";\nimport { Item } from \"../../model/Subject\";\nimport { History } from \"history\";\nimport { gotoSubject } from \"../../Routing\";\n\ninterface UseListViewDetailsList {\n  history: History;\n  sortFields: SortField[];\n  reorderParams: SetSortParameters;\n}\n\nexport function useListViewDetailsList({\n  history,\n  reorderParams,\n  sortFields,\n}: UseListViewDetailsList) {\n  const dispatch = useDispatch();\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(\"list\", item.id));\n    },\n    [history],\n  );\n\n  return { dispatchSetFieldsDesc, getKey, onItemInvoked, reorder };\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Item, SubjectState } from \"../../model/Subject\";\n\nexport interface UseListViewModal {\n  modalItem: Item | null;\n  setModalItem: React.Dispatch<React.SetStateAction<Item | null>>;\n  openModal: (item: Item) => void;\n  dismissModal: () => void;\n}\n\nexport function useListViewModal(subjects: SubjectState): UseListViewModal {\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem, setModalItem]);\n\n  return { dismissModal, modalItem, openModal, setModalItem };\n}\n","import { useCallback, useState } from \"react\";\nimport { IDetailsListProps } from \"office-ui-fabric-react\";\nimport { ListViewContextMenuProps } from \"./ListViewContextMenu\";\nimport { UseListViewModal } from \"./UseListViewModal\";\nimport { Item } from \"../../model/Subject\";\n\ninterface UseListViewContextMenu {\n  contextMenuProps: ListViewContextMenuProps | null;\n  onItemContextMenu: IDetailsListProps[\"onItemContextMenu\"];\n}\nexport function useListViewContextMenu(\n  setModalItem: UseListViewModal[\"setModalItem\"],\n  showCloseButton?: boolean,\n): UseListViewContextMenu {\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n          showCloseButton,\n        });\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu, showCloseButton, setModalItem],\n  );\n  return { contextMenuProps, onItemContextMenu };\n}\n","import React, { useCallback } from \"react\";\nimport { Item, Subject } from \"../../model/Subject\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport ListViewButtons from \"./ListViewButtons\";\nimport { SortField, SortFieldKey } from \"../../../Order\";\n\ninterface UseListView {\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n  sortFields: SortField[];\n}\n\nexport function useListViewRender({\n  openModal,\n  showCloseButton,\n  sortFields,\n}: UseListView) {\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => (\n      <ListViewButtons\n        item={item}\n        openModal={openModal}\n        showCloseButton={showCloseButton}\n      />\n    ),\n    [openModal, showCloseButton],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"itemButtons\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n  return columns;\n}\n","import { IDetailsList } from \"office-ui-fabric-react\";\nimport { useRef, useEffect } from \"react\";\nimport { getDiffIndex } from \"../View\";\nimport { UseSubjectView } from \"../SubjectView\";\nimport { SubjectState } from \"../../model/Subject\";\n\ninterface UseListViewScroll {\n  currentOrder: string[];\n  componentOrder: string[];\n  parentId?: string;\n  setCurrentOrder: UseSubjectView[\"setCurrentOrder\"];\n  subjects: SubjectState;\n}\n\nexport function useListViewScroll({\n  componentOrder,\n  currentOrder,\n  parentId,\n  setCurrentOrder,\n  subjects,\n}: UseListViewScroll) {\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  return listRef;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../subject/model/Subject\";\nimport ListView from \"../subject/components/ListView/ListView\";\nimport GridView from \"../subject/components/GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\nimport { getDisplay } from \"../Display\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\n\nexport const UPDATE_VIEW_NAME = \"UPDATE_VIEW_NAME\";\n\nexport interface UpdateViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const updateViewName = (\n  viewId: string,\n  name: string,\n): UpdateViewNameAction => ({\n  name,\n  type: UPDATE_VIEW_NAME,\n  viewId,\n});\n\nexport const updateViewNameReducer = (\n  { views }: State,\n  { name, viewId }: UpdateViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GridView from \"../../subject/components/GridView\";\nimport ListView from \"../../subject/components/ListView/ListView\";\nimport { Location } from \"history\";\nimport { Paths } from \"../../Routing\";\nimport { State } from \"../../Reducer\";\nimport TitleInput from \"../../TitleInput\";\nimport { ViewRouteProps } from \"../Routing\";\nimport { getDisplay } from \"../../Display\";\nimport { isUndefined } from \"lodash\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { updateViewName } from \"../model/Name\";\n\nconst styles = mergeStyleSets({\n  title: {\n    marginTop: 10,\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ location, viewId }: ViewProps): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(updateViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const display = getDisplay(location);\n\n  const options = { viewId };\n  const title = (\n    <TitleInput\n      className={styles.title}\n      value={localName}\n      onChange={onChange}\n      onBlur={updateName}\n    />\n  );\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} showCloseButton={true} title={title} />\n    ) : (\n      <ListView options={options} showCloseButton={true} title={title} />\n    );\n\n  return <div className={styles.wrapper}>{viewComponent}</div>;\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../../Order\";\nimport { ViewBaseAction } from \"./View\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import { AllParams, Paths } from \"../../../Routing\";\nimport {\n  CommandBar,\n  INavLink,\n  INavLinkGroup,\n  Nav,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RouteComponentProps } from \"react-router\";\nimport { State } from \"../../../Reducer\";\nimport { commandBarStyle } from \"../../../AppCommandBar/AppCommandBar\";\nimport { createView } from \"../../model/Create\";\nimport { gotoView } from \"../../Routing\";\nimport { subjectBase } from \"../../../subject/Routing\";\nimport { useGetCreateButtonItems } from \"./UseGetCreateButtonItems\";\n\nexport const viewsNavWidth = 208;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  navWrapper: {\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  nav: {\n    background: theme.palette.white,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: viewsNavWidth,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<AllParams>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n      ],\n    },\n  ];\n\n  if (viewGroup.links!.length > 0) {\n    groups[0].links.push(viewGroup);\n  }\n\n  groups[0].links.push({\n    icon: \"Add\",\n    key: \"createView\",\n    name: \"Create view\",\n    onClick: dispatchCreateView,\n    url: \"\",\n  });\n\n  const items = useGetCreateButtonItems(match.params);\n\n  return (\n    <div className={styles.navWrapper}>\n      <CommandBar items={items} styles={{ root: commandBarStyle }} />\n      <Nav\n        selectedKey={selectedKey}\n        expandButtonAriaLabel=\"Expand or collapse\"\n        className={styles.nav}\n        groups={groups}\n        styles={{ navItems: { margin: 0 } }}\n      />\n    </div>\n  );\n}\n","import ViewsNav from \"./ViewsNav\";\n\nexport default ViewsNav;\n","import { AllParams } from \"../../../Routing\";\nimport { ICommandBarItemProps } from \"office-ui-fabric-react\";\nimport { createSubject } from \"../../../subject/model/Create\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport function useGetCreateButtonItems({\n  parentId,\n  viewId,\n}: AllParams): ICommandBarItemProps[] {\n  const dispatch = useDispatch();\n\n  const createSubjectOnClick = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  return [\n    {\n      iconProps: {\n        iconName: parentId || viewId ? \"ChildOf\" : \"Add\",\n      },\n      key: \"createSubject\",\n      onClick: createSubjectOnClick,\n      text: parentId || viewId ? \"Create child subject\" : \"Create subject\",\n    },\n  ];\n}\n","import { AllPaths, Paths } from \"./Routing\";\nimport { Redirect, Route, Switch } from \"react-router\";\n\nimport AppBar from \"./AppBar\";\nimport React from \"react\";\nimport SearchResults from \"./Search/SearchResults\";\nimport SubjectView from \"./subject/components/SubjectView\";\nimport View from \"./views/components/View\";\nimport ViewsNav from \"./views/components/ViewsNav\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { subjectBase } from \"./subject/Routing\";\n\nconst styles = mergeStyleSets({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"auto\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState, SubjectTypes } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Name\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./model/Date\";\nimport {\n  CREATE_SUBJECT,\n  createSubjectReducer,\n  CreateSubjectAction,\n} from \"./model/Create\";\nimport {\n  REMOVE_CHILD_SUBJECT,\n  removeChildReducer,\n  RemoveChildAction,\n} from \"./model/RemoveChild\";\nimport {\n  APPEND_CHILD_SUBJECT,\n  AppendChildAction,\n  appendChildReducer,\n} from \"./model/AppendChild\";\nimport {\n  getInitialOrder,\n  sortItems,\n  getInitialSortItemsOptions,\n} from \"../Order\";\nimport {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"./model/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  setFieldsDescReducer,\n  SetFieldsDescAction,\n} from \"./model/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  setSeparateCompleteReducer,\n  SetSeparateCompleteAction,\n} from \"./model/SetSeparateComplete\";\nimport { isUndefined } from \"lodash\";\nimport { State } from \"../Reducer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      const { subjects } = draftState;\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(subjects, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            subjects,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(subjects, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(subjects, action as UncompleteSubjectAction);\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(subjects, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(subjects, action as SetSubjectDueDateAction);\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT:\n          removeChildReducer(subjects, action as RemoveChildAction);\n          break;\n        case APPEND_CHILD_SUBJECT:\n          appendChildReducer(subjects, action as AppendChildAction);\n          break;\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(subjects, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(subjects, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            subjects,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n      // Adds new `searchSortOptions` if it wasn't already in the state\n      if (isUndefined(subjects.searchSortOptions)) {\n        subjects.searchSortOptions = getInitialSortItemsOptions();\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import { ViewState } from \"./model/View\";\nimport { Action } from \"redux\";\nimport produce from \"immer\";\nimport { State } from \"../Reducer\";\nimport {\n  createViewReducer,\n  CREATE_VIEW,\n  CreateViewAction,\n} from \"./model/Create\";\nimport {\n  UPDATE_VIEW_NAME,\n  updateViewNameReducer,\n  UpdateViewNameAction,\n} from \"./model/Name\";\nimport {\n  AppendChildViewAction,\n  APPEND_CHILD_VIEW,\n  appendChildViewReducer,\n} from \"./model/AppendChild\";\nimport {\n  REMOVE_CHILD_VIEW,\n  RemoveChildViewAction,\n  removeChildViewReducer,\n} from \"./model/RemoveChild\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case UPDATE_VIEW_NAME:\n          updateViewNameReducer(draftState, action as UpdateViewNameAction);\n          break;\n        case APPEND_CHILD_VIEW:\n          appendChildViewReducer(draftState, action as AppendChildViewAction);\n          break;\n        case REMOVE_CHILD_VIEW:\n          removeChildViewReducer(draftState, action as RemoveChildViewAction);\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\nimport { ViewState } from \"./views/model/View\";\nimport viewReducer, { initialViewState } from \"./views/Reducer\";\n\nexport interface State {\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(initialReducer, subjectReducer, viewReducer);\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \"./Subject\";\n\ninterface PersistSubject\n  extends Omit<Subject, \"created\" | \"completed\" | \"dueDate\" | \"parents\"> {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \"./View\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    const orderSet = new Set<string>();\n    for (const viewId of state.order) {\n      orderSet.add(state.dict[viewId].name);\n    }\n    return { ...state, orderSet };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./subject/model/Transform\";\nimport transformViews from \"./views/model/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}