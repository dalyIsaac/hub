{"version":3,"sources":["Search/Routing.ts","Search/SearchBar.tsx","subject/Routing.ts","Display.ts","AppBar.tsx","Common.ts","Order.ts","subject/model/AppendChild.ts","subject/model/Create.ts","views/model/AppendChild.ts","subject/model/SetSeparateComplete.ts","AppCommandBar/Common.ts","subject/model/SetFieldsArray.ts","subject/model/SetFieldsDesc.ts","AppCommandBar/SortButton.tsx","views/Routing.ts","Routing.ts","AppCommandBar/AppCommandBar.tsx","TitleInput.tsx","subject/model/Subject.ts","subject/components/SimpleListView.tsx","subject/model/Name.ts","subject/model/Description.ts","subject/model/Completed.ts","subject/model/Delete.ts","subject/model/Date.ts","subject/components/ListItem/ListItemBase.tsx","subject/components/ListItem/AppendChildrenListItem.tsx","subject/components/AppendChildren.tsx","subject/model/RemoveChild.ts","subject/components/ListItem/SubjectListItem.tsx","subject/components/Subject.tsx","subject/components/View.ts","subject/components/GridView.tsx","subject/components/ListView/ListViewContextMenu.tsx","subject/components/ListView/ListView.tsx","subject/components/ViewWithSidebar.tsx","subject/components/SubjectView.tsx","Search/SearchResults.tsx","views/model/Create.ts","views/components/ViewsNav.tsx","views/model/Name.ts","views/components/View.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","views/Reducer.ts","Reducer.ts","subject/model/Transform.ts","views/model/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","styles","mergeStyleSets","search","display","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","subjectBase","gotoSubject","id","url","qs","stringify","getDisplay","location","parse","isUndefined","Array","isArray","updateDisplay","pathname","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","react_router_dom","to","Text","variant","sortItems","subjects","_ref3","order","_ref3$options","fields","separateCompletedItems","items","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","dict","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","appendChild","child","type","appendChildReducer","state","parentOrder","add","createSubject","objectSpread","v4","createSubjectReducer","subjectType","parentId","viewId","subject","name","created","Date","description","subjectsAppendChildReducer","subjectsAppendChild","views","viewsAppendChildReducer","viewsAppendChild","setSeparateComplete","parameters","BUTTON_HEIGHT","setFieldsArray","setFieldsDesc","dragEnterClass","neutralLight","gripperWrapper","justifyContent","cursor","wrapper","SortButton","setSearchOptions","draggedIndex","useRef","draggedItem","selection","Selection","target","calloutVisible","setShowCallout","dismissCallout","openCallout","dispatch","useDispatch","insertBeforeItem","item","draggedItems","current","isIndexSelected","getSelection","filter","itm","indexOf","insertIndex","splice","apply","toConsumableArray","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","checked","sortColumns","minWidth","onRender","Icon","iconName","fieldName","Toggle","root","margin","defaultChecked","offText","onText","Fragment","ref","CommandBarButton","iconProps","ariaLabel","onClick","Callout","onDismiss","hidden","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","onBlur","DetailsList","columns","selectionMode","SelectionMode","none","gotoView","Paths","base","view","viewBase","AllPaths","leftWrapper","rightWrapper","white","borderBottom","neutralQuaternary","paddingRight","position","zIndex","commandBarStyles","AppCommandBar","_match$params","_useSelector","useSelector","rootOrder","searchSortOptions","dispatchCreateChildSubject","dispatchCreateSubject","dispatchSetSeparateComplete","dispatchSetSeparateCompleteSearch","toggleView","leftComponents","rightComponents","path","createSubjectButton","marginBottom","marginLeft","marginRight","background","menuProps","directionalHintFixed","border","borderRadius","fontSize","FontSizes","size28","outline","paddingBottom","textAlign","&:focus","neutralTertiary","TitleInput","_ref$textAlign","style","getItems","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","getChildren","notifyNoChildren","childrenSet","i","has","FocusZone","role","aria-label","List","setSubjectName","setSubjectDescription","completeSubject","level","arguments","completeSubjectReducer","markAsComplete","date","uncompleteSubject","deleteSubject","setSubjectDueDate","gridTemplateRows","checkboxWrapper","checkbox","divider","gridColumn","marginTop","button","content","gridRow","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","newLabel","data-is-focusable","onContextMenu","Checkbox","TextField","borderless","ContextualMenu","bottomRightEdge","ListItem","AppendChildrenListItem","AppendChildrenHeight","padding","&:active","icon","AppendChildren","panelVisible","setPanelVisible","setMenuVisible","hidePanel","showPanel","toggleMenu","hideMenu","addChild","Panel","isOpen","isLightDismiss","headerText","removeChild","open","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","removeChildOnClick","deleteSubjectOnClick","completeContextItems","uncompleteContextItems","contextItems","buttonLabel","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","headerWrapper","header","borderTopLeftRadius","borderTopRightRadius","headerButton","borderBottomLeftRadius","borderBottomRightRadius","borderRight","borderTop","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeItem","deleteItem","dueDate","Math","ceil","valueOf","red","toLocaleString","DefaultButton","split","green","primary","headerOpenLabel","Stack","verticalAlign","multiline","rows","Label","DatePicker","onSelectDate","minHeight","getDiffIndex","oldOrder","newOrder","ROWS_PER_PAGE","ROW_HEIGHT","MIN_COL_WIDTH","grid","tile","float","contents","getPageHeight","GridView","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","currentOrder","setCurrentOrder","index","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","renderedWindowsAhead","ListViewContextMenu","ev","onEditClick","detailsList","rowButton","rowButtonWrapper","subjectWrapper","withRouter","sortOptions","reorderParams","sortFields","column","isSortedDescending","modalItem","setModalItem","dismissModal","openModal","renderSubjectString","_index","renderChildren","renderDate","renderButtons","openLabel","editLabel","onItemInvoked","columnsDict","isResizable","reorder","targetIndex","dragged","_","field","isSorted","listRef","focusIndex","getKey","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","Modal","main","sidebar","ViewWithSidebar","viewComponent","sidebarComponent","setOrder","SubjectView","windowSize","useWindowSize","react_router","ListView_ListView","parentSubject","innerWidth","searchParams","reduce","acc","curr","String","SearchResults","childId","includes","createView","nav","boxSizing","overflowY","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","Nav","expandButtonAriaLabel","updateViewName","ViewComponent","localName","setLocalName","updateName","View","App","component","Boolean","window","hostname","subjectReducer","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","removeChildReducer","_ref$parameters","setFieldsArrayReducer","f","setFieldsDescReducer","setSeparateCompleteReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","updateViewNameReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","objectWithoutProperties","_i","_Object$entries","entries","_ref4","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33507b7a.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../subject/model/Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { gotoSearch, SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { Subject } from \"../subject/model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import qs from \"query-string\";\nimport { DisplayOptions } from \"../Display\";\n\nexport interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n","import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport const updateDisplay = (\n  location: Location,\n  display: DisplayOptions,\n): string => `${location.pathname}?display=${display}`;\n","import React from \"react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport SearchBar from \"./Search/SearchBar\";\nimport { SearchRouteProps } from \"./Search/Routing\";\nimport { gotoSubject } from \"./subject/Routing\";\nimport { getDisplay } from \"./Display\";\nimport { APPBAR_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(\n  props: RouteComponentProps<SearchRouteProps>,\n): JSX.Element {\n  const display = getDisplay(props.location);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject(display)} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\n","import { Subject, SubjectDictState } from \"./subject/model/Subject\";\nimport { isUndefined } from \"lodash\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_SUBJECT = \"APPEND_CHILD_SUBJECT\";\n\nexport interface AppendChildAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChild = (\n  subjectId: string,\n  child: string,\n): AppendChildAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT,\n});\n\nexport const appendChildReducer = (\n  state: SubjectState,\n  { subjectId, child }: AppendChildAction,\n): void => {\n  const parentOrder = state.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(state.dict, parentOrder);\n  state.dict[child].parents.add(subjectId);\n};\n","import { Subject, SubjectTypes, SubjectBaseAction } from \"./Subject\";\nimport { v4 } from \"uuid\";\nimport { getInitialOrder } from \"../../Order\";\nimport {\n  appendChildReducer as subjectsAppendChildReducer,\n  appendChild as subjectsAppendChild,\n} from \"./AppendChild\";\nimport {\n  appendChildReducer as viewsAppendChildReducer,\n  appendChild as viewsAppendChild,\n} from \"../../views/model/AppendChild\";\nimport { State } from \"../../Reducer\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(\n      state.subjects,\n      subjectsAppendChild(parentId, subjectId),\n    );\n  }\n  if (viewId !== undefined) {\n    viewsAppendChildReducer(state, viewsAppendChild(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_VIEW = \"APPEND_CHILD_VIEW\";\n\nexport interface AppendChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendChild = (\n  viewId: string,\n  subjectId: string,\n): AppendChildViewAction => ({\n  subjectId,\n  type: APPEND_CHILD_VIEW,\n  viewId,\n});\n\nexport const appendChildReducer = (\n  { subjects, views }: State,\n  { subjectId, viewId }: AppendChildViewAction,\n): void => {\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n};\n","import { BaseAction } from \"../../Common\";\nimport { SubjectState } from \"./Subject\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends BaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nexport const setSeparateCompleteReducer = (\n  state: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import { SortField, sortItems, SetSortParameters } from \"../../Order\";\nimport { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends BaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nexport const setFieldsArrayReducer = (\n  state: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends BaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nexport const setFieldsDescReducer = (\n  state: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = state.dict[subjectId].children;\n        children.order = sortItems(state.dict, children);\n      }\n      return;\n    }\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../subject/model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../subject/model/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId }));\n    },\n    [dispatch, fields, subjectId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(setFieldsDesc(key, checked, { setSearchOptions, subjectId }));\n    },\n    [dispatch, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { searchBase } from \"./Search/Routing\";\nimport { subjectBase } from \"./subject/Routing\";\nimport { viewBase } from \"./views/Routing\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n","import React, { useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  CommandBarButton,\n  Toggle,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../subject/model/Create\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../subject/model/SetSeparateComplete\";\nimport { BUTTON_HEIGHT } from \"./Common\";\nimport SortButton from \"./SortButton\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SubjectsRouteProps, subjectBase } from \"../subject/Routing\";\nimport { getDisplay, updateDisplay } from \"../Display\";\nimport { SearchRouteProps, searchBase } from \"../Search/Routing\";\nimport { Paths } from \"../Routing\";\nimport { ViewRouteProps } from \"../views/Routing\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: BUTTON_HEIGHT,\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n    zIndex: 10,\n  },\n});\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ntype AppCommandbarProps = RouteComponentProps<\n  SubjectsRouteProps & SearchRouteProps & ViewRouteProps\n>;\n\nexport default function AppCommandBar({\n  match,\n  location,\n  history,\n}: AppCommandbarProps): JSX.Element {\n  const { parentId, viewId } = match.params;\n  const dispatch = useDispatch();\n  const display = getDisplay(location);\n\n  const { dict, order: rootOrder, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const dispatchCreateChildSubject = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  const dispatchCreateSubject = useCallback((): void => {\n    dispatch(createSubject());\n  }, [dispatch]);\n\n  const dispatchSetSeparateComplete = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId: parentId }));\n    },\n    [dispatch, parentId],\n  );\n\n  const dispatchSetSeparateCompleteSearch = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { setSearchOptions: true }));\n    },\n    [dispatch],\n  );\n\n  const toggleView = useCallback((): void => {\n    history.push(updateDisplay(location, display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, history, location]);\n\n  const leftComponents: JSX.Element[] = [];\n  const rightComponents: JSX.Element[] = [];\n\n  if (match.path === Paths.subject || match.path === subjectBase) {\n    const order =\n      parentId && parentId in dict\n        ? dict[parentId].children.options\n        : rootOrder.options;\n\n    const createSubjectButton = parentId ? (\n      <CommandBarButton\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />\n    ) : (\n      <CommandBarButton\n        text=\"Create subject\"\n        iconProps={{ iconName: \"Add\" }}\n        ariaLabel=\"Create subject\"\n        onClick={dispatchCreateSubject}\n        styles={commandBarStyles}\n      />\n    );\n\n    leftComponents.push(<div key=\"createSubject\">{createSubjectButton}</div>);\n\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton key=\"sort\" subjectId={parentId} fields={order.fields} />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={order.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateComplete}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.search || match.path === searchBase) {\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton\n          key=\"sort\"\n          setSearchOptions={true}\n          fields={searchSortOptions.fields}\n        />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={searchSortOptions.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateCompleteSearch}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.view) {\n    leftComponents.push(\n      <CommandBarButton\n        key=\"addSubjectToView\"\n        ariaLabel=\"Add subject to view\"\n        iconProps={{ iconName: \"Add\" }}\n        text=\"Add subject to view\"\n        // TODO: onClick\n        styles={commandBarStyles}\n      />,\n      <CommandBarButton\n        key=\"createSubjectForView\"\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />,\n    );\n  }\n\n  rightComponents.push(\n    <CommandBarButton\n      key=\"toggleView\"\n      ariaLabel=\"Toggle view\"\n      iconProps={{\n        iconName: display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n      }}\n      text={display === \"list\" ? \"List\" : \"Grid\"}\n      styles={{\n        root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n      }}\n      menuProps={{\n        directionalHintFixed: true,\n        items: [\n          display === \"list\"\n            ? {\n                iconProps: { iconName: \"GridViewMedium\" },\n                key: \"gridButton\",\n                onClick: toggleView,\n                text: \"Grid\",\n              }\n            : {\n                iconProps: { iconName: \"BulletedListText\" },\n                key: \"listButton\",\n                onClick: toggleView,\n                text: \"List\",\n              },\n        ],\n      }}\n    />,\n  );\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.leftWrapper}>{leftComponents}</div>\n      <div className={styles.rightWrapper}>{rightComponents}</div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id] };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FocusZone, List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  subjectId: string;\n  maxHeight: number | string;\n\n  /**\n   * If `true`, it gets all the children of the `subjectId`. If `false`, it gets\n   * all the subjects **except** the children of the `subjectId`.\n   */\n  getChildren?: boolean;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  subjectId,\n  maxHeight,\n  onRenderCell,\n  getChildren,\n  notifyNoChildren,\n}: ListViewProps): JSX.Element {\n  const { dict: subjects, order } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  let children;\n  if (getChildren) {\n    children = getItems(subjects, subjects[subjectId].children.order, {\n      parentId: subjectId,\n    });\n  } else {\n    const childrenSet = new Set(subjects[subjectId].children.order);\n    const condition = (i: Item): boolean =>\n      !childrenSet.has(i.id) && i.id !== subjectId;\n    children = getItems(subjects, order.order, {\n      condition,\n      parentId: subjectId,\n    });\n  }\n\n  return (\n    <FocusZone className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          There's nothing here{\" \"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </FocusZone>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.dict[subjectId].name = name;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.dict[subjectId].description = description;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState, SubjectDictState } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  dict: SubjectDictState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(dict, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state.dict, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.dict[subjectId].completed = undefined;\n  sortAllParents(state.dict, subjectId);\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state.dict[subjectId].parents) {\n    remove(\n      state.dict[parentId].children.order,\n      (s): boolean => s === subjectId,\n    );\n  }\n  for (const childId of state.dict[subjectId].children.order) {\n    state.dict[childId].parents.delete(subjectId);\n  }\n  remove(state.order.order, (s): boolean => s === subjectId);\n  sortAllParents(state.dict, subjectId);\n  delete state.dict[subjectId];\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: SubjectState,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.dict[subjectId].dueDate = date;\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { appendChild } from \"../../model/AppendChild\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"./ListItemBase\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChild(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Icon,\n  Text,\n  Panel,\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react\";\nimport SimpleListView from \"./SimpleListView\";\nimport AppendChildrenListItem from \"./ListItem/AppendChildrenListItem\";\nimport { useDispatch } from \"react-redux\";\nimport { createSubject } from \"../model/Create\";\nimport { border, gridTemplateColumns } from \"./ListItem/ListItemBase\";\n\nexport const AppendChildrenHeight = 32;\nconst panelHeaderHeight = 115;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"ChildOf\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subject\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          subjectId={parent}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${panelHeaderHeight})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      {menuVisible ? (\n        <ContextualMenu\n          isBeakVisible={false}\n          onDismiss={hideMenu}\n          target={target}\n          directionalHint={DirectionalHint.bottomRightEdge}\n          items={contextMenuItems}\n        />\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { remove } from \"lodash\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const REMOVE_CHILD_SUBJECT = \"REMOVE_CHILD_SUBJECT\";\n\nexport interface RemoveChildAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChild = (\n  subjectId: string,\n  parent: string,\n): RemoveChildAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT,\n});\n\nexport const removeChildReducer = (\n  state: SubjectState,\n  { subjectId, parent }: RemoveChildAction,\n): void => {\n  remove(state.dict[parent].children.order, (s): boolean => s === subjectId);\n  state.dict[subjectId].parents.delete(parent);\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { Link } from \"react-router-dom\";\nimport { removeChild } from \"../../model/RemoveChild\";\nimport ListItemBase from \"./ListItemBase\";\nimport { isUndefined } from \"lodash\";\nimport { setSubjectName } from \"../../model/Name\";\nimport { gotoSubject } from \"../../Routing\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChild(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Remove\" },\n      key: \"remove\",\n      onClick: removeChildOnClick,\n      text: \"Remove this as a child\",\n    },\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  FocusZone,\n  Stack,\n  Text,\n  TextField,\n  Label,\n  DatePicker,\n  DefaultButton,\n  IconButton,\n  DirectionalHint,\n} from \"office-ui-fabric-react\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { Subject } from \"../model/Subject\";\nimport TitleInput from \"../../TitleInput\";\nimport SimpleListView from \"./SimpleListView\";\nimport { setSubjectName } from \"../model/Name\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\nimport { setSubjectDueDate } from \"../model/Date\";\nimport AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport SubjectListItem from \"./ListItem/SubjectListItem\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../Routing\";\n\ninterface SubjectProps {\n  subject: Subject;\n  id: string;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    display: \"grid\",\n    gridTemplateColumns: \"auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"1 / 3\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n    selectors: {\n      \"&:focus\": {\n        border: \"none\",\n        outline: \"none\",\n      },\n    },\n  },\n  headerButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderRight: border,\n    borderTop: border,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    marginBottom: -1,\n    marginLeft: 0,\n    marginRight: -1,\n    marginTop: -1,\n    outline: \"none\",\n    zIndex: 2,\n  },\n  headerLink: {\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  subject,\n  id,\n  listHeight,\n  showOpenButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeItem = {\n    key: \"complete-2-level\",\n    text: \"Mark this and its children as complete\",\n    onClick: completeSubjectOnClick,\n  };\n  const deleteItem = {\n    key: \"delete\",\n    text: \"Delete this\",\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let header;\n  let heroButton;\n  if (!subject.completed) {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.green }}\n      >\n        Created {subject.created.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        primary\n        text=\"Mark as complete\"\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeItem, deleteItem],\n        }}\n      />\n    );\n  } else {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.red }}\n      >\n        Completed {subject.completed.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        text=\"Mark as uncomplete\"\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const headerOpenLabel = \"Open \" + subject.name;\n\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <div className={styles.headerWrapper}>\n          {header}\n          {showOpenButton ? (\n            <Link to={gotoSubject(\"grid\", id)} className={styles.headerLink}>\n              <IconButton\n                styles={{ root: { width: \"\" } }}\n                className={styles.headerButton}\n                iconProps={{ iconName: \"OpenFile\" }}\n                title={headerOpenLabel}\n                ariaLabel={headerOpenLabel}\n              />\n            </Link>\n          ) : null}\n        </div>\n\n        <div className={styles.body}>\n          <TitleInput\n            textAlign=\"center\"\n            className={styles.title}\n            value={name}\n            onChange={setNameLocal}\n            onBlur={setNameRedux}\n          />\n          <TextField\n            multiline\n            rows={3}\n            value={description}\n            onChange={setDescriptionLocal}\n            onBlur={setDescriptionRedux}\n            className={styles.description}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <div className={styles.datePicker}>\n              <DatePicker\n                value={subject.dueDate}\n                onSelectDate={setDueDateRedux}\n              />\n              {subject.dueDate ? (\n                <IconButton\n                  iconProps={{ iconName: \"cancel\" }}\n                  title=\"Clear date\"\n                  onClick={clearDueDateOnClick}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>\n              {`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}\n            </Label>\n          </div>\n          <div\n            style={{\n              minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n            }}\n          >\n            <SimpleListView\n              subjectId={id}\n              maxHeight={`calc(${listHeight})`}\n              onRenderCell={SubjectListItem}\n              getChildren={true}\n            />\n            <AppendChildren parent={id} />\n          </div>\n          <div className={styles.heroButton}>{heroButton}</div>\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","export const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport { List, IRectangle, ScrollToMode } from \"office-ui-fabric-react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Item } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../Common\";\nimport { getDiffIndex } from \"./View\";\nimport { useSubjectView, SubjectViewHookProps } from \"./SubjectView\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n    overflow: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\nexport default function GridView(props: SubjectViewHookProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback((props?: Item): JSX.Element | undefined => {\n    if (!props) {\n      return;\n    }\n\n    const { id, subject } = props;\n    return (\n      <div\n        className={styles.tile}\n        data-is-focusable={true}\n        key={id}\n        style={{\n          height: ROW_HEIGHT,\n          width: 100 / columnCount.current + \"%\",\n        }}\n      >\n        <div className={styles.padding}>\n          <div className={styles.contents}>\n            <SubjectComponent\n              subject={subject}\n              id={id}\n              listHeight={\"260px\"}\n              showOpenButton={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }, []);\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  return (\n    <List\n      ref={gridRef}\n      className={styles.grid}\n      items={items}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport {\n  ContextualMenu,\n  IContextualMenuItem,\n  DirectionalHint,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport {\n  IColumn,\n  DetailsList,\n  SelectionMode,\n  mergeStyleSets,\n  IDetailsList,\n  IconButton,\n  getTheme,\n  Modal,\n} from \"office-ui-fabric-react\";\nimport { Subject, GetItemsOptions, Item } from \"../../model/Subject\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../../Reducer\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../../Common\";\nimport { SortItemsOptions, SortFieldKey } from \"../../../Order\";\nimport { gotoSubject } from \"../../Routing\";\nimport { RouteComponentProps, withRouter, Link } from \"react-router-dom\";\nimport { setFieldsArray } from \"../../model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../../model/SetFieldsDesc\";\nimport { getDiffIndex } from \"../View\";\nimport SubjectComponent from \"../Subject\";\nimport ListViewContextMenu, {\n  ListViewContextMenuProps,\n} from \"./ListViewContextMenu\";\nimport { useSubjectView } from \"../SubjectView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  detailsList: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n  },\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n}\n\nfunction ListView({\n  history,\n  options,\n  sortOptions,\n}: ListViewProps & RouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem]);\n\n  //#region Render\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => {\n      const openLabel = \"Open \" + item.subject.name;\n      const editLabel = \"Edit \" + item.subject.name;\n      return (\n        <div className={styles.rowButtonWrapper}>\n          <IconButton\n            onClick={(): void => openModal(item)}\n            styles={{ root: { width: \"\" } }}\n            className={styles.rowButton}\n            iconProps={{ iconName: \"Edit\" }}\n            title={editLabel}\n            ariaLabel={editLabel}\n          />\n          <Link to={gotoSubject(\"list\", item.id)}>\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.rowButton}\n              iconProps={{ iconName: \"OpenFile\" }}\n              title={openLabel}\n              ariaLabel={openLabel}\n            />\n          </Link>\n        </div>\n      );\n    },\n    [openModal],\n  );\n  //#endregion\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(\"list\", item.id));\n    },\n    [history],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"openButton\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n        });\n\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu],\n  );\n\n  return (\n    <React.Fragment>\n      <DetailsList\n        getKey={getKey}\n        componentRef={listRef}\n        onColumnHeaderClick={dispatchSetFieldsDesc}\n        className={styles.detailsList}\n        columns={columns}\n        items={items}\n        isHeaderVisible={true}\n        selectionMode={SelectionMode.none}\n        onItemInvoked={onItemInvoked}\n        onItemContextMenu={onItemContextMenu}\n        columnReorderOptions={{\n          frozenColumnCountFromEnd: 1,\n          frozenColumnCountFromStart: 0,\n          handleColumnReorder: reorder,\n        }}\n      />\n      {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n      <Modal\n        isOpen={!!modalItem}\n        onDismiss={dismissModal}\n        styles={{\n          main: {\n            backgroundColor: \"none\",\n            border: \"1px solid transparent\",\n            borderRadius: 4,\n          },\n        }}\n      >\n        <div className={styles.subjectWrapper}>\n          {modalItem ? (\n            <SubjectComponent\n              id={modalItem.id}\n              subject={modalItem.subject}\n              showOpenButton={true}\n            />\n          ) : null}\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(ListView);\n","import React from \"react\";\nimport { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport { MIN_COL_WIDTH } from \"./GridView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    gridColumn: \"2\",\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n});\n\ninterface ViewWithSidebarProps {\n  viewComponent: JSX.Element;\n  sidebarComponent: JSX.Element;\n}\n\nexport default function ViewWithSidebar({\n  viewComponent,\n  sidebarComponent,\n}: ViewWithSidebarProps): JSX.Element {\n  return (\n    <div className={styles.wrapper}>\n      {viewComponent}\n      <div className={styles.sidebar}>{sidebarComponent}</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SubjectsRouteProps } from \"../Routing\";\nimport { getDisplay } from \"../../Display\";\nimport GridView, { MIN_COL_WIDTH } from \"./GridView\";\nimport { isUndefined } from \"lodash\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport ListView from \"./ListView/ListView\";\nimport ViewWithSidebar from \"./ViewWithSidebar\";\nimport { GetItemsOptions, getItems, Item } from \"../model/Subject\";\nimport {\n  SortItemsOptions,\n  sortItems,\n  SortField,\n  SetSortParameters,\n} from \"../../Order\";\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\ninterface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = {};\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId: id } = match.params;\n  const display = getDisplay(location);\n\n  const windowSize = useWindowSize();\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(id) && !(id in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (isUndefined(id)) {\n    if (display === \"list\") {\n      return <ListView />;\n    } else {\n      return <GridView />;\n    }\n  }\n\n  const parentSubject = <SubjectComponent subject={dict[id]} id={id} />;\n  if (windowSize.innerWidth > MIN_COL_WIDTH * 2) {\n    const options = { parentId: id };\n    return (\n      <ViewWithSidebar\n        viewComponent={\n          display === \"grid\" ? (\n            <GridView options={options} />\n          ) : (\n            <ListView options={options} />\n          )\n        }\n        sidebarComponent={parentSubject}\n      />\n    );\n  }\n\n  return parentSubject;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../subject/model/Subject\";\nimport ListView from \"../subject/components/ListView/ListView\";\nimport GridView from \"../subject/components/GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\nimport { getDisplay } from \"../Display\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../../Order\";\nimport { ViewBaseAction } from \"./View\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Nav,\n  getTheme,\n  mergeStyleSets,\n  INavLinkGroup,\n  INavLink,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createView } from \"../model/Create\";\nimport { State } from \"../../Reducer\";\nimport { RouteComponentProps } from \"react-router\";\nimport { ViewRouteProps, gotoView } from \"../Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"../../subject/Routing\";\nimport { Paths } from \"../../Routing\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  nav: {\n    background: theme.palette.white,\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: 208,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<SubjectsRouteProps & ViewRouteProps>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n        viewGroup,\n        {\n          icon: \"Add\",\n          key: \"createView\",\n          name: \"Create view\",\n          onClick: dispatchCreateView,\n          url: \"\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Nav\n      selectedKey={selectedKey}\n      expandButtonAriaLabel=\"Expand or collapse\"\n      className={styles.nav}\n      groups={groups}\n    />\n  );\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\n\nexport const UPDATE_VIEW_NAME = \"UPDATE_VIEW_NAME\";\n\nexport interface UpdateViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const updateViewName = (\n  viewId: string,\n  name: string,\n): UpdateViewNameAction => ({\n  name,\n  type: UPDATE_VIEW_NAME,\n  viewId,\n});\n\nexport const updateViewNameReducer = (\n  { views }: State,\n  { name, viewId }: UpdateViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\nimport { ViewRouteProps } from \"../Routing\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { isUndefined } from \"lodash\";\nimport GridView from \"../../subject/components/GridView\";\nimport ListView from \"../../subject/components/ListView/ListView\";\nimport { getDisplay } from \"../../Display\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport TitleInput from \"../../TitleInput\";\nimport { Paths } from \"../../Routing\";\nimport { updateViewName } from \"../model/Name\";\nimport { Location } from \"history\";\n\nconst styles = mergeStyleSets({\n  title: {\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    padding: 5,\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ location, viewId }: ViewProps): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(updateViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const display = getDisplay(location);\n\n  const options = { viewId };\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} />\n    ) : (\n      <ListView options={options} />\n    );\n\n  return (\n    <div className={styles.wrapper}>\n      <TitleInput\n        className={styles.title}\n        value={localName}\n        onChange={onChange}\n        onBlur={updateName}\n      />\n      {viewComponent}\n    </div>\n  );\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport AppBar from \"./AppBar\";\nimport AppCommandBar from \"./AppCommandBar/AppCommandBar\";\nimport SubjectView from \"./subject/components/SubjectView\";\nimport { AllPaths, Paths } from \"./Routing\";\nimport SearchResults from \"./Search/SearchResults\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport ViewsNav from \"./views/components/ViewsNav\";\nimport { subjectBase } from \"./subject/Routing\";\nimport View from \"./views/components/View\";\n\nconst styles = mergeStyleSets({\n  main: {\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <Route path={AllPaths} component={AppCommandBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState, SubjectTypes } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Name\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./model/Date\";\nimport {\n  CREATE_SUBJECT,\n  createSubjectReducer,\n  CreateSubjectAction,\n} from \"./model/Create\";\nimport {\n  REMOVE_CHILD_SUBJECT,\n  removeChildReducer,\n  RemoveChildAction,\n} from \"./model/RemoveChild\";\nimport {\n  APPEND_CHILD_SUBJECT,\n  AppendChildAction,\n  appendChildReducer,\n} from \"./model/AppendChild\";\nimport {\n  getInitialOrder,\n  sortItems,\n  getInitialSortItemsOptions,\n} from \"../Order\";\nimport {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"./model/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  setFieldsDescReducer,\n  SetFieldsDescAction,\n} from \"./model/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  setSeparateCompleteReducer,\n  SetSeparateCompleteAction,\n} from \"./model/SetSeparateComplete\";\nimport { isUndefined } from \"lodash\";\nimport { State } from \"../Reducer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      const { subjects } = draftState;\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(subjects, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            subjects,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(subjects, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(subjects, action as UncompleteSubjectAction);\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(subjects, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(subjects, action as SetSubjectDueDateAction);\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT:\n          removeChildReducer(subjects, action as RemoveChildAction);\n          break;\n        case APPEND_CHILD_SUBJECT:\n          appendChildReducer(subjects, action as AppendChildAction);\n          break;\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(subjects, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(subjects, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            subjects,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n      // Adds new `searchSortOptions` if it wasn't already in the state\n      if (isUndefined(subjects.searchSortOptions)) {\n        subjects.searchSortOptions = getInitialSortItemsOptions();\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import { ViewState } from \"./model/View\";\nimport { Action } from \"redux\";\nimport produce from \"immer\";\nimport { State } from \"../Reducer\";\nimport {\n  createViewReducer,\n  CREATE_VIEW,\n  CreateViewAction,\n} from \"./model/Create\";\nimport {\n  UPDATE_VIEW_NAME,\n  updateViewNameReducer,\n  UpdateViewNameAction,\n} from \"./model/Name\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case UPDATE_VIEW_NAME:\n          updateViewNameReducer(draftState, action as UpdateViewNameAction);\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\nimport { ViewState } from \"./views/model/View\";\nimport viewReducer, { initialViewState } from \"./views/Reducer\";\n\nexport interface State {\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(initialReducer, subjectReducer, viewReducer);\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \"./Subject\";\n\ninterface PersistSubject\n  extends Omit<Subject, \"created\" | \"completed\" | \"dueDate\" | \"parents\"> {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \"./View\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    return { ...state, orderSet: new Set(state.order) };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./subject/model/Transform\";\nimport transformViews from \"./views/model/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}