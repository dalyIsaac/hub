{"version":3,"sources":["model/Search/Routing.ts","model/Subject/Routing.ts","model/Views/Routing.ts","Routing.ts","Common.ts","components/SearchBar.tsx","Display.ts","components/AppBar.tsx","components/AppCommandBar/Common.ts","components/AppCommandBar/index.tsx","components/SubjectButtonsProps.ts","model/Order/index.ts","model/Subject/CompleteSubject.ts","model/Subject/DeleteSubject.ts","model/Views/RemoveSubjectFromView.ts","components/ListView/ListViewContextMenu.tsx","components/ListItem/ListItemBase.tsx","model/Subject/AppendChildSubjectToSubject.ts","components/ListItem/AppendChildrenListItem.tsx","model/Subject/index.ts","components/SimpleListView.tsx","model/Views/AppendSubjectToView.ts","model/Subject/CreateSubject.ts","components/Subject/AppendChildren.tsx","model/Subject/RemoveChildSubjectFromSubject.ts","model/Subject/SetSubjectName.ts","components/ListItem/SubjectListItem.tsx","components/TitleInput.tsx","model/Subject/SetSubjectDescription.ts","model/Subject/SetSubjectDueDate.ts","components/Subject/index.tsx","components/ListView/ListViewModal.tsx","components/Wrapper.tsx","components/View/AppendChildrenListItem.tsx","components/View/AppendChildren.tsx","model/Order/SetFieldsArray.ts","model/Order/SetFieldsDesc.ts","components/AppCommandBar/SortButton.tsx","model/Order/SetSeparateComplete.ts","components/UseCommandBar.tsx","components/ListView/ListViewButtons.tsx","components/GridView.tsx","components/SubjectView.tsx","components/ListView/index.tsx","components/ListView/UseListViewDetailsList.ts","components/ListView/UseListViewModal.tsx","components/ListView/UseListViewContextMenu.tsx","components/ListView/UseListViewRender.tsx","components/ListView/UseListViewScroll.ts","components/SearchResults.tsx","model/Views/SetViewName.ts","components/View/index.tsx","model/Views/CreateView.ts","components/ViewsNav/index.tsx","components/ViewsNav/UseGetCreateButtonItems.ts","App.tsx","ServiceWorker.ts","model/Subject/Reducer.ts","model/Views/Reducer.ts","model/Order/Reducer.ts","Reducer.ts","model/Subject/Transform.ts","model/Views/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","subjectBase","gotoSubject","display","id","url","qs","stringify","gotoView","viewId","Paths","base","search","subject","view","viewBase","AllPaths","APPBAR_HEIGHT","PANEL_HEADER_HEIGHT","VIEW_TITLE_HEIGHT","styles","mergeStyleSets","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","getDisplay","location","parse","isUndefined","Array","isArray","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","_match$params","parentId","isSubjects","path","isSearch","isViews","_useSelector","useSelector","state","subjects","views","titleChild","dict","name","document","react_router_dom","to","Text","variant","APP_COMMAND_BAR_HEIGHT","BUTTON_HEIGHT","commandBarStyle","borderBottom","neutralQuaternary","margin","padding","zIndex","leftWrapper","rightWrapper","wrapper","objectSpread","white","justifyContent","paddingRight","position","withRouter","items","farItems","toggleView","pathname","updateDisplay","CommandBarButton","ariaLabel","iconProps","iconName","root","background","menuProps","directionalHintFixed","onClick","completeItem","completeWithChildrenItem","uncompleteItem","removeItem","deleteItem","sortItems","_ref3","order","_ref3$options","fields","separateCompletedItems","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","sortAllViews","_ref4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","completeSubject","level","arguments","type","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","removeSubjectFromView","ListViewContextMenu","item","showCloseButton","ev","onDismiss","onEditClick","dispatch","useDispatch","checked","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","deleteSubjectOnClick","editClick","removeChildViewOnClick","completeContextItems","uncompleteContextItems","contextItems","toConsumableArray","ContextualMenu","target","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","border","neutralTertiary","borderRadius","gridTemplateRows","marginBottom","checkboxWrapper","checkbox","divider","gridColumn","marginTop","button","content","gridRow","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","useRef","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","onBlur","newLabel","data-is-focusable","onContextMenu","ref","Checkbox","TextField","borderless","hidden","bottomRightEdge","appendChildSubjectToSubject","child","appendChildSubjectToSubjectReducer","parentOrder","add","ListItem","AppendChildrenListItem","getItems","current","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","illegalIds","notifyNoChildren","i","has","style","role","aria-label","List","appendSubjectToView","appendSubjectToViewReducer","createSubject","v4","AppendChildrenHeight","cursor","outline","&:active","filter","&:focus","icon","fontSize","textAlign","AppendChildren","panelVisible","setPanelVisible","setMenuVisible","hidePanel","showPanel","toggleMenu","hideMenu","addChild","Fragment","Icon","Panel","isOpen","isLightDismiss","headerText","removeChildSubjectFromSubject","setSubjectName","open","removeChildOnClick","buttonLabel","tabIndex","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","FontSizes","size28","paddingBottom","TitleInput","_ref$textAlign","setSubjectDescription","description","setSubjectDueDate","focusBorder","headerWrapper","borderTopLeftRadius","borderTopRightRadius","header","neutralLight","headerOpenButton","borderBottomLeftRadius","borderBottomRightRadius","headerCloseButton","red","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","_ref$item","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeSubjectOnClick","completeButtonItem","deleteButtonItem","dueDate","Math","ceil","valueOf","toLocaleDateString","DefaultButton","split","green","created","primary","headerOpenLabel","headerCloseLabel","Stack","verticalAlign","resizable","multiline","rows","field","Label","DatePicker","disableAutoFocus","onSelectDate","minHeight","subjectWrapper","ListViewModal","modalItem","dismissModal","Modal","main","MIN_COL_WIDTH","mainWrapper","sidebar","minWidth","Wrapper","commandBar","windowSize","useWindowSize","innerWidth","AppendChildrenListItem_ListItem","react_router","setFieldsArray","parameters","setFieldsArrayReducer","action","setViews","_ref$parameters","setSearchOptions","searchSortOptions","setSubjects","setFieldsDesc","setFieldsDescReducer","f","dragEnterClass","gripperWrapper","SortButton","draggedIndex","draggedItem","selection","Selection","calloutVisible","setShowCallout","dismissCallout","openCallout","insertBeforeItem","draggedItems","isIndexSelected","getSelection","itm","indexOf","insertIndex","splice","apply","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","sortColumns","onRender","fieldName","Toggle","defaultChecked","offText","onText","Callout","DetailsList","columns","selectionMode","SelectionMode","none","setSeparateComplete","setSeparateCompleteReducer","commandBarStyles","useCommandBar","currentOrder","showSort","setSeparateCompleteOnChange","panelOpen","setShowPanel","AppendChildren_AppendChildren","marginLeft","marginRight","rowButton","rowButtonWrapper","ListViewButtons","openModal","openModalOnClick","openLabel","editLabel","closeLabel","ROWS_PER_PAGE","ROW_HEIGHT","grid","overflowY","tile","float","contents","getPageHeight","objectWithoutProperties","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","setCurrentOrder","index","getDiffIndex","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","commandBarItems","components_AppCommandBar","renderedWindowsAhead","oldOrder","newOrder","sortOptions","sortFields","reorderParams","setOrder","SubjectView","components_ListView","components_GridView","_useListViewDetailsLi","reorder","targetIndex","dragged","_","column","isSortedDescending","getKey","onItemInvoked","useListViewDetailsList","_useListViewModal","setModalItem","useListViewModal","_useListViewContextMe","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","useListViewContextMenu","renderSubjectString","_index","renderChildren","toLocaleString","renderDate","renderButtons","columnsDict","isResizable","isSorted","useListViewRender","listRef","focusIndex","useListViewScroll","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","searchParams","reduce","acc","curr","String","SearchResults","childId","includes","setViewName","ViewComponent","localName","setLocalName","updateName","viewComponent","View","createView","navWrapper","borderRight","nav","boxSizing","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","createSubjectOnClick","useGetCreateButtonItems","CommandBar","Nav","expandButtonAriaLabel","navItems","App","component","Boolean","window","hostname","subjectReducer","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","deleteId","arr","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","subjectsAppendChildReducer","subjectsAppendChild","createSubjectReducer","removeChildSubjectFromSubjectReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","setViewNameReducer","removeSubjectFromViewReducer","orderReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","_i","_Object$entries","entries","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee60fff1.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","import qs from \"query-string\";\nimport { DisplayOptions } from \"../../Display\";\n\nexport interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { SearchRouteProps, searchBase } from \"./model/Search/Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"./model/Subject/Routing\";\nimport { ViewRouteProps, viewBase } from \"./model/Views/Routing\";\n\nimport { RouteComponentProps } from \"react-router\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n\nexport type AllParams = SubjectsRouteProps & SearchRouteProps & ViewRouteProps;\nexport type AllRouteComponentProps = RouteComponentProps<AllParams>;\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\nexport const PANEL_HEADER_HEIGHT = 115;\nexport const VIEW_TITLE_HEIGHT = 71;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  gotoSearch,\n  SearchRouteProps,\n  getSearchMatch,\n} from \"../model/Search/Routing\";\nimport { Subject } from \"../model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport const updateDisplay = (\n  location: Location,\n  display: DisplayOptions,\n): string => `${location.pathname}?display=${display}`;\n","import { AllRouteComponentProps, Paths } from \"../Routing\";\nimport React, { useEffect } from \"react\";\nimport { getSearchMatch, searchBase } from \"../model/Search/Routing\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { gotoSubject, subjectBase } from \"../model/Subject/Routing\";\n\nimport { APPBAR_HEIGHT } from \"../Common\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport { State } from \"../Reducer\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { getDisplay } from \"../Display\";\nimport { useSelector } from \"react-redux\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(props: AllRouteComponentProps): JSX.Element {\n  const display = getDisplay(props.location);\n\n  const { match } = props;\n  const { parentId, viewId } = match.params;\n\n  const isSubjects = match.path === Paths.subject || match.path === subjectBase;\n  const isSearch = match.path === Paths.search || match.path === searchBase;\n  const isViews = match.path === Paths.view && viewId;\n\n  const { subjects, views } = useSelector((state: State) => state);\n\n  // Responsive page title\n  useEffect((): void => {\n    let path: string | null = null;\n    let titleChild: string | null = null;\n    if (isSubjects) {\n      path = \"subjects\";\n      if (parentId) {\n        titleChild = subjects.dict[parentId].name;\n      }\n    } else if (isSearch) {\n      const [param, query] = getSearchMatch(match);\n      path = \"search/\" + param;\n      titleChild = query;\n    } else if (isViews) {\n      if (viewId) {\n        path = \"views\";\n        titleChild = views.dict[viewId].name;\n      }\n    }\n\n    if (path) {\n      if (titleChild) {\n        document.title = `hub/${path}: ${titleChild}`;\n      } else {\n        document.title = `hub/${path}`;\n      }\n    } else {\n      document.title = `hub`;\n    }\n  }, [\n    isSubjects,\n    parentId,\n    subjects.dict,\n    isSearch,\n    match,\n    isViews,\n    viewId,\n    views.dict,\n  ]);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject(display)} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import {\n  CommandBarButton,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { getDisplay, updateDisplay } from \"../../Display\";\n\nimport { BUTTON_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\n\nexport const commandBarStyle = {\n  borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n  boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n  height: BUTTON_HEIGHT,\n  margin: 0,\n  padding: 0,\n  zIndex: 10,\n};\n\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    ...commandBarStyle,\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n  },\n});\n\ninterface AppCommandBarProps {\n  items: JSX.Element[];\n  farItems?: JSX.Element[];\n}\n\nexport default withRouter(function AppCommandBar({\n  items,\n  farItems,\n  location,\n  history,\n}: AppCommandBarProps & RouteComponentProps) {\n  const display = getDisplay(location);\n\n  const toggleView = useCallback((): void => {\n    history.push(updateDisplay(location, display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, history, location]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.leftWrapper}>{items}</div>\n      <div className={styles.rightWrapper}>\n        {farItems}\n        <CommandBarButton\n          key=\"toggleView\"\n          ariaLabel=\"Toggle view\"\n          iconProps={{\n            iconName:\n              display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n          }}\n          text={display === \"list\" ? \"List\" : \"Grid\"}\n          styles={{\n            root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n          }}\n          menuProps={{\n            directionalHintFixed: true,\n            items: [\n              display === \"list\"\n                ? {\n                    iconProps: { iconName: \"GridViewMedium\" },\n                    key: \"gridButton\",\n                    onClick: toggleView,\n                    text: \"Grid\",\n                  }\n                : {\n                    iconProps: { iconName: \"BulletedListText\" },\n                    key: \"listButton\",\n                    onClick: toggleView,\n                    text: \"List\",\n                  },\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","export const completeItem = {\n  iconProps: { iconName: \"Completed\" },\n  key: \"complete-1-level\",\n  text: \"Mark as complete\",\n};\n\nexport const completeWithChildrenItem = {\n  iconProps: { iconName: \"CompletedSolid\" },\n  key: \"complete-2-level\",\n  text: \"Mark this and its children as complete\",\n};\n\nexport const uncompleteItem = {\n  iconProps: { iconName: \"Blocked2\" },\n  key: \"uncomplete\",\n  text: \"Mark as incomplete\",\n};\n\nexport const removeItem = {\n  iconProps: { iconName: \"Remove\" },\n  key: \"remove\",\n  text: \"Remove this as a child\",\n};\n\nexport const deleteItem = {\n  iconProps: { iconName: \"Delete\" },\n  key: \"delete\",\n  text: \"Delete this\",\n};\n","import { Subject, SubjectDictState } from \"../Subject\";\nimport { isUndefined } from \"lodash\";\nimport { BaseAction } from \"../../Common\";\nimport { State } from \"../../Reducer\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport interface OrderBaseAction extends BaseAction {\n  subjectId?: string;\n  viewId?: string;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    } else if (typeof a === \"string\" && typeof b === \"string\") {\n      a = a.toLowerCase();\n      b = b.toLowerCase();\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport function sortAllViews(\n  { views, subjects: { dict } }: State,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].views) {\n    const view = views.dict[id].children;\n    view.order = sortItems(dict, view);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set, it corresponds to the GUI of a view.\n   */\n  viewId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  state: State,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  const {\n    subjects: { dict },\n  } = state;\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    sortAllViews(state, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(state, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: State,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: State,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.subjects.dict[subjectId].completed = undefined;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\n\nimport { remove } from \"lodash\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: State,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  const { subjects, views } = state;\n  function deleteId(arr: string[]) {\n    remove(arr, (i) => i === subjectId);\n  }\n\n  const subject = subjects.dict[subjectId];\n\n  // Delete subjectId from its parents' order array\n  for (const parentId of subject.parents) {\n    deleteId(subjects.dict[parentId].children.order);\n  }\n\n  // Delete subjectId from its children parents' set\n  for (const childId of subject.children.order) {\n    subjects.dict[childId].parents.delete(subjectId);\n  }\n\n  // Delete subjectId from the subject list\n  deleteId(subjects.order.order);\n\n  // Delete subjectId from views\n  for (const viewId of subject.views) {\n    deleteId(views.dict[viewId].children.order);\n  }\n\n  sortAllParents(subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n  delete subjects.dict[subjectId];\n};\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\nimport { remove } from \"lodash\";\nimport { sortAllViews } from \"../Order\";\n\nexport const REMOVE_SUBJECT_FROM_VIEW = \"REMOVE_SUBJECT_FROM_VIEW\";\n\nexport interface RemoveSubjectFromViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const removeSubjectFromView = (\n  viewId: string,\n  subjectId: string,\n): RemoveSubjectFromViewAction => ({\n  subjectId,\n  type: REMOVE_SUBJECT_FROM_VIEW,\n  viewId,\n});\n\nexport const removeSubjectFromViewReducer = (\n  state: State,\n  { subjectId, viewId }: RemoveSubjectFromViewAction,\n): void => {\n  const { views } = state;\n  const view = views.dict[viewId];\n  remove(view.children.order, (v): boolean => v === subjectId);\n  sortAllViews(state, subjectId);\n};\n","import {\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\n\nimport { Item } from \"../../model/Subject\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { useDispatch } from \"react-redux\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  showCloseButton?: boolean;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  showCloseButton,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id, viewId } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeSubjectFromView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  if (showCloseButton) {\n    contextItems.push({\n      iconProps: { iconName: \"Cancel\" },\n      key: \"removeChildView\",\n      onClick: removeChildViewOnClick,\n      text: \"Remove this subject from this view\",\n    });\n  }\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import { SubjectBaseAction } from \".\";\n\nimport { sortItems, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const APPEND_CHILD_SUBJECT_TO_SUBJECT =\n  \"APPEND_CHILD_SUBJECT_TO_SUBJECT\";\n\nexport interface AppendChildSubjectToSubjectAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChildSubjectToSubject = (\n  subjectId: string,\n  child: string,\n): AppendChildSubjectToSubjectAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT_TO_SUBJECT,\n});\n\nexport const appendChildSubjectToSubjectReducer = (\n  state: State,\n  { subjectId, child }: AppendChildSubjectToSubjectAction,\n): void => {\n  const { subjects } = state;\n  const parentOrder = subjects.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(subjects.dict, parentOrder);\n  subjects.dict[child].parents.add(subjectId);\n  sortAllViews(state, subjectId);\n};\n","import React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport ListItemBase from \"./ListItemBase\";\nimport { appendChildSubjectToSubject } from \"../../model/Subject/AppendChildSubjectToSubject\";\nimport { isUndefined } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChildSubjectToSubject(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n  views: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n  viewId?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  const viewId = options ? options.viewId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id], viewId };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  parentId?: string;\n  viewId?: string;\n  illegalIds?: Set<string>;\n  order: string[];\n  maxHeight: number | string;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  order,\n  parentId,\n  maxHeight,\n  onRenderCell,\n  illegalIds,\n  notifyNoChildren,\n  viewId,\n}: ListViewProps): JSX.Element {\n  const { subjects } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => !!illegalIds && !illegalIds.has(i.id),\n    [illegalIds],\n  );\n\n  const options = {\n    condition: illegalIds ? condition : undefined,\n    parentId,\n    viewId,\n  };\n  const children = getItems(subjects.dict, order, options);\n\n  return (\n    <div className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          {\"There's nothing here\"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </div>\n  );\n}\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\nimport { sortItems, sortAllViews } from \"../Order\";\n\nexport const APPEND_SUBJECT_TO_VIEW = \"APPEND_SUBJECT_TO_VIEW\";\n\nexport interface AppendSubjectToViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendSubjectToView = (\n  viewId: string,\n  subjectId: string,\n): AppendSubjectToViewAction => ({\n  subjectId,\n  type: APPEND_SUBJECT_TO_VIEW,\n  viewId,\n});\n\nexport const appendSubjectToViewReducer = (\n  state: State,\n  { subjectId, viewId }: AppendSubjectToViewAction,\n): void => {\n  const { subjects, views } = state;\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n\n  // Add viewId to the subject's views set\n  subjects.dict[subjectId].views.add(viewId);\n  sortAllViews(state, subjectId);\n};\n","import { Subject, SubjectBaseAction, SubjectTypes } from \".\";\nimport {\n  appendSubjectToView,\n  appendSubjectToViewReducer,\n} from \"../Views/AppendSubjectToView\";\nimport {\n  appendChildSubjectToSubject as subjectsAppendChild,\n  appendChildSubjectToSubjectReducer as subjectsAppendChildReducer,\n} from \"./AppendChildSubjectToSubject\";\n\nimport { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../Order\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n    views: new Set(),\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(state, subjectsAppendChild(parentId, subjectId));\n  }\n  if (viewId !== undefined) {\n    appendSubjectToViewReducer(state, appendSubjectToView(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import {\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n  Icon,\n  Panel,\n  Text,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { border, gridTemplateColumns } from \"../ListItem/ListItemBase\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppendChildrenListItem from \"../ListItem/AppendChildrenListItem\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport SimpleListView from \"../SimpleListView\";\nimport { State } from \"../../Reducer\";\nimport { createSubject } from \"../../model/Subject/CreateSubject\";\n\nexport const AppendChildrenHeight = 32;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        outline: \"1px solid \" + theme.palette.themePrimary,\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"RowsChild\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subjects\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          parentId={parent}\n          illegalIds={\n            new Set(subjects.dict[parent].children.order.concat(parent))\n          }\n          order={subjects.order.order}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      <ContextualMenu\n        hidden={!menuVisible}\n        isBeakVisible={false}\n        onDismiss={hideMenu}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems}\n      />\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction } from \".\";\n\nimport { remove } from \"lodash\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER =\n  \"REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER\";\n\nexport interface RemoveChildSubjectFromSubjectAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChildSubjectFromSubject = (\n  subjectId: string,\n  parent: string,\n): RemoveChildSubjectFromSubjectAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER,\n});\n\nexport const removeChildSubjectFromSubjectReducer = (\n  state: State,\n  { subjectId, parent }: RemoveChildSubjectFromSubjectAction,\n): void => {\n  const { subjects } = state;\n  remove(subjects.dict[parent].children.order, (s): boolean => s === subjectId);\n  subjects.dict[subjectId].parents.delete(parent);\n  sortAllParents(subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: State,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.subjects.dict[subjectId].name = name;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  deleteItem,\n  removeItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport ListItemBase from \"./ListItemBase\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { isUndefined } from \"lodash\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { removeChildSubjectFromSubject } from \"../../model/Subject/RemoveChildSubjectFromSubject\";\nimport { setSubjectName } from \"../../model/Subject/SetSubjectName\";\nimport { useDispatch } from \"react-redux\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChildSubjectFromSubject(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      ...removeItem,\n      onClick: removeChildOnClick,\n    },\n    {\n      ...deleteItem,\n      onClick: deleteSubjectOnClick,\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)} tabIndex={-1}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    height: 32,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: State,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.subjects.dict[subjectId].description = description;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: State,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.subjects.dict[subjectId].dueDate = date;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport {\n  DatePicker,\n  DefaultButton,\n  DirectionalHint,\n  IconButton,\n  Label,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  deleteItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport SimpleListView from \"../SimpleListView\";\nimport { State } from \"../../Reducer\";\nimport SubjectListItem from \"../ListItem/SubjectListItem\";\nimport TitleInput from \"../TitleInput\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { setSubjectDescription } from \"../../model/Subject/SetSubjectDescription\";\nimport { setSubjectDueDate } from \"../../model/Subject/SetSubjectDueDate\";\nimport { setSubjectName } from \"../../model/Subject/SetSubjectName\";\n\ninterface SubjectProps {\n  item: Item;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n  showCloseButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst focusBorder = \"1px solid \" + theme.palette.themePrimary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    display: \"grid\",\n    gridTemplateColumns: \"32px auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n  },\n  headerOpenButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    margin: 0,\n    marginTop: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 4,\n        outline: \"none\",\n      },\n    },\n  },\n  headerCloseButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 0,\n    margin: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:active\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 0,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n      },\n    },\n  },\n  headerLink: {\n    gridColumn: \"3\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  item: { subject, id, viewId },\n  listHeight,\n  showOpenButton,\n  showCloseButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeSubjectFromView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeButtonItem = {\n    ...completeWithChildrenItem,\n    onClick: completeSubjectOnClick,\n  };\n  const deleteButtonItem = {\n    ...deleteItem,\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let text: string;\n  let heroButton;\n  let backgroundColor;\n  if (!subject.completed) {\n    backgroundColor = theme.palette.green;\n    text = \"Created \" + subject.created.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        primary\n        {...completeItem}\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeButtonItem, deleteButtonItem],\n        }}\n      />\n    );\n  } else {\n    backgroundColor = theme.palette.red;\n    text = \"Completed \" + subject.completed.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        {...uncompleteItem}\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteButtonItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const header = (\n    <Text className={styles.header} tabIndex={-1}>\n      {text}\n    </Text>\n  );\n\n  const headerOpenLabel = \"Open \" + subject.name;\n  const headerCloseLabel = \"Close \" + subject.name;\n\n  return (\n    <Stack verticalAlign={\"center\"}>\n      <div className={styles.headerWrapper} style={{ backgroundColor }}>\n        {showCloseButton ? (\n          <IconButton\n            styles={{ root: { width: \"\" } }}\n            className={styles.headerCloseButton}\n            iconProps={{ iconName: \"Cancel\" }}\n            title={headerCloseLabel}\n            ariaLabel={headerCloseLabel}\n            onClick={removeChildViewOnClick}\n          />\n        ) : null}\n        {header}\n        {showOpenButton ? (\n          <Link\n            to={gotoSubject(\"grid\", id)}\n            className={styles.headerLink}\n            tabIndex={-1}\n          >\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.headerOpenButton}\n              iconProps={{ iconName: \"OpenFile\" }}\n              title={headerOpenLabel}\n              ariaLabel={headerOpenLabel}\n            />\n          </Link>\n        ) : null}\n      </div>\n\n      <div className={styles.body}>\n        <TitleInput\n          textAlign=\"center\"\n          className={styles.title}\n          value={name}\n          onChange={setNameLocal}\n          onBlur={setNameRedux}\n        />\n        <TextField\n          resizable={false}\n          multiline\n          rows={3}\n          value={description}\n          onChange={setDescriptionLocal}\n          onBlur={setDescriptionRedux}\n          className={styles.description}\n          styles={{ field: { height: 63 } }}\n        />\n        <div className={styles.date}>\n          <Label>Due date:</Label>\n          <div className={styles.datePicker}>\n            <DatePicker\n              disableAutoFocus={true}\n              value={subject.dueDate}\n              onSelectDate={setDueDateRedux}\n            />\n            {subject.dueDate ? (\n              <IconButton\n                iconProps={{ iconName: \"cancel\" }}\n                title=\"Clear date\"\n                onClick={clearDueDateOnClick}\n              />\n            ) : null}\n          </div>\n        </div>\n        <div className={styles.daysLeft}>\n          <Label>{`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}</Label>\n        </div>\n        <div\n          style={{\n            minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n          }}\n        >\n          <SimpleListView\n            parentId={id}\n            order={subjects.dict[id].children.order}\n            maxHeight={`calc(${listHeight})`}\n            onRenderCell={SubjectListItem}\n          />\n          <AppendChildren parent={id} />\n        </div>\n        <div className={styles.heroButton}>{heroButton}</div>\n      </div>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { Modal, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport SubjectComponent from \"../Subject\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewModalProps {\n  modalItem: Item | null;\n  dismissModal: () => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewModal({\n  modalItem,\n  dismissModal,\n  showCloseButton,\n}: ListViewModalProps): JSX.Element {\n  return (\n    <Modal\n      isOpen={!!modalItem}\n      onDismiss={dismissModal}\n      styles={{\n        main: {\n          backgroundColor: \"none\",\n          border: \"1px solid transparent\",\n          borderRadius: 4,\n        },\n      }}\n    >\n      <div className={styles.subjectWrapper}>\n        {modalItem ? (\n          <SubjectComponent\n            showCloseButton={showCloseButton}\n            item={modalItem}\n            showOpenButton={true}\n          />\n        ) : null}\n      </div>\n    </Modal>\n  );\n}\n","import { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\n\nimport React from \"react\";\nimport { State } from \"../Reducer\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport useWindowSize from \"@rehooks/window-size\";\n\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  content: {\n    alignItems: \"stretch\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n  },\n  mainWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    minWidth: MIN_COL_WIDTH,\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n});\n\ninterface WrapperProps {\n  commandBar?: JSX.Element;\n  main: JSX.Element;\n  parentId?: string;\n  title?: JSX.Element;\n}\n\nexport default function Wrapper({\n  commandBar,\n  main,\n  parentId,\n  title,\n}: WrapperProps) {\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  const sidebar = parentId ? (\n    <div className={styles.sidebar}>\n      <SubjectComponent item={{ id: parentId, subject: dict[parentId] }} />\n    </div>\n  ) : null;\n\n  // 2 is for the border\n  const width = parentId ? `calc(100% - ${MIN_COL_WIDTH + 2}px)` : \"100%\";\n\n  const windowSize = useWindowSize();\n  if (sidebar && windowSize.innerWidth < MIN_COL_WIDTH * 2) {\n    return sidebar;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {commandBar}\n      <div className={styles.content}>\n        <div className={styles.mainWrapper} style={{ width }}>\n          {title}\n          {main}\n        </div>\n        {sidebar}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport ListItemBase from \"../ListItem/ListItemBase\";\nimport { appendSubjectToView } from \"../../model/Views/AppendSubjectToView\";\nimport { isUndefined } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ListItem({ id, viewId, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendSubjectToView(viewId!, id));\n      }\n    },\n    [dispatch, id, viewId],\n  );\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.viewId)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React from \"react\";\nimport { Panel, IPanelProps } from \"office-ui-fabric-react\";\nimport SimpleListView from \"../SimpleListView\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport AppendChildrenListItem from \"./AppendChildrenListItem\";\nimport { isUndefined } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { Paths } from \"../../Routing\";\n\ninterface AppendChildrenProps {\n  isOpen: boolean;\n  hidePanel: IPanelProps[\"onDismiss\"];\n  viewId?: string;\n}\n\nexport default function AppendChildren({\n  hidePanel,\n  isOpen,\n  viewId,\n}: AppendChildrenProps): JSX.Element {\n  const { subjects, views } = useSelector((state: State) => state);\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n\n  const order = subjects.order.order;\n  const illegalIds = new Set(views.dict[viewId].children.order);\n\n  return (\n    <React.Fragment>\n      <Panel\n        isOpen={isOpen}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          viewId={viewId}\n          order={order}\n          illegalIds={illegalIds}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import { SortField, sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = subjects.dict[subjectId].children;\n    children.order = sortItems(subjects.dict, children);\n  }\n}\n\nfunction setViews(\n  state: State,\n  { parameters: { viewId }, fields }: SetFieldsArrayAction,\n) {\n  const children = state.views.dict[viewId!].children;\n  children.options.fields = fields;\n  children.order = sortItems(state.subjects.dict, children);\n}\n\nexport const setFieldsArrayReducer = (\n  state: State,\n  action: SetFieldsArrayAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import { sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = subjects.dict[subjectId].children;\n        children.order = sortItems(subjects.dict, children);\n      }\n      return;\n    }\n  }\n}\n\nfunction setViews(\n  state: State,\n  { parameters: { viewId }, key, desc }: SetFieldsDescAction,\n) {\n  const view = state.views.dict[viewId!];\n  for (const f of view.children.options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      view.children.order = sortItems(state.subjects.dict, view.children);\n      return;\n    }\n  }\n}\n\nexport const setFieldsDescReducer = (\n  state: State,\n  action: SetFieldsDescAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../../model/Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../../model/Order/SetFieldsArray\";\nimport { setFieldsDesc } from \"../../model/Order/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n  viewId,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId, viewId }));\n    },\n    [dispatch, fields, subjectId, viewId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(\n        setFieldsDesc(key, checked, { setSearchOptions, subjectId, viewId }),\n      );\n    },\n    [dispatch, viewId, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","import { sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = subjects.dict[subjectId].children;\n    children.order = sortItems(subjects.dict, children);\n  }\n}\n\nfunction setViews(\n  state: State,\n  { separateCompletedItems, parameters: { viewId } }: SetSeparateCompleteAction,\n) {\n  const view = state.views.dict[viewId!];\n  view.children.options.separateCompletedItems = separateCompletedItems;\n  view.children.order = sortItems(state.subjects.dict, view.children);\n}\n\nexport const setSeparateCompleteReducer = (\n  state: State,\n  action: SetSeparateCompleteAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import { AllRouteComponentProps, Paths } from \"../Routing\";\nimport { CommandBarButton, Toggle } from \"office-ui-fabric-react\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppendChildren from \"./View/AppendChildren\";\nimport { BUTTON_HEIGHT } from \"./AppCommandBar/Common\";\nimport SortButton from \"./AppCommandBar/SortButton\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../model/Order/SetSeparateComplete\";\nimport { SortItemsOptions } from \"../model/Order\";\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ninterface UseCommandBarOptions {\n  subjectId?: string;\n  showSort?: boolean;\n  match: AllRouteComponentProps[\"match\"];\n}\n\nexport function useCommandBar({\n  match,\n  showSort,\n  subjectId,\n}: UseCommandBarOptions) {\n  const { viewId } = match.params;\n  const isViews = match.path === Paths.view && !!viewId;\n\n  const dispatch = useDispatch();\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let currentOrder: SortItemsOptions;\n  if (isViews && viewId! in views.dict) {\n    currentOrder = views.dict[viewId!].children.options;\n  } else if (subjectId && subjectId in subjects.dict) {\n    currentOrder = subjects.dict[subjectId].children.options;\n  } else {\n    currentOrder = subjects.order.options;\n  }\n\n  const setSeparateCompleteOnChange = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId, viewId }));\n    },\n    [dispatch, subjectId, viewId],\n  );\n\n  const items = [];\n\n  const [panelOpen, setShowPanel] = useState(false);\n  const showPanel = useCallback((): void => {\n    setShowPanel(true);\n  }, []);\n  const hidePanel = useCallback((): void => {\n    setShowPanel(false);\n  }, []);\n\n  if (isViews) {\n    items.push(\n      <CommandBarButton\n        key=\"appendChildren\"\n        text=\"Append child subjects\"\n        iconProps={{ iconName: \"RowsChild\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={showPanel}\n        styles={commandBarStyles}\n      />,\n      <AppendChildren\n        key=\"panel\"\n        hidePanel={hidePanel}\n        isOpen={panelOpen}\n        viewId={viewId}\n      />,\n    );\n  }\n\n  if (showSort) {\n    items.push(\n      <SortButton\n        key=\"sort\"\n        subjectId={subjectId}\n        viewId={viewId}\n        fields={currentOrder.fields}\n      />,\n    );\n  }\n\n  items.push(\n    <Toggle\n      key=\"separateComplete\"\n      checked={currentOrder.separateCompletedItems}\n      offText={\"Don't separate completed items\"}\n      onText={\"Separate completed items\"}\n      onChange={setSeparateCompleteOnChange}\n      styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n    />,\n  );\n\n  return items;\n}\n","import { IconButton, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { useDispatch } from \"react-redux\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewButtonsProps {\n  item: Item;\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewButtons({\n  item,\n  openModal,\n  showCloseButton,\n}: ListViewButtonsProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const openModalOnClick = useCallback((): void => {\n    openModal(item);\n  }, [item, openModal]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (item.viewId && item.id) {\n      dispatch(removeSubjectFromView(item.viewId, item.id));\n    }\n  }, [dispatch, item]);\n\n  const openLabel = \"Open \" + item.subject.name;\n  const editLabel = \"Edit \" + item.subject.name;\n  const closeLabel = \"Close \" + item.subject.name;\n\n  return (\n    <div className={styles.rowButtonWrapper}>\n      {showCloseButton ? (\n        <IconButton\n          onClick={removeChildViewOnClick}\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"Cancel\" }}\n          title={closeLabel}\n          ariaLabel={closeLabel}\n        />\n      ) : null}\n      <IconButton\n        onClick={openModalOnClick}\n        styles={{ root: { width: \"\" } }}\n        className={styles.rowButton}\n        iconProps={{ iconName: \"Edit\" }}\n        title={editLabel}\n        ariaLabel={editLabel}\n      />\n      <Link to={gotoSubject(\"list\", item.id)}>\n        <IconButton\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"OpenFile\" }}\n          title={openLabel}\n          ariaLabel={openLabel}\n        />\n      </Link>\n    </div>\n  );\n}\n","import { IRectangle, List, ScrollToMode } from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect } from \"react\";\nimport {\n  SubjectViewHookProps,\n  useSubjectView,\n  getDiffIndex,\n} from \"./SubjectView\";\nimport Wrapper, { MIN_COL_WIDTH } from \"./Wrapper\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { AllRouteComponentProps } from \"../Routing\";\nimport AppCommandBar from \"./AppCommandBar\";\nimport { Item } from \"../model/Subject\";\nimport { State } from \"../Reducer\";\nimport SubjectComponent from \"./Subject\";\nimport { useCommandBar } from \"./UseCommandBar\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: \"100%\",\n    overflow: \"auto\",\n    overflowY: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\ninterface GridViewProps extends SubjectViewHookProps {\n  title?: JSX.Element;\n  showCloseButton?: boolean;\n}\n\nfunction GridView({\n  title,\n  history: _history,\n  location: _location,\n  match,\n  showCloseButton,\n  ...props\n}: GridViewProps & AllRouteComponentProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback(\n    (props?: Item): JSX.Element | undefined => {\n      if (!props) {\n        return;\n      }\n\n      return (\n        <div\n          className={styles.tile}\n          data-is-focusable={true}\n          key={props.id}\n          style={{\n            height: ROW_HEIGHT,\n            width: 100 / columnCount.current + \"%\",\n          }}\n        >\n          <div className={styles.padding}>\n            <div className={styles.contents}>\n              <SubjectComponent\n                showCloseButton={showCloseButton}\n                item={props}\n                listHeight={\"260px\"}\n                showOpenButton={true}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    },\n    [showCloseButton],\n  );\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  const commandBarItems = useCommandBar({ match, showSort: true, subjectId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <List\n          ref={gridRef}\n          className={styles.grid}\n          items={items}\n          getItemCountForPage={getItemCountForPage}\n          getPageHeight={getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={renderCell}\n        />\n      }\n      parentId={subjectId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(GridView);\n","import { GetItemsOptions, Item, getItems } from \"../model/Subject\";\nimport React, { useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport {\n  SetSortParameters,\n  SortField,\n  SortItemsOptions,\n  sortItems,\n} from \"../model/Order\";\n\nimport GridView from \"./GridView\";\nimport ListView from \"./ListView\";\nimport { State } from \"../Reducer\";\nimport { SubjectsRouteProps } from \"../model/Subject/Routing\";\nimport { getDisplay } from \"../Display\";\nimport { isUndefined } from \"lodash\";\nimport { useSelector } from \"react-redux\";\n\nexport const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n\nexport interface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = { viewId };\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId } = match.params;\n  const display = getDisplay(location);\n\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(parentId) && !(parentId in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const options = { parentId };\n  // if (isUndefined(parentId)) {\n  if (display === \"list\") {\n    return <ListView options={options} />;\n  } else {\n    return <GridView options={options} />;\n  }\n}\n","import { APPBAR_HEIGHT, VIEW_TITLE_HEIGHT } from \"../../Common\";\nimport { AllRouteComponentProps, Paths } from \"../../Routing\";\nimport { DetailsList, SelectionMode } from \"office-ui-fabric-react\";\n\nimport { APP_COMMAND_BAR_HEIGHT } from \"../AppCommandBar/Common\";\nimport AppCommandBar from \"../AppCommandBar\";\nimport { GetItemsOptions } from \"../../model/Subject\";\nimport ListViewContextMenu from \"./ListViewContextMenu\";\nimport ListViewModal from \"./ListViewModal\";\nimport React from \"react\";\nimport { SortItemsOptions } from \"../../model/Order\";\nimport { State } from \"../../Reducer\";\nimport Wrapper from \"../Wrapper\";\nimport { useCommandBar } from \"../UseCommandBar\";\nimport { useListViewContextMenu } from \"./UseListViewContextMenu\";\nimport { useListViewDetailsList } from \"./UseListViewDetailsList\";\nimport { useListViewModal } from \"./UseListViewModal\";\nimport { useListViewRender } from \"./UseListViewRender\";\nimport { useListViewScroll } from \"./UseListViewScroll\";\nimport { useSelector } from \"react-redux\";\nimport { useSubjectView } from \"../SubjectView\";\nimport { withRouter } from \"react-router-dom\";\n\ninterface ListViewProps {\n  title?: JSX.Element;\n  options?: GetItemsOptions;\n  showCloseButton?: boolean;\n  sortOptions?: SortItemsOptions;\n}\n\nfunction ListView({\n  title,\n  history,\n  match,\n  options,\n  showCloseButton,\n  sortOptions,\n}: ListViewProps & AllRouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const {\n    dispatchSetFieldsDesc,\n    getKey,\n    onItemInvoked,\n    reorder,\n  } = useListViewDetailsList({\n    history,\n    reorderParams,\n    sortFields,\n  });\n\n  const { dismissModal, modalItem, openModal, setModalItem } = useListViewModal(\n    subjects,\n  );\n  const { contextMenuProps, onItemContextMenu } = useListViewContextMenu(\n    setModalItem,\n    showCloseButton,\n  );\n\n  const columns = useListViewRender({\n    openModal,\n    showCloseButton,\n    sortFields,\n  });\n\n  const listRef = useListViewScroll({\n    componentOrder,\n    currentOrder,\n    parentId,\n    setCurrentOrder,\n    subjects,\n  });\n\n  const height = `calc(100vh - ${APPBAR_HEIGHT +\n    APP_COMMAND_BAR_HEIGHT +\n    (match.path === Paths.view ? VIEW_TITLE_HEIGHT : 0)}px)`;\n\n  const commandBarItems = useCommandBar({ match, subjectId: parentId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <React.Fragment>\n          <DetailsList\n            styles={{ root: { height } }}\n            getKey={getKey}\n            componentRef={listRef}\n            onColumnHeaderClick={dispatchSetFieldsDesc}\n            columns={columns}\n            items={items}\n            isHeaderVisible={true}\n            selectionMode={SelectionMode.none}\n            onItemInvoked={onItemInvoked}\n            onItemContextMenu={onItemContextMenu}\n            columnReorderOptions={{\n              frozenColumnCountFromEnd: 1,\n              frozenColumnCountFromStart: 0,\n              handleColumnReorder: reorder,\n            }}\n          />\n          {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n          <ListViewModal\n            modalItem={modalItem}\n            dismissModal={dismissModal}\n            showCloseButton={showCloseButton}\n          />\n        </React.Fragment>\n      }\n      parentId={parentId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(ListView);\n","import { useCallback } from \"react\";\nimport { setFieldsArray } from \"../../model/Order/SetFieldsArray\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsDesc } from \"../../model/Order/SetFieldsDesc\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../../model/Order\";\nimport { Item } from \"../../model/Subject\";\nimport { History } from \"history\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\n\ninterface UseListViewDetailsList {\n  history: History;\n  sortFields: SortField[];\n  reorderParams: SetSortParameters;\n}\n\nexport function useListViewDetailsList({\n  history,\n  reorderParams,\n  sortFields,\n}: UseListViewDetailsList) {\n  const dispatch = useDispatch();\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(\"list\", item.id));\n    },\n    [history],\n  );\n\n  return { dispatchSetFieldsDesc, getKey, onItemInvoked, reorder };\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Item, SubjectState } from \"../../model/Subject\";\n\nexport interface UseListViewModal {\n  modalItem: Item | null;\n  setModalItem: React.Dispatch<React.SetStateAction<Item | null>>;\n  openModal: (item: Item) => void;\n  dismissModal: () => void;\n}\n\nexport function useListViewModal(subjects: SubjectState): UseListViewModal {\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem, setModalItem]);\n\n  return { dismissModal, modalItem, openModal, setModalItem };\n}\n","import { useCallback, useState } from \"react\";\nimport { IDetailsListProps } from \"office-ui-fabric-react\";\nimport { ListViewContextMenuProps } from \"./ListViewContextMenu\";\nimport { UseListViewModal } from \"./UseListViewModal\";\nimport { Item } from \"../../model/Subject\";\n\ninterface UseListViewContextMenu {\n  contextMenuProps: ListViewContextMenuProps | null;\n  onItemContextMenu: IDetailsListProps[\"onItemContextMenu\"];\n}\nexport function useListViewContextMenu(\n  setModalItem: UseListViewModal[\"setModalItem\"],\n  showCloseButton?: boolean,\n): UseListViewContextMenu {\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n          showCloseButton,\n        });\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu, showCloseButton, setModalItem],\n  );\n  return { contextMenuProps, onItemContextMenu };\n}\n","import React, { useCallback } from \"react\";\nimport { Item, Subject } from \"../../model/Subject\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport ListViewButtons from \"./ListViewButtons\";\nimport { SortField, SortFieldKey } from \"../../model/Order\";\n\ninterface UseListView {\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n  sortFields: SortField[];\n}\n\nexport function useListViewRender({\n  openModal,\n  showCloseButton,\n  sortFields,\n}: UseListView) {\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => (\n      <ListViewButtons\n        item={item}\n        openModal={openModal}\n        showCloseButton={showCloseButton}\n      />\n    ),\n    [openModal, showCloseButton],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"itemButtons\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n  return columns;\n}\n","import { IDetailsList } from \"office-ui-fabric-react\";\nimport { useRef, useEffect } from \"react\";\nimport { UseSubjectView, getDiffIndex } from \"../SubjectView\";\nimport { SubjectState } from \"../../model/Subject\";\n\ninterface UseListViewScroll {\n  currentOrder: string[];\n  componentOrder: string[];\n  parentId?: string;\n  setCurrentOrder: UseSubjectView[\"setCurrentOrder\"];\n  subjects: SubjectState;\n}\n\nexport function useListViewScroll({\n  componentOrder,\n  currentOrder,\n  parentId,\n  setCurrentOrder,\n  subjects,\n}: UseListViewScroll) {\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  return listRef;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"../model/Search/Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../model/Subject\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\nimport { getDisplay } from \"../Display\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\n\nexport const SET_VIEW_NAME = \"SET_VIEW_NAME\";\n\nexport interface SetViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const setViewName = (\n  viewId: string,\n  name: string,\n): SetViewNameAction => ({\n  name,\n  type: SET_VIEW_NAME,\n  viewId,\n});\n\nexport const setViewNameReducer = (\n  { views }: State,\n  { name, viewId }: SetViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GridView from \"../GridView\";\nimport ListView from \"../ListView\";\nimport { Location } from \"history\";\nimport { Paths } from \"../../Routing\";\nimport { State } from \"../../Reducer\";\nimport TitleInput from \"../TitleInput\";\nimport { ViewRouteProps } from \"../../model/Views/Routing\";\nimport { getDisplay } from \"../../Display\";\nimport { isUndefined } from \"lodash\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { setViewName } from \"../../model/Views/SetViewName\";\n\nconst styles = mergeStyleSets({\n  title: {\n    marginTop: 10,\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ location, viewId }: ViewProps): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(setViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const display = getDisplay(location);\n\n  const options = { viewId };\n  const title = (\n    <TitleInput\n      className={styles.title}\n      value={localName}\n      onChange={onChange}\n      onBlur={updateName}\n    />\n  );\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} showCloseButton={true} title={title} />\n    ) : (\n      <ListView options={options} showCloseButton={true} title={title} />\n    );\n\n  return <div className={styles.wrapper}>{viewComponent}</div>;\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../Order\";\nimport { ViewBaseAction } from \".\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import { AllParams, Paths } from \"../../Routing\";\nimport {\n  CommandBar,\n  INavLink,\n  INavLinkGroup,\n  Nav,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RouteComponentProps } from \"react-router\";\nimport { State } from \"../../Reducer\";\nimport { commandBarStyle } from \"../AppCommandBar\";\nimport { createView } from \"../../model/Views/CreateView\";\nimport { gotoView } from \"../../model/Views/Routing\";\nimport { subjectBase } from \"../../model/Subject/Routing\";\nimport { useGetCreateButtonItems } from \"./UseGetCreateButtonItems\";\n\nexport const viewsNavWidth = 208;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  navWrapper: {\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  nav: {\n    background: theme.palette.white,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: viewsNavWidth,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<AllParams>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n      ],\n    },\n  ];\n\n  if (viewGroup.links!.length > 0) {\n    groups[0].links.push(viewGroup);\n  }\n\n  groups[0].links.push({\n    icon: \"Add\",\n    key: \"createView\",\n    name: \"Create view\",\n    onClick: dispatchCreateView,\n    url: \"\",\n  });\n\n  const items = useGetCreateButtonItems(match.params);\n\n  return (\n    <div className={styles.navWrapper}>\n      <CommandBar items={items} styles={{ root: commandBarStyle }} />\n      <Nav\n        selectedKey={selectedKey}\n        expandButtonAriaLabel=\"Expand or collapse\"\n        className={styles.nav}\n        groups={groups}\n        styles={{ navItems: { margin: 0 } }}\n      />\n    </div>\n  );\n}\n","import { AllParams } from \"../../Routing\";\nimport { ICommandBarItemProps } from \"office-ui-fabric-react\";\nimport { createSubject } from \"../../model/Subject/CreateSubject\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport function useGetCreateButtonItems({\n  parentId,\n  viewId,\n}: AllParams): ICommandBarItemProps[] {\n  const dispatch = useDispatch();\n\n  const createSubjectOnClick = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  return [\n    {\n      iconProps: {\n        iconName: parentId || viewId ? \"ChildOf\" : \"Add\",\n      },\n      key: \"createSubject\",\n      onClick: createSubjectOnClick,\n      text: parentId || viewId ? \"Create child subject\" : \"Create subject\",\n    },\n  ];\n}\n","import { AllPaths, Paths } from \"./Routing\";\nimport { Redirect, Route, Switch } from \"react-router\";\n\nimport AppBar from \"./components/AppBar\";\nimport React from \"react\";\nimport SearchResults from \"./components/SearchResults\";\nimport SubjectView from \"./components/SubjectView\";\nimport View from \"./components/View\";\nimport ViewsNav from \"./components/ViewsNav\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { subjectBase } from \"./model/Subject/Routing\";\n\nconst styles = mergeStyleSets({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"auto\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  APPEND_CHILD_SUBJECT_TO_SUBJECT,\n  AppendChildSubjectToSubjectAction,\n  appendChildSubjectToSubjectReducer,\n} from \"./AppendChildSubjectToSubject\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  UncompleteSubjectAction,\n  completeSubjectReducer,\n  uncompleteSubjectReducer,\n} from \"./CompleteSubject\";\nimport {\n  CREATE_SUBJECT,\n  CreateSubjectAction,\n  createSubjectReducer,\n} from \"./CreateSubject\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./DeleteSubject\";\nimport {\n  REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER,\n  RemoveChildSubjectFromSubjectAction,\n  removeChildSubjectFromSubjectReducer,\n} from \"./RemoveChildSubjectFromSubject\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  SetSubjectDescriptionAction,\n  setSubjectDescriptionReducer,\n} from \"./SetSubjectDescription\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./SetSubjectDueDate\";\nimport {\n  SET_SUBJECT_NAME,\n  SetSubjectNameAction,\n  setSubjectNameReducer,\n} from \"./SetSubjectName\";\nimport { SubjectState, SubjectTypes } from \".\";\nimport { getInitialOrder, getInitialSortItemsOptions } from \"../Order\";\n\nimport { Action } from \"redux\";\nimport { State } from \"../../Reducer\";\nimport produce from \"immer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(draftState, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            draftState,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(draftState, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(\n            draftState,\n            action as UncompleteSubjectAction,\n          );\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(draftState, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(\n            draftState,\n            action as SetSubjectDueDateAction,\n          );\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER:\n          removeChildSubjectFromSubjectReducer(\n            draftState,\n            action as RemoveChildSubjectFromSubjectAction,\n          );\n          break;\n        case APPEND_CHILD_SUBJECT_TO_SUBJECT:\n          appendChildSubjectToSubjectReducer(\n            draftState,\n            action as AppendChildSubjectToSubjectAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import {\n  APPEND_SUBJECT_TO_VIEW,\n  AppendSubjectToViewAction,\n  appendSubjectToViewReducer,\n} from \"./AppendSubjectToView\";\nimport { CREATE_VIEW, CreateViewAction, createViewReducer } from \"./CreateView\";\nimport {\n  REMOVE_SUBJECT_FROM_VIEW,\n  RemoveSubjectFromViewAction,\n  removeSubjectFromViewReducer,\n} from \"./RemoveSubjectFromView\";\nimport {\n  SET_VIEW_NAME,\n  SetViewNameAction,\n  setViewNameReducer,\n} from \"./SetViewName\";\n\nimport { Action } from \"redux\";\nimport { State } from \"../../Reducer\";\nimport { ViewState } from \".\";\nimport produce from \"immer\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case SET_VIEW_NAME:\n          setViewNameReducer(draftState, action as SetViewNameAction);\n          break;\n        case APPEND_SUBJECT_TO_VIEW:\n          appendSubjectToViewReducer(\n            draftState,\n            action as AppendSubjectToViewAction,\n          );\n          break;\n        case REMOVE_SUBJECT_FROM_VIEW:\n          removeSubjectFromViewReducer(\n            draftState,\n            action as RemoveSubjectFromViewAction,\n          );\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"../Order/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  SetFieldsDescAction,\n  setFieldsDescReducer,\n} from \"../Order/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  SetSeparateCompleteAction,\n  setSeparateCompleteReducer,\n} from \"../Order/SetSeparateComplete\";\n\nimport { State } from \"../../Reducer\";\nimport produce from \"immer\";\nimport { sortItems, OrderBaseAction } from \".\";\n\nconst orderReducer = (state: State, action: OrderBaseAction): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      switch (action.type) {\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(draftState, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(draftState, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            draftState,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n      }\n\n      const { subjects } = draftState;\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n\n      return draftState;\n    },\n  ),\n});\n\nexport default orderReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./model/Subject/Reducer\";\nimport { SubjectState } from \"./model/Subject\";\nimport { ViewState } from \"./model/Views\";\nimport viewReducer, { initialViewState } from \"./model/Views/Reducer\";\nimport orderReducer from \"./model/Order/Reducer\";\n\nexport interface State {\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(\n  initialReducer,\n  subjectReducer,\n  viewReducer,\n  orderReducer,\n);\n","import { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \".\";\n\ninterface PersistSubject\n  extends Omit<\n    Subject,\n    \"created\" | \"completed\" | \"dueDate\" | \"parents\" | \"views\"\n  > {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n  views: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents], views: [...s.views] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, views, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n        views: new Set(views),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \".\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    const orderSet = new Set<string>();\n    for (const viewId of state.order) {\n      orderSet.add(state.dict[viewId].name);\n    }\n    return { ...state, orderSet };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./model/Subject/Transform\";\nimport transformViews from \"./model/Views/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}