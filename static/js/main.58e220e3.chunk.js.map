{"version":3,"sources":["model/Search/Routing.ts","model/Subject/Routing.ts","model/Views/Routing.ts","Routing.ts","Common.ts","components/SearchBar.tsx","components/AppBar.tsx","components/AppCommandBar/Common.ts","model/Display/SetDisplay.ts","components/AppCommandBar/index.tsx","components/SubjectButtonsProps.ts","model/Order/index.ts","model/Subject/CompleteSubject.ts","model/Subject/DeleteSubject.ts","model/Views/RemoveSubjectFromView.ts","components/ListView/ListViewContextMenu.tsx","components/ListItem/ListItemBase.tsx","model/Subject/AppendChildSubjectToSubject.ts","components/ListItem/AppendChildrenListItem.tsx","model/Subject/index.ts","components/SimpleListView.tsx","model/Views/AppendSubjectToView.ts","model/Subject/CreateSubject.ts","components/Subject/AppendChildren.tsx","model/Subject/RemoveChildSubjectFromSubject.ts","model/Subject/SetSubjectName.ts","components/ListItem/SubjectListItem.tsx","components/TitleInput.tsx","model/Subject/SetSubjectDescription.ts","model/Subject/SetSubjectDueDate.ts","components/Subject/index.tsx","components/ListView/ListViewModal.tsx","components/Wrapper.tsx","components/View/AppendChildrenListItem.tsx","components/View/AppendChildren.tsx","model/Order/SetFieldsArray.ts","model/Order/SetFieldsDesc.ts","components/AppCommandBar/SortButton.tsx","model/Order/SetSeparateComplete.ts","components/UseCommandBar.tsx","components/ListView/ListViewButtons.tsx","components/GridView.tsx","components/SubjectView.tsx","components/ListView/index.tsx","components/ListView/UseListViewDetailsList.ts","components/ListView/UseListViewModal.tsx","components/ListView/UseListViewContextMenu.tsx","components/ListView/UseListViewRender.tsx","components/ListView/UseListViewScroll.ts","components/SearchResults.tsx","model/Views/SetViewName.ts","components/View/index.tsx","model/Views/CreateView.ts","components/ViewsNav/index.tsx","components/ViewsNav/UseGetCreateButtonItems.ts","App.tsx","ServiceWorker.ts","model/Subject/Reducer.ts","model/Views/Reducer.ts","model/Order/Reducer.ts","model/Display/Reducer.ts","Reducer.ts","model/Subject/Transform.ts","model/Views/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","subjectBase","gotoSubject","id","url","gotoView","viewId","Paths","base","search","subject","view","viewBase","AllPaths","APPBAR_HEIGHT","PANEL_HEADER_HEIGHT","VIEW_TITLE_HEIGHT","styles","mergeStyleSets","display","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","_match$params","parentId","isSubjects","path","isSearch","isViews","_useSelector","useSelector","state","subjects","views","titleChild","dict","name","document","react_router_dom","to","Text","variant","APP_COMMAND_BAR_HEIGHT","BUTTON_HEIGHT","setDisplay","type","commandBarStyle","borderBottom","neutralQuaternary","margin","padding","zIndex","leftWrapper","rightWrapper","wrapper","objectSpread","white","justifyContent","paddingRight","position","AppCommandBar","items","farItems","dispatch","useDispatch","toggleView","CommandBarButton","ariaLabel","iconProps","iconName","root","background","menuProps","directionalHintFixed","onClick","completeItem","completeWithChildrenItem","uncompleteItem","removeItem","deleteItem","sortItems","_ref3","order","_ref3$options","fields","separateCompletedItems","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","Array","isArray","length","Set","size","aDefined","isUndefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","sortAllViews","_ref4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","completeSubject","level","arguments","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","removeSubjectFromView","ListViewContextMenu","item","showCloseButton","ev","onDismiss","onEditClick","checked","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","deleteSubjectOnClick","editClick","removeChildViewOnClick","completeContextItems","uncompleteContextItems","contextItems","toConsumableArray","ContextualMenu","target","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","border","neutralTertiary","borderRadius","gridTemplateRows","marginBottom","checkboxWrapper","checkbox","divider","gridColumn","marginTop","button","content","gridRow","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","useRef","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","onBlur","newLabel","data-is-focusable","onContextMenu","ref","Checkbox","TextField","borderless","hidden","bottomRightEdge","appendChildSubjectToSubject","child","appendChildSubjectToSubjectReducer","parentOrder","add","ListItem","AppendChildrenListItem","getItems","current","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","illegalIds","notifyNoChildren","i","has","style","role","aria-label","List","appendSubjectToView","appendSubjectToViewReducer","createSubject","v4","AppendChildrenHeight","cursor","outline","&:active","filter","&:focus","icon","fontSize","textAlign","AppendChildren","panelVisible","setPanelVisible","setMenuVisible","hidePanel","showPanel","toggleMenu","hideMenu","addChild","Fragment","Icon","Panel","isOpen","isLightDismiss","headerText","removeChildSubjectFromSubject","setSubjectName","open","removeChildOnClick","buttonLabel","tabIndex","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","FontSizes","size28","paddingBottom","TitleInput","_ref$textAlign","setSubjectDescription","description","setSubjectDueDate","focusBorder","headerWrapper","borderTopLeftRadius","borderTopRightRadius","header","neutralLight","headerOpenButton","borderBottomLeftRadius","borderBottomRightRadius","headerCloseButton","red","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","_ref$item","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeSubjectOnClick","completeButtonItem","deleteButtonItem","dueDate","Math","ceil","valueOf","toLocaleDateString","DefaultButton","split","green","created","primary","headerOpenLabel","headerCloseLabel","Stack","verticalAlign","resizable","multiline","rows","field","Label","DatePicker","disableAutoFocus","onSelectDate","minHeight","subjectWrapper","ListViewModal","modalItem","dismissModal","Modal","main","MIN_COL_WIDTH","mainWrapper","sidebar","minWidth","Wrapper","commandBar","windowSize","useWindowSize","innerWidth","AppendChildrenListItem_ListItem","react_router","setFieldsArray","parameters","setFieldsArrayReducer","action","setViews","_ref$parameters","setSearchOptions","searchSortOptions","setSubjects","setFieldsDesc","setFieldsDescReducer","f","dragEnterClass","gripperWrapper","SortButton","draggedIndex","draggedItem","selection","Selection","calloutVisible","setShowCallout","dismissCallout","openCallout","insertBeforeItem","draggedItems","isIndexSelected","getSelection","itm","indexOf","insertIndex","splice","apply","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","sortColumns","onRender","fieldName","Toggle","defaultChecked","offText","onText","Callout","DetailsList","columns","selectionMode","SelectionMode","none","setSeparateComplete","setSeparateCompleteReducer","commandBarStyles","useCommandBar","currentOrder","showSort","setSeparateCompleteOnChange","panelOpen","setShowPanel","AppendChildren_AppendChildren","marginLeft","marginRight","rowButton","rowButtonWrapper","ListViewButtons","openModal","openModalOnClick","openLabel","editLabel","closeLabel","ROWS_PER_PAGE","ROW_HEIGHT","grid","overflowY","tile","float","contents","getPageHeight","withRouter","objectWithoutProperties","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","setCurrentOrder","index","getDiffIndex","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","commandBarItems","renderedWindowsAhead","oldOrder","newOrder","sortOptions","sortFields","reorderParams","setOrder","SubjectView","_useSelector2","components_ListView","components_GridView","_useListViewDetailsLi","reorder","targetIndex","dragged","_","column","isSortedDescending","getKey","onItemInvoked","useListViewDetailsList","_useListViewModal","setModalItem","useListViewModal","_useListViewContextMe","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","useListViewContextMenu","renderSubjectString","_index","renderChildren","toLocaleString","renderDate","renderButtons","columnsDict","isResizable","isSorted","useListViewRender","listRef","focusIndex","useListViewScroll","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","searchParams","reduce","acc","curr","String","SearchResults","_useSelector$subjects","childId","includes","setViewName","ViewComponent","localName","setLocalName","updateName","viewComponent","View","location","createView","navWrapper","borderRight","nav","boxSizing","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","createSubjectOnClick","useGetCreateButtonItems","CommandBar","Nav","expandButtonAriaLabel","navItems","App","component","Boolean","window","hostname","subjectReducer","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","deleteId","arr","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","subjectsAppendChildReducer","subjectsAppendChild","createSubjectReducer","removeChildSubjectFromSubjectReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","setViewNameReducer","removeSubjectFromViewReducer","orderReducer","displayReducer","displayState","setDisplayReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","_i","_Object$entries","entries","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58e220e3.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","export interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}`;\n};\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { SearchRouteProps, searchBase } from \"./model/Search/Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"./model/Subject/Routing\";\nimport { ViewRouteProps, viewBase } from \"./model/Views/Routing\";\n\nimport { RouteComponentProps } from \"react-router\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n\nexport type AllParams = SubjectsRouteProps & SearchRouteProps & ViewRouteProps;\nexport type AllRouteComponentProps = RouteComponentProps<AllParams>;\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\nexport const PANEL_HEADER_HEIGHT = 115;\nexport const VIEW_TITLE_HEIGHT = 71;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  gotoSearch,\n  SearchRouteProps,\n  getSearchMatch,\n} from \"../model/Search/Routing\";\nimport { Subject } from \"../model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import { AllRouteComponentProps, Paths } from \"../Routing\";\nimport React, { useEffect } from \"react\";\nimport { getSearchMatch, searchBase } from \"../model/Search/Routing\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { gotoSubject, subjectBase } from \"../model/Subject/Routing\";\n\nimport { APPBAR_HEIGHT } from \"../Common\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport { State } from \"../Reducer\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { useSelector } from \"react-redux\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(props: AllRouteComponentProps): JSX.Element {\n  const { match } = props;\n  const { parentId, viewId } = match.params;\n\n  const isSubjects = match.path === Paths.subject || match.path === subjectBase;\n  const isSearch = match.path === Paths.search || match.path === searchBase;\n  const isViews = match.path === Paths.view && viewId;\n\n  const { subjects, views } = useSelector((state: State) => state);\n\n  // Responsive page title\n  useEffect((): void => {\n    let path: string | null = null;\n    let titleChild: string | null = null;\n    if (isSubjects) {\n      path = \"subjects\";\n      if (parentId) {\n        titleChild = subjects.dict[parentId].name;\n      }\n    } else if (isSearch) {\n      const [param, query] = getSearchMatch(match);\n      path = \"search/\" + param;\n      titleChild = query;\n    } else if (isViews) {\n      if (viewId) {\n        path = \"views\";\n        titleChild = views.dict[viewId].name;\n      }\n    }\n\n    if (path) {\n      if (titleChild) {\n        document.title = `hub/${path}: ${titleChild}`;\n      } else {\n        document.title = `hub/${path}`;\n      }\n    } else {\n      document.title = `hub`;\n    }\n  }, [\n    isSubjects,\n    parentId,\n    subjects.dict,\n    isSearch,\n    match,\n    isViews,\n    viewId,\n    views.dict,\n  ]);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject()} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import { BaseAction } from \"../../Common\";\nimport { Display } from \".\";\nimport { State } from \"../../Reducer\";\n\nexport const SET_DISPLAY_ACTION = \"SET_DISPLAY_ACTION\";\n\nexport interface SetDisplayAction extends BaseAction {\n  display: Display;\n}\n\nexport const setDisplay = (display: Display): SetDisplayAction => ({\n  display,\n  type: SET_DISPLAY_ACTION,\n});\n\nexport const setDisplayReducer = (\n  { display: displayState }: State,\n  { display }: SetDisplayAction,\n): void => {\n  displayState.display = display;\n};\n","import {\n  CommandBarButton,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\n\nimport { BUTTON_HEIGHT } from \"./Common\";\nimport { State } from \"../../Reducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setDisplay } from \"../../model/Display/SetDisplay\";\n\nconst theme = getTheme();\n\nexport const commandBarStyle = {\n  borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n  boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n  height: BUTTON_HEIGHT,\n  margin: 0,\n  padding: 0,\n  zIndex: 10,\n};\n\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    ...commandBarStyle,\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n  },\n});\n\ninterface AppCommandBarProps {\n  items: JSX.Element[];\n  farItems?: JSX.Element[];\n}\n\nexport default function AppCommandBar({ items, farItems }: AppCommandBarProps) {\n  const { display } = useSelector((state: State) => state.display);\n  const dispatch = useDispatch();\n\n  const toggleView = useCallback((): void => {\n    dispatch(setDisplay(display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.leftWrapper}>{items}</div>\n      <div className={styles.rightWrapper}>\n        {farItems}\n        <CommandBarButton\n          key=\"toggleView\"\n          ariaLabel=\"Toggle view\"\n          iconProps={{\n            iconName:\n              display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n          }}\n          text={display === \"list\" ? \"List\" : \"Grid\"}\n          styles={{\n            root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n          }}\n          menuProps={{\n            directionalHintFixed: true,\n            items: [\n              display === \"list\"\n                ? {\n                    iconProps: { iconName: \"GridViewMedium\" },\n                    key: \"gridButton\",\n                    onClick: toggleView,\n                    text: \"Grid\",\n                  }\n                : {\n                    iconProps: { iconName: \"BulletedListText\" },\n                    key: \"listButton\",\n                    onClick: toggleView,\n                    text: \"List\",\n                  },\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","export const completeItem = {\n  iconProps: { iconName: \"Completed\" },\n  key: \"complete-1-level\",\n  text: \"Mark as complete\",\n};\n\nexport const completeWithChildrenItem = {\n  iconProps: { iconName: \"CompletedSolid\" },\n  key: \"complete-2-level\",\n  text: \"Mark this and its children as complete\",\n};\n\nexport const uncompleteItem = {\n  iconProps: { iconName: \"Blocked2\" },\n  key: \"uncomplete\",\n  text: \"Mark as incomplete\",\n};\n\nexport const removeItem = {\n  iconProps: { iconName: \"Remove\" },\n  key: \"remove\",\n  text: \"Remove this as a child\",\n};\n\nexport const deleteItem = {\n  iconProps: { iconName: \"Delete\" },\n  key: \"delete\",\n  text: \"Delete this\",\n};\n","import { Subject, SubjectDictState } from \"../Subject\";\nimport { isUndefined } from \"lodash\";\nimport { BaseAction } from \"../../Common\";\nimport { State } from \"../../Reducer\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport interface OrderBaseAction extends BaseAction {\n  subjectId?: string;\n  viewId?: string;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    } else if (typeof a === \"string\" && typeof b === \"string\") {\n      a = a.toLowerCase();\n      b = b.toLowerCase();\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport function sortAllViews(\n  { views, subjects: { dict } }: State,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].views) {\n    const view = views.dict[id].children;\n    view.order = sortItems(dict, view);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set, it corresponds to the GUI of a view.\n   */\n  viewId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  state: State,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  const {\n    subjects: { dict },\n  } = state;\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    sortAllViews(state, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(state, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: State,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: State,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.subjects.dict[subjectId].completed = undefined;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\n\nimport { remove } from \"lodash\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: State,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  const { subjects, views } = state;\n  function deleteId(arr: string[]) {\n    remove(arr, (i) => i === subjectId);\n  }\n\n  const subject = subjects.dict[subjectId];\n\n  // Delete subjectId from its parents' order array\n  for (const parentId of subject.parents) {\n    deleteId(subjects.dict[parentId].children.order);\n  }\n\n  // Delete subjectId from its children parents' set\n  for (const childId of subject.children.order) {\n    subjects.dict[childId].parents.delete(subjectId);\n  }\n\n  // Delete subjectId from the subject list\n  deleteId(subjects.order.order);\n\n  // Delete subjectId from views\n  for (const viewId of subject.views) {\n    deleteId(views.dict[viewId].children.order);\n  }\n\n  sortAllParents(subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n  delete subjects.dict[subjectId];\n};\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\nimport { remove } from \"lodash\";\nimport { sortAllViews } from \"../Order\";\n\nexport const REMOVE_SUBJECT_FROM_VIEW = \"REMOVE_SUBJECT_FROM_VIEW\";\n\nexport interface RemoveSubjectFromViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const removeSubjectFromView = (\n  viewId: string,\n  subjectId: string,\n): RemoveSubjectFromViewAction => ({\n  subjectId,\n  type: REMOVE_SUBJECT_FROM_VIEW,\n  viewId,\n});\n\nexport const removeSubjectFromViewReducer = (\n  state: State,\n  { subjectId, viewId }: RemoveSubjectFromViewAction,\n): void => {\n  const { views } = state;\n  const view = views.dict[viewId];\n  remove(view.children.order, (v): boolean => v === subjectId);\n  sortAllViews(state, subjectId);\n};\n","import {\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\n\nimport { Item } from \"../../model/Subject\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { useDispatch } from \"react-redux\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  showCloseButton?: boolean;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  showCloseButton,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id, viewId } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeSubjectFromView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  if (showCloseButton) {\n    contextItems.push({\n      iconProps: { iconName: \"Cancel\" },\n      key: \"removeChildView\",\n      onClick: removeChildViewOnClick,\n      text: \"Remove this subject from this view\",\n    });\n  }\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import { SubjectBaseAction } from \".\";\n\nimport { sortItems, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const APPEND_CHILD_SUBJECT_TO_SUBJECT =\n  \"APPEND_CHILD_SUBJECT_TO_SUBJECT\";\n\nexport interface AppendChildSubjectToSubjectAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChildSubjectToSubject = (\n  subjectId: string,\n  child: string,\n): AppendChildSubjectToSubjectAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT_TO_SUBJECT,\n});\n\nexport const appendChildSubjectToSubjectReducer = (\n  state: State,\n  { subjectId, child }: AppendChildSubjectToSubjectAction,\n): void => {\n  const { subjects } = state;\n  const parentOrder = subjects.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(subjects.dict, parentOrder);\n  subjects.dict[child].parents.add(subjectId);\n  sortAllViews(state, subjectId);\n};\n","import React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport ListItemBase from \"./ListItemBase\";\nimport { appendChildSubjectToSubject } from \"../../model/Subject/AppendChildSubjectToSubject\";\nimport { isUndefined } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChildSubjectToSubject(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n  views: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n  viewId?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  const viewId = options ? options.viewId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id], viewId };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  parentId?: string;\n  viewId?: string;\n  illegalIds?: Set<string>;\n  order: string[];\n  maxHeight: number | string;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  order,\n  parentId,\n  maxHeight,\n  onRenderCell,\n  illegalIds,\n  notifyNoChildren,\n  viewId,\n}: ListViewProps): JSX.Element {\n  const { subjects } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => !!illegalIds && !illegalIds.has(i.id),\n    [illegalIds],\n  );\n\n  const options = {\n    condition: illegalIds ? condition : undefined,\n    parentId,\n    viewId,\n  };\n  const children = getItems(subjects.dict, order, options);\n\n  return (\n    <div className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          {\"There's nothing here\"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </div>\n  );\n}\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\nimport { sortItems, sortAllViews } from \"../Order\";\n\nexport const APPEND_SUBJECT_TO_VIEW = \"APPEND_SUBJECT_TO_VIEW\";\n\nexport interface AppendSubjectToViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendSubjectToView = (\n  viewId: string,\n  subjectId: string,\n): AppendSubjectToViewAction => ({\n  subjectId,\n  type: APPEND_SUBJECT_TO_VIEW,\n  viewId,\n});\n\nexport const appendSubjectToViewReducer = (\n  state: State,\n  { subjectId, viewId }: AppendSubjectToViewAction,\n): void => {\n  const { subjects, views } = state;\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n\n  // Add viewId to the subject's views set\n  subjects.dict[subjectId].views.add(viewId);\n  sortAllViews(state, subjectId);\n};\n","import { Subject, SubjectBaseAction, SubjectTypes } from \".\";\nimport {\n  appendSubjectToView,\n  appendSubjectToViewReducer,\n} from \"../Views/AppendSubjectToView\";\nimport {\n  appendChildSubjectToSubject as subjectsAppendChild,\n  appendChildSubjectToSubjectReducer as subjectsAppendChildReducer,\n} from \"./AppendChildSubjectToSubject\";\n\nimport { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../Order\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n    views: new Set(),\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(state, subjectsAppendChild(parentId, subjectId));\n  }\n  if (viewId !== undefined) {\n    appendSubjectToViewReducer(state, appendSubjectToView(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import {\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n  Icon,\n  Panel,\n  Text,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { border, gridTemplateColumns } from \"../ListItem/ListItemBase\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppendChildrenListItem from \"../ListItem/AppendChildrenListItem\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport SimpleListView from \"../SimpleListView\";\nimport { State } from \"../../Reducer\";\nimport { createSubject } from \"../../model/Subject/CreateSubject\";\n\nexport const AppendChildrenHeight = 32;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        outline: \"1px solid \" + theme.palette.themePrimary,\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"RowsChild\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subjects\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          parentId={parent}\n          illegalIds={\n            new Set(subjects.dict[parent].children.order.concat(parent))\n          }\n          order={subjects.order.order}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      <ContextualMenu\n        hidden={!menuVisible}\n        isBeakVisible={false}\n        onDismiss={hideMenu}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems}\n      />\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction } from \".\";\n\nimport { remove } from \"lodash\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER =\n  \"REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER\";\n\nexport interface RemoveChildSubjectFromSubjectAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChildSubjectFromSubject = (\n  subjectId: string,\n  parent: string,\n): RemoveChildSubjectFromSubjectAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER,\n});\n\nexport const removeChildSubjectFromSubjectReducer = (\n  state: State,\n  { subjectId, parent }: RemoveChildSubjectFromSubjectAction,\n): void => {\n  const { subjects } = state;\n  remove(subjects.dict[parent].children.order, (s): boolean => s === subjectId);\n  subjects.dict[subjectId].parents.delete(parent);\n  sortAllParents(subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: State,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.subjects.dict[subjectId].name = name;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  deleteItem,\n  removeItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport ListItemBase from \"./ListItemBase\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { isUndefined } from \"lodash\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { removeChildSubjectFromSubject } from \"../../model/Subject/RemoveChildSubjectFromSubject\";\nimport { setSubjectName } from \"../../model/Subject/SetSubjectName\";\nimport { useDispatch } from \"react-redux\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChildSubjectFromSubject(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      ...completeItem,\n      onClick: completeOnClick,\n    },\n    {\n      ...completeWithChildrenItem,\n      onClick: completeWithChildrenOnClick,\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      ...uncompleteItem,\n      onClick: uncompleteOnClick,\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      ...removeItem,\n      onClick: removeChildOnClick,\n    },\n    {\n      ...deleteItem,\n      onClick: deleteSubjectOnClick,\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(id)} tabIndex={-1}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    height: 32,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: State,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.subjects.dict[subjectId].description = description;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import { SubjectBaseAction } from \".\";\nimport { sortAllParents, sortAllViews } from \"../Order\";\nimport { State } from \"../../Reducer\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: State,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.subjects.dict[subjectId].dueDate = date;\n  sortAllParents(state.subjects.dict, subjectId);\n  sortAllViews(state, subjectId);\n};\n","import AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport {\n  DatePicker,\n  DefaultButton,\n  DirectionalHint,\n  IconButton,\n  Label,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  completeItem,\n  completeWithChildrenItem,\n  deleteItem,\n  uncompleteItem,\n} from \"../SubjectButtonsProps\";\nimport {\n  completeSubject,\n  uncompleteSubject,\n} from \"../../model/Subject/CompleteSubject\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport SimpleListView from \"../SimpleListView\";\nimport { State } from \"../../Reducer\";\nimport SubjectListItem from \"../ListItem/SubjectListItem\";\nimport TitleInput from \"../TitleInput\";\nimport { deleteSubject } from \"../../model/Subject/DeleteSubject\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { setSubjectDescription } from \"../../model/Subject/SetSubjectDescription\";\nimport { setSubjectDueDate } from \"../../model/Subject/SetSubjectDueDate\";\nimport { setSubjectName } from \"../../model/Subject/SetSubjectName\";\n\ninterface SubjectProps {\n  item: Item;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n  showCloseButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst focusBorder = \"1px solid \" + theme.palette.themePrimary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    display: \"grid\",\n    gridTemplateColumns: \"32px auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n  },\n  headerOpenButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    margin: 0,\n    marginTop: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 4,\n        outline: \"none\",\n      },\n    },\n  },\n  headerCloseButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 0,\n    margin: 0,\n    outline: \"none\",\n    zIndex: 2,\n    selectors: {\n      \"&:active\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:focus\": {\n        border: focusBorder,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 0,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.red,\n        color: theme.palette.white,\n      },\n    },\n  },\n  headerLink: {\n    gridColumn: \"3\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  item: { subject, id, viewId },\n  listHeight,\n  showOpenButton,\n  showCloseButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (viewId && id) {\n      dispatch(removeSubjectFromView(viewId, id));\n    }\n  }, [dispatch, id, viewId]);\n\n  const completeButtonItem = {\n    ...completeWithChildrenItem,\n    onClick: completeSubjectOnClick,\n  };\n  const deleteButtonItem = {\n    ...deleteItem,\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let text: string;\n  let heroButton;\n  let backgroundColor;\n  if (!subject.completed) {\n    backgroundColor = theme.palette.green;\n    text = \"Created \" + subject.created.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        primary\n        {...completeItem}\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeButtonItem, deleteButtonItem],\n        }}\n      />\n    );\n  } else {\n    backgroundColor = theme.palette.red;\n    text = \"Completed \" + subject.completed.toLocaleDateString();\n\n    heroButton = (\n      <DefaultButton\n        {...uncompleteItem}\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteButtonItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const header = (\n    <Text className={styles.header} tabIndex={-1}>\n      {text}\n    </Text>\n  );\n\n  const headerOpenLabel = \"Open \" + subject.name;\n  const headerCloseLabel = \"Close \" + subject.name;\n\n  return (\n    <Stack verticalAlign={\"center\"}>\n      <div className={styles.headerWrapper} style={{ backgroundColor }}>\n        {showCloseButton ? (\n          <IconButton\n            styles={{ root: { width: \"\" } }}\n            className={styles.headerCloseButton}\n            iconProps={{ iconName: \"Cancel\" }}\n            title={headerCloseLabel}\n            ariaLabel={headerCloseLabel}\n            onClick={removeChildViewOnClick}\n          />\n        ) : null}\n        {header}\n        {showOpenButton ? (\n          <Link\n            to={gotoSubject(id)}\n            className={styles.headerLink}\n            tabIndex={-1}\n          >\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.headerOpenButton}\n              iconProps={{ iconName: \"OpenFile\" }}\n              title={headerOpenLabel}\n              ariaLabel={headerOpenLabel}\n            />\n          </Link>\n        ) : null}\n      </div>\n\n      <div className={styles.body}>\n        <TitleInput\n          textAlign=\"center\"\n          className={styles.title}\n          value={name}\n          onChange={setNameLocal}\n          onBlur={setNameRedux}\n        />\n        <TextField\n          resizable={false}\n          multiline\n          rows={3}\n          value={description}\n          onChange={setDescriptionLocal}\n          onBlur={setDescriptionRedux}\n          className={styles.description}\n          styles={{ field: { height: 63 } }}\n        />\n        <div className={styles.date}>\n          <Label>Due date:</Label>\n          <div className={styles.datePicker}>\n            <DatePicker\n              disableAutoFocus={true}\n              value={subject.dueDate}\n              onSelectDate={setDueDateRedux}\n            />\n            {subject.dueDate ? (\n              <IconButton\n                iconProps={{ iconName: \"cancel\" }}\n                title=\"Clear date\"\n                onClick={clearDueDateOnClick}\n              />\n            ) : null}\n          </div>\n        </div>\n        <div className={styles.daysLeft}>\n          <Label>{`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}</Label>\n        </div>\n        <div\n          style={{\n            minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n          }}\n        >\n          <SimpleListView\n            parentId={id}\n            order={subjects.dict[id].children.order}\n            maxHeight={`calc(${listHeight})`}\n            onRenderCell={SubjectListItem}\n          />\n          <AppendChildren parent={id} />\n        </div>\n        <div className={styles.heroButton}>{heroButton}</div>\n      </div>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { Modal, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport SubjectComponent from \"../Subject\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewModalProps {\n  modalItem: Item | null;\n  dismissModal: () => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewModal({\n  modalItem,\n  dismissModal,\n  showCloseButton,\n}: ListViewModalProps): JSX.Element {\n  return (\n    <Modal\n      isOpen={!!modalItem}\n      onDismiss={dismissModal}\n      styles={{\n        main: {\n          backgroundColor: \"none\",\n          border: \"1px solid transparent\",\n          borderRadius: 4,\n        },\n      }}\n    >\n      <div className={styles.subjectWrapper}>\n        {modalItem ? (\n          <SubjectComponent\n            showCloseButton={showCloseButton}\n            item={modalItem}\n            showOpenButton={true}\n          />\n        ) : null}\n      </div>\n    </Modal>\n  );\n}\n","import { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\n\nimport React from \"react\";\nimport { State } from \"../Reducer\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport useWindowSize from \"@rehooks/window-size\";\n\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  content: {\n    alignItems: \"stretch\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n  },\n  mainWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    minWidth: MIN_COL_WIDTH,\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n});\n\ninterface WrapperProps {\n  commandBar?: JSX.Element;\n  main: JSX.Element;\n  parentId?: string;\n  title?: JSX.Element;\n}\n\nexport default function Wrapper({\n  commandBar,\n  main,\n  parentId,\n  title,\n}: WrapperProps) {\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  const sidebar = parentId ? (\n    <div className={styles.sidebar}>\n      <SubjectComponent item={{ id: parentId, subject: dict[parentId] }} />\n    </div>\n  ) : null;\n\n  // 2 is for the border\n  const width = parentId ? `calc(100% - ${MIN_COL_WIDTH + 2}px)` : \"100%\";\n\n  const windowSize = useWindowSize();\n  if (sidebar && windowSize.innerWidth < MIN_COL_WIDTH * 2) {\n    return sidebar;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {commandBar}\n      <div className={styles.content}>\n        <div className={styles.mainWrapper} style={{ width }}>\n          {title}\n          {main}\n        </div>\n        {sidebar}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport ListItemBase from \"../ListItem/ListItemBase\";\nimport { appendSubjectToView } from \"../../model/Views/AppendSubjectToView\";\nimport { isUndefined } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ListItem({ id, viewId, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendSubjectToView(viewId!, id));\n      }\n    },\n    [dispatch, id, viewId],\n  );\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.viewId)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React from \"react\";\nimport { Panel, IPanelProps } from \"office-ui-fabric-react\";\nimport SimpleListView from \"../SimpleListView\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport AppendChildrenListItem from \"./AppendChildrenListItem\";\nimport { isUndefined } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { Paths } from \"../../Routing\";\n\ninterface AppendChildrenProps {\n  isOpen: boolean;\n  hidePanel: IPanelProps[\"onDismiss\"];\n  viewId?: string;\n}\n\nexport default function AppendChildren({\n  hidePanel,\n  isOpen,\n  viewId,\n}: AppendChildrenProps): JSX.Element {\n  const { subjects, views } = useSelector((state: State) => state);\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n\n  const order = subjects.order.order;\n  const illegalIds = new Set(views.dict[viewId].children.order);\n\n  return (\n    <React.Fragment>\n      <Panel\n        isOpen={isOpen}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          viewId={viewId}\n          order={order}\n          illegalIds={illegalIds}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import { SortField, sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = subjects.dict[subjectId].children;\n    children.order = sortItems(subjects.dict, children);\n  }\n}\n\nfunction setViews(\n  state: State,\n  { parameters: { viewId }, fields }: SetFieldsArrayAction,\n) {\n  const children = state.views.dict[viewId!].children;\n  children.options.fields = fields;\n  children.order = sortItems(state.subjects.dict, children);\n}\n\nexport const setFieldsArrayReducer = (\n  state: State,\n  action: SetFieldsArrayAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import { sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = subjects.dict[subjectId].children;\n        children.order = sortItems(subjects.dict, children);\n      }\n      return;\n    }\n  }\n}\n\nfunction setViews(\n  state: State,\n  { parameters: { viewId }, key, desc }: SetFieldsDescAction,\n) {\n  const view = state.views.dict[viewId!];\n  for (const f of view.children.options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      view.children.order = sortItems(state.subjects.dict, view.children);\n      return;\n    }\n  }\n}\n\nexport const setFieldsDescReducer = (\n  state: State,\n  action: SetFieldsDescAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../../model/Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../../model/Order/SetFieldsArray\";\nimport { setFieldsDesc } from \"../../model/Order/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n  viewId,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId, viewId }));\n    },\n    [dispatch, fields, subjectId, viewId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(\n        setFieldsDesc(key, checked, { setSearchOptions, subjectId, viewId }),\n      );\n    },\n    [dispatch, viewId, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","import { sortItems, SetSortParameters, OrderBaseAction } from \".\";\nimport { State } from \"../../Reducer\";\nimport { SubjectState } from \"../Subject\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends OrderBaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nfunction setSubjects(\n  subjects: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n) {\n  let options;\n  if (setSearchOptions) {\n    options = subjects.searchSortOptions;\n  } else if (subjectId) {\n    options = subjects.dict[subjectId].children.options;\n  } else {\n    options = subjects.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = subjects.dict[subjectId].children;\n    children.order = sortItems(subjects.dict, children);\n  }\n}\n\nfunction setViews(\n  state: State,\n  { separateCompletedItems, parameters: { viewId } }: SetSeparateCompleteAction,\n) {\n  const view = state.views.dict[viewId!];\n  view.children.options.separateCompletedItems = separateCompletedItems;\n  view.children.order = sortItems(state.subjects.dict, view.children);\n}\n\nexport const setSeparateCompleteReducer = (\n  state: State,\n  action: SetSeparateCompleteAction,\n): void => {\n  if (action.parameters.viewId) {\n    setViews(state, action);\n  } else {\n    setSubjects(state.subjects, action);\n  }\n};\n","import { AllRouteComponentProps, Paths } from \"../Routing\";\nimport { CommandBarButton, Toggle } from \"office-ui-fabric-react\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AppendChildren from \"./View/AppendChildren\";\nimport { BUTTON_HEIGHT } from \"./AppCommandBar/Common\";\nimport SortButton from \"./AppCommandBar/SortButton\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../model/Order/SetSeparateComplete\";\nimport { SortItemsOptions } from \"../model/Order\";\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ninterface UseCommandBarOptions {\n  subjectId?: string;\n  showSort?: boolean;\n  match: AllRouteComponentProps[\"match\"];\n}\n\nexport function useCommandBar({\n  match,\n  showSort,\n  subjectId,\n}: UseCommandBarOptions) {\n  const { viewId } = match.params;\n  const isViews = match.path === Paths.view && !!viewId;\n\n  const dispatch = useDispatch();\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let currentOrder: SortItemsOptions;\n  if (isViews && viewId! in views.dict) {\n    currentOrder = views.dict[viewId!].children.options;\n  } else if (subjectId && subjectId in subjects.dict) {\n    currentOrder = subjects.dict[subjectId].children.options;\n  } else {\n    currentOrder = subjects.order.options;\n  }\n\n  const setSeparateCompleteOnChange = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId, viewId }));\n    },\n    [dispatch, subjectId, viewId],\n  );\n\n  const items = [];\n\n  const [panelOpen, setShowPanel] = useState(false);\n  const showPanel = useCallback((): void => {\n    setShowPanel(true);\n  }, []);\n  const hidePanel = useCallback((): void => {\n    setShowPanel(false);\n  }, []);\n\n  if (isViews) {\n    items.push(\n      <CommandBarButton\n        key=\"appendChildren\"\n        text=\"Append child subjects\"\n        iconProps={{ iconName: \"RowsChild\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={showPanel}\n        styles={commandBarStyles}\n      />,\n      <AppendChildren\n        key=\"panel\"\n        hidePanel={hidePanel}\n        isOpen={panelOpen}\n        viewId={viewId}\n      />,\n    );\n  }\n\n  if (showSort) {\n    items.push(\n      <SortButton\n        key=\"sort\"\n        subjectId={subjectId}\n        viewId={viewId}\n        fields={currentOrder.fields}\n      />,\n    );\n  }\n\n  items.push(\n    <Toggle\n      key=\"separateComplete\"\n      checked={currentOrder.separateCompletedItems}\n      offText={\"Don't separate completed items\"}\n      onText={\"Separate completed items\"}\n      onChange={setSeparateCompleteOnChange}\n      styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n    />,\n  );\n\n  return items;\n}\n","import { IconButton, getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport React, { useCallback } from \"react\";\n\nimport { Item } from \"../../model/Subject\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\nimport { removeSubjectFromView } from \"../../model/Views/RemoveSubjectFromView\";\nimport { useDispatch } from \"react-redux\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewButtonsProps {\n  item: Item;\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n}\n\nexport default function ListViewButtons({\n  item,\n  openModal,\n  showCloseButton,\n}: ListViewButtonsProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const openModalOnClick = useCallback((): void => {\n    openModal(item);\n  }, [item, openModal]);\n\n  const removeChildViewOnClick = useCallback((): void => {\n    if (item.viewId && item.id) {\n      dispatch(removeSubjectFromView(item.viewId, item.id));\n    }\n  }, [dispatch, item]);\n\n  const openLabel = \"Open \" + item.subject.name;\n  const editLabel = \"Edit \" + item.subject.name;\n  const closeLabel = \"Close \" + item.subject.name;\n\n  return (\n    <div className={styles.rowButtonWrapper}>\n      {showCloseButton ? (\n        <IconButton\n          onClick={removeChildViewOnClick}\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"Cancel\" }}\n          title={closeLabel}\n          ariaLabel={closeLabel}\n        />\n      ) : null}\n      <IconButton\n        onClick={openModalOnClick}\n        styles={{ root: { width: \"\" } }}\n        className={styles.rowButton}\n        iconProps={{ iconName: \"Edit\" }}\n        title={editLabel}\n        ariaLabel={editLabel}\n      />\n      <Link to={gotoSubject(item.id)}>\n        <IconButton\n          styles={{ root: { width: \"\" } }}\n          className={styles.rowButton}\n          iconProps={{ iconName: \"OpenFile\" }}\n          title={openLabel}\n          ariaLabel={openLabel}\n        />\n      </Link>\n    </div>\n  );\n}\n","import { IRectangle, List, ScrollToMode } from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect } from \"react\";\nimport {\n  SubjectViewHookProps,\n  useSubjectView,\n  getDiffIndex,\n} from \"./SubjectView\";\nimport Wrapper, { MIN_COL_WIDTH } from \"./Wrapper\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { AllRouteComponentProps } from \"../Routing\";\nimport AppCommandBar from \"./AppCommandBar\";\nimport { Item } from \"../model/Subject\";\nimport { State } from \"../Reducer\";\nimport SubjectComponent from \"./Subject\";\nimport { useCommandBar } from \"./UseCommandBar\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: \"100%\",\n    overflow: \"auto\",\n    overflowY: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\ninterface GridViewProps extends SubjectViewHookProps {\n  title?: JSX.Element;\n  showCloseButton?: boolean;\n}\n\nfunction GridView({\n  title,\n  match,\n  showCloseButton,\n  ...props\n}: GridViewProps & AllRouteComponentProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback(\n    (props?: Item): JSX.Element | undefined => {\n      if (!props) {\n        return;\n      }\n\n      return (\n        <div\n          className={styles.tile}\n          data-is-focusable={true}\n          key={props.id}\n          style={{\n            height: ROW_HEIGHT,\n            width: 100 / columnCount.current + \"%\",\n          }}\n        >\n          <div className={styles.padding}>\n            <div className={styles.contents}>\n              <SubjectComponent\n                showCloseButton={showCloseButton}\n                item={props}\n                listHeight={\"260px\"}\n                showOpenButton={true}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    },\n    [showCloseButton],\n  );\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  const commandBarItems = useCommandBar({ match, showSort: true, subjectId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <List\n          ref={gridRef}\n          className={styles.grid}\n          items={items}\n          getItemCountForPage={getItemCountForPage}\n          getPageHeight={getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={renderCell}\n        />\n      }\n      parentId={subjectId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(GridView);\n","import { GetItemsOptions, Item, getItems } from \"../model/Subject\";\nimport React, { useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport {\n  SetSortParameters,\n  SortField,\n  SortItemsOptions,\n  sortItems,\n} from \"../model/Order\";\n\nimport GridView from \"./GridView\";\nimport ListView from \"./ListView\";\nimport { State } from \"../Reducer\";\nimport { SubjectsRouteProps } from \"../model/Subject/Routing\";\nimport { isUndefined } from \"lodash\";\nimport { useSelector } from \"react-redux\";\n\nexport const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n\nexport interface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = { viewId };\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId } = match.params;\n  const {\n    display: { display },\n    subjects: { dict },\n  } = useSelector((state: State) => state);\n\n  if (!isUndefined(parentId) && !(parentId in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const options = { parentId };\n  // if (isUndefined(parentId)) {\n  if (display === \"list\") {\n    return <ListView options={options} />;\n  } else {\n    return <GridView options={options} />;\n  }\n}\n","import { APPBAR_HEIGHT, VIEW_TITLE_HEIGHT } from \"../../Common\";\nimport { AllRouteComponentProps, Paths } from \"../../Routing\";\nimport { DetailsList, SelectionMode } from \"office-ui-fabric-react\";\n\nimport { APP_COMMAND_BAR_HEIGHT } from \"../AppCommandBar/Common\";\nimport AppCommandBar from \"../AppCommandBar\";\nimport { GetItemsOptions } from \"../../model/Subject\";\nimport ListViewContextMenu from \"./ListViewContextMenu\";\nimport ListViewModal from \"./ListViewModal\";\nimport React from \"react\";\nimport { SortItemsOptions } from \"../../model/Order\";\nimport { State } from \"../../Reducer\";\nimport Wrapper from \"../Wrapper\";\nimport { useCommandBar } from \"../UseCommandBar\";\nimport { useListViewContextMenu } from \"./UseListViewContextMenu\";\nimport { useListViewDetailsList } from \"./UseListViewDetailsList\";\nimport { useListViewModal } from \"./UseListViewModal\";\nimport { useListViewRender } from \"./UseListViewRender\";\nimport { useListViewScroll } from \"./UseListViewScroll\";\nimport { useSelector } from \"react-redux\";\nimport { useSubjectView } from \"../SubjectView\";\nimport { withRouter } from \"react-router-dom\";\n\ninterface ListViewProps {\n  title?: JSX.Element;\n  options?: GetItemsOptions;\n  showCloseButton?: boolean;\n  sortOptions?: SortItemsOptions;\n}\n\nfunction ListView({\n  title,\n  history,\n  match,\n  options,\n  showCloseButton,\n  sortOptions,\n}: ListViewProps & AllRouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const {\n    dispatchSetFieldsDesc,\n    getKey,\n    onItemInvoked,\n    reorder,\n  } = useListViewDetailsList({\n    history,\n    reorderParams,\n    sortFields,\n  });\n\n  const { dismissModal, modalItem, openModal, setModalItem } = useListViewModal(\n    subjects,\n  );\n  const { contextMenuProps, onItemContextMenu } = useListViewContextMenu(\n    setModalItem,\n    showCloseButton,\n  );\n\n  const columns = useListViewRender({\n    openModal,\n    showCloseButton,\n    sortFields,\n  });\n\n  const listRef = useListViewScroll({\n    componentOrder,\n    currentOrder,\n    parentId,\n    setCurrentOrder,\n    subjects,\n  });\n\n  const height = `calc(100vh - ${APPBAR_HEIGHT +\n    APP_COMMAND_BAR_HEIGHT +\n    (match.path === Paths.view ? VIEW_TITLE_HEIGHT : 0)}px)`;\n\n  const commandBarItems = useCommandBar({ match, subjectId: parentId });\n\n  return (\n    <Wrapper\n      commandBar={<AppCommandBar items={commandBarItems} />}\n      main={\n        <React.Fragment>\n          <DetailsList\n            styles={{ root: { height } }}\n            getKey={getKey}\n            componentRef={listRef}\n            onColumnHeaderClick={dispatchSetFieldsDesc}\n            columns={columns}\n            items={items}\n            isHeaderVisible={true}\n            selectionMode={SelectionMode.none}\n            onItemInvoked={onItemInvoked}\n            onItemContextMenu={onItemContextMenu}\n            columnReorderOptions={{\n              frozenColumnCountFromEnd: 1,\n              frozenColumnCountFromStart: 0,\n              handleColumnReorder: reorder,\n            }}\n          />\n          {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n          <ListViewModal\n            modalItem={modalItem}\n            dismissModal={dismissModal}\n            showCloseButton={showCloseButton}\n          />\n        </React.Fragment>\n      }\n      parentId={parentId}\n      title={title}\n    />\n  );\n}\n\nexport default withRouter(ListView);\n","import { useCallback } from \"react\";\nimport { setFieldsArray } from \"../../model/Order/SetFieldsArray\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsDesc } from \"../../model/Order/SetFieldsDesc\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../../model/Order\";\nimport { Item } from \"../../model/Subject\";\nimport { History } from \"history\";\nimport { gotoSubject } from \"../../model/Subject/Routing\";\n\ninterface UseListViewDetailsList {\n  history: History;\n  sortFields: SortField[];\n  reorderParams: SetSortParameters;\n}\n\nexport function useListViewDetailsList({\n  history,\n  reorderParams,\n  sortFields,\n}: UseListViewDetailsList) {\n  const dispatch = useDispatch();\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(item.id));\n    },\n    [history],\n  );\n\n  return { dispatchSetFieldsDesc, getKey, onItemInvoked, reorder };\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Item, SubjectState } from \"../../model/Subject\";\n\nexport interface UseListViewModal {\n  modalItem: Item | null;\n  setModalItem: React.Dispatch<React.SetStateAction<Item | null>>;\n  openModal: (item: Item) => void;\n  dismissModal: () => void;\n}\n\nexport function useListViewModal(subjects: SubjectState): UseListViewModal {\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem, setModalItem]);\n\n  return { dismissModal, modalItem, openModal, setModalItem };\n}\n","import { useCallback, useState } from \"react\";\nimport { IDetailsListProps } from \"office-ui-fabric-react\";\nimport { ListViewContextMenuProps } from \"./ListViewContextMenu\";\nimport { UseListViewModal } from \"./UseListViewModal\";\nimport { Item } from \"../../model/Subject\";\n\ninterface UseListViewContextMenu {\n  contextMenuProps: ListViewContextMenuProps | null;\n  onItemContextMenu: IDetailsListProps[\"onItemContextMenu\"];\n}\nexport function useListViewContextMenu(\n  setModalItem: UseListViewModal[\"setModalItem\"],\n  showCloseButton?: boolean,\n): UseListViewContextMenu {\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n          showCloseButton,\n        });\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu, showCloseButton, setModalItem],\n  );\n  return { contextMenuProps, onItemContextMenu };\n}\n","import React, { useCallback } from \"react\";\nimport { Item, Subject } from \"../../model/Subject\";\nimport { IColumn } from \"office-ui-fabric-react\";\nimport ListViewButtons from \"./ListViewButtons\";\nimport { SortField, SortFieldKey } from \"../../model/Order\";\n\ninterface UseListView {\n  openModal: (item: Item) => void;\n  showCloseButton?: boolean;\n  sortFields: SortField[];\n}\n\nexport function useListViewRender({\n  openModal,\n  showCloseButton,\n  sortFields,\n}: UseListView) {\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => (\n      <ListViewButtons\n        item={item}\n        openModal={openModal}\n        showCloseButton={showCloseButton}\n      />\n    ),\n    [openModal, showCloseButton],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"itemButtons\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n  return columns;\n}\n","import { IDetailsList } from \"office-ui-fabric-react\";\nimport { useRef, useEffect } from \"react\";\nimport { UseSubjectView, getDiffIndex } from \"../SubjectView\";\nimport { SubjectState } from \"../../model/Subject\";\n\ninterface UseListViewScroll {\n  currentOrder: string[];\n  componentOrder: string[];\n  parentId?: string;\n  setCurrentOrder: UseSubjectView[\"setCurrentOrder\"];\n  subjects: SubjectState;\n}\n\nexport function useListViewScroll({\n  componentOrder,\n  currentOrder,\n  parentId,\n  setCurrentOrder,\n  subjects,\n}: UseListViewScroll) {\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  return listRef;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"../model/Search/Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../model/Subject\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, query] = getSearchMatch(match);\n  const {\n    display: { display },\n    subjects: { dict, searchSortOptions },\n  } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { State } from \"../../Reducer\";\nimport { ViewBaseAction } from \".\";\n\nexport const SET_VIEW_NAME = \"SET_VIEW_NAME\";\n\nexport interface SetViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const setViewName = (\n  viewId: string,\n  name: string,\n): SetViewNameAction => ({\n  name,\n  type: SET_VIEW_NAME,\n  viewId,\n});\n\nexport const setViewNameReducer = (\n  { views }: State,\n  { name, viewId }: SetViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GridView from \"../GridView\";\nimport ListView from \"../ListView\";\nimport { Location } from \"history\";\nimport { Paths } from \"../../Routing\";\nimport { State } from \"../../Reducer\";\nimport TitleInput from \"../TitleInput\";\nimport { ViewRouteProps } from \"../../model/Views/Routing\";\nimport { isUndefined } from \"lodash\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { setViewName } from \"../../model/Views/SetViewName\";\n\nconst styles = mergeStyleSets({\n  title: {\n    marginTop: 10,\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ viewId }: ViewProps): JSX.Element {\n  const {\n    display: { display },\n    views,\n  } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(setViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const options = { viewId };\n  const title = (\n    <TitleInput\n      className={styles.title}\n      value={localName}\n      onChange={onChange}\n      onBlur={updateName}\n    />\n  );\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} showCloseButton={true} title={title} />\n    ) : (\n      <ListView options={options} showCloseButton={true} title={title} />\n    );\n\n  return <div className={styles.wrapper}>{viewComponent}</div>;\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../Order\";\nimport { ViewBaseAction } from \".\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import { AllParams, Paths } from \"../../Routing\";\nimport {\n  CommandBar,\n  INavLink,\n  INavLinkGroup,\n  Nav,\n  getTheme,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RouteComponentProps } from \"react-router\";\nimport { State } from \"../../Reducer\";\nimport { commandBarStyle } from \"../AppCommandBar\";\nimport { createView } from \"../../model/Views/CreateView\";\nimport { gotoView } from \"../../model/Views/Routing\";\nimport { subjectBase } from \"../../model/Subject/Routing\";\nimport { useGetCreateButtonItems } from \"./UseGetCreateButtonItems\";\n\nexport const viewsNavWidth = 208;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  navWrapper: {\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  nav: {\n    background: theme.palette.white,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: viewsNavWidth,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<AllParams>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n      ],\n    },\n  ];\n\n  if (viewGroup.links!.length > 0) {\n    groups[0].links.push(viewGroup);\n  }\n\n  groups[0].links.push({\n    icon: \"Add\",\n    key: \"createView\",\n    name: \"Create view\",\n    onClick: dispatchCreateView,\n    url: \"\",\n  });\n\n  const items = useGetCreateButtonItems(match.params);\n\n  return (\n    <div className={styles.navWrapper}>\n      <CommandBar items={items} styles={{ root: commandBarStyle }} />\n      <Nav\n        selectedKey={selectedKey}\n        expandButtonAriaLabel=\"Expand or collapse\"\n        className={styles.nav}\n        groups={groups}\n        styles={{ navItems: { margin: 0 } }}\n      />\n    </div>\n  );\n}\n","import { AllParams } from \"../../Routing\";\nimport { ICommandBarItemProps } from \"office-ui-fabric-react\";\nimport { createSubject } from \"../../model/Subject/CreateSubject\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport function useGetCreateButtonItems({\n  parentId,\n  viewId,\n}: AllParams): ICommandBarItemProps[] {\n  const dispatch = useDispatch();\n\n  const createSubjectOnClick = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  return [\n    {\n      iconProps: {\n        iconName: parentId || viewId ? \"ChildOf\" : \"Add\",\n      },\n      key: \"createSubject\",\n      onClick: createSubjectOnClick,\n      text: parentId || viewId ? \"Create child subject\" : \"Create subject\",\n    },\n  ];\n}\n","import { AllPaths, Paths } from \"./Routing\";\nimport { Redirect, Route, Switch } from \"react-router\";\n\nimport AppBar from \"./components/AppBar\";\nimport React from \"react\";\nimport SearchResults from \"./components/SearchResults\";\nimport SubjectView from \"./components/SubjectView\";\nimport View from \"./components/View\";\nimport ViewsNav from \"./components/ViewsNav\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { subjectBase } from \"./model/Subject/Routing\";\nimport { APPBAR_HEIGHT } from \"./Common\";\n\nconst styles = mergeStyleSets({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"auto\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: `calc(100vh - ${APPBAR_HEIGHT}px)`,\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <React.Fragment>\n      <Route path={AllPaths} component={AppBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  APPEND_CHILD_SUBJECT_TO_SUBJECT,\n  AppendChildSubjectToSubjectAction,\n  appendChildSubjectToSubjectReducer,\n} from \"./AppendChildSubjectToSubject\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  UncompleteSubjectAction,\n  completeSubjectReducer,\n  uncompleteSubjectReducer,\n} from \"./CompleteSubject\";\nimport {\n  CREATE_SUBJECT,\n  CreateSubjectAction,\n  createSubjectReducer,\n} from \"./CreateSubject\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./DeleteSubject\";\nimport {\n  REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER,\n  RemoveChildSubjectFromSubjectAction,\n  removeChildSubjectFromSubjectReducer,\n} from \"./RemoveChildSubjectFromSubject\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  SetSubjectDescriptionAction,\n  setSubjectDescriptionReducer,\n} from \"./SetSubjectDescription\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./SetSubjectDueDate\";\nimport {\n  SET_SUBJECT_NAME,\n  SetSubjectNameAction,\n  setSubjectNameReducer,\n} from \"./SetSubjectName\";\nimport { SubjectState, SubjectTypes } from \".\";\nimport { getInitialOrder, getInitialSortItemsOptions } from \"../Order\";\n\nimport { Action } from \"redux\";\nimport { State } from \"../../Reducer\";\nimport produce from \"immer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(draftState, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            draftState,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(draftState, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(\n            draftState,\n            action as UncompleteSubjectAction,\n          );\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(draftState, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(\n            draftState,\n            action as SetSubjectDueDateAction,\n          );\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT_FROM_SUBJECT_REDUCER:\n          removeChildSubjectFromSubjectReducer(\n            draftState,\n            action as RemoveChildSubjectFromSubjectAction,\n          );\n          break;\n        case APPEND_CHILD_SUBJECT_TO_SUBJECT:\n          appendChildSubjectToSubjectReducer(\n            draftState,\n            action as AppendChildSubjectToSubjectAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import {\n  APPEND_SUBJECT_TO_VIEW,\n  AppendSubjectToViewAction,\n  appendSubjectToViewReducer,\n} from \"./AppendSubjectToView\";\nimport { CREATE_VIEW, CreateViewAction, createViewReducer } from \"./CreateView\";\nimport {\n  REMOVE_SUBJECT_FROM_VIEW,\n  RemoveSubjectFromViewAction,\n  removeSubjectFromViewReducer,\n} from \"./RemoveSubjectFromView\";\nimport {\n  SET_VIEW_NAME,\n  SetViewNameAction,\n  setViewNameReducer,\n} from \"./SetViewName\";\n\nimport { Action } from \"redux\";\nimport { State } from \"../../Reducer\";\nimport { ViewState } from \".\";\nimport produce from \"immer\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case SET_VIEW_NAME:\n          setViewNameReducer(draftState, action as SetViewNameAction);\n          break;\n        case APPEND_SUBJECT_TO_VIEW:\n          appendSubjectToViewReducer(\n            draftState,\n            action as AppendSubjectToViewAction,\n          );\n          break;\n        case REMOVE_SUBJECT_FROM_VIEW:\n          removeSubjectFromViewReducer(\n            draftState,\n            action as RemoveSubjectFromViewAction,\n          );\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"../Order/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  SetFieldsDescAction,\n  setFieldsDescReducer,\n} from \"../Order/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  SetSeparateCompleteAction,\n  setSeparateCompleteReducer,\n} from \"../Order/SetSeparateComplete\";\n\nimport { State } from \"../../Reducer\";\nimport produce from \"immer\";\nimport { sortItems, OrderBaseAction } from \".\";\n\nconst orderReducer = (state: State, action: OrderBaseAction): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      switch (action.type) {\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(draftState, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(draftState, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            draftState,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n      }\n\n      const { subjects } = draftState;\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n\n      return draftState;\n    },\n  ),\n});\n\nexport default orderReducer;\n","import { State } from \"../../Reducer\";\nimport { BaseAction } from \"../../Common\";\nimport produce from \"immer\";\nimport {\n  SET_DISPLAY_ACTION,\n  setDisplayReducer,\n  SetDisplayAction,\n} from \"./SetDisplay\";\nimport { DisplayState } from \".\";\n\nexport const initialDisplayState = (): DisplayState => ({\n  display: \"grid\",\n});\n\nconst displayReducer = (state: State, action: BaseAction) => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      switch (action.type) {\n        case SET_DISPLAY_ACTION:\n          setDisplayReducer(draftState, action as SetDisplayAction);\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default displayReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./model/Subject/Reducer\";\nimport { SubjectState } from \"./model/Subject\";\nimport { ViewState } from \"./model/Views\";\nimport viewReducer, { initialViewState } from \"./model/Views/Reducer\";\nimport orderReducer from \"./model/Order/Reducer\";\nimport { DisplayState } from \"./model/Display\";\nimport displayReducer, { initialDisplayState } from \"./model/Display/Reducer\";\n\nexport interface State {\n  display: DisplayState;\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  display: initialDisplayState(),\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(\n  initialReducer,\n  subjectReducer,\n  viewReducer,\n  orderReducer,\n  displayReducer,\n);\n","import { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \".\";\n\ninterface PersistSubject\n  extends Omit<\n    Subject,\n    \"created\" | \"completed\" | \"dueDate\" | \"parents\" | \"views\"\n  > {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n  views: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents], views: [...s.views] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, views, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n        views: new Set(views),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \".\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    const orderSet = new Set<string>();\n    for (const viewId of state.order) {\n      orderSet.add(state.dict[viewId].name);\n    }\n    return { ...state, orderSet };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./model/Subject/Transform\";\nimport transformViews from \"./model/Views/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}