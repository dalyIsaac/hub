{"version":3,"sources":["subject/components/Title.tsx","subject/model/Completed.ts","subject/model/Delete.ts","subject/components/ListItem.tsx","subject/components/ListView.tsx","subject/components/Subject.tsx","subject/model/Title.ts","subject/model/Description.ts","subject/components/GridView.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","Reducer.ts","index.tsx"],"names":["theme","getTheme","styles","mergeStyleSets","title","textAlign","fontSize","FontSizes","size28","border","outline","borderRadius","paddingBottom","width","selectors","&:focus","borderBottom","palette","neutralTertiary","&:hover","Title","_ref","value","className","onBlur","onChange","react_default","a","createElement","defaultValue","completeSubject","subjectId","level","arguments","length","undefined","type","completeSubjectReducer","state","markAsComplete","date","Date","completed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","next","done","err","return","uncompleteSubject","deleteSubject","wrapper","display","flexDirection","marginTop","marginBottom","checkbox","margin","content","flexGrow","paddingLeft","paddingRight","open","color","white","background","themePrimary","cursor","height","filter","&:active","ListItem","id","subject","dispatch","useDispatch","hostId","useRef","getId","listItemRef","_useState","useState","_useState2","Object","slicedToArray","menuVisible","_setMenuVisible","setCalloutVisible","e","preventDefault","checked","contextItems","key","text","onClick","item","data-is-focusable","onContextMenu","ref","Checkbox","label","name","TooltipHost","current","aria-labelledby","Icon","iconName","ContextualMenu","isBeakVisible","onDismiss","target","directionalHint","DirectionalHint","bottomRightEdge","items","ListViewItem","props","list","overflow","borderTop","ListView","subjects","useSelector","childIds","push","FocusZone","List","onRenderCell","header","backgroundColor","neutralLight","padding","body","paddingTop","description","justifyContent","daysLeft","heroButton","Subject","setName","_useState3","_useState4","setDescription","dueDate","getDate","Stack","verticalAlign","Text","created","toLocaleString","setSubjectName","TextField","multiline","rows","newValue","setSubjectDescription","Label","DatePicker","concat","DefaultButton","primary","split","menuProps","bottomCenter","position","tile","float","sizer","padder","left","top","right","bottom","contents","GridView","columnCount","columnWidth","toConsumableArray","entries","getItemCountForPage","itemIndex","surfaceRect","Math","ceil","floor","getPageHeight","ROW_HEIGHT","renderedWindowsAhead","_props","style","App","Boolean","window","location","hostname","match","getRandomChildren","max","i","random","toString","subjectReducer","amount","parents","Set","add","getInitialState","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","parentId","remove","s","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","delete","deleteSubjectReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","initializeIcons","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6ee1bbd.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\n\ninterface TitleProps {\n  className: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    textAlign: \"center\",\n    fontSize: FontSizes.size28,\n    border: \"1px solid transparent\",\n    outline: \"none\",\n    borderRadius: 0,\n    paddingBottom: 4,\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function({\n  value,\n  className,\n  onBlur,\n  onChange,\n}: TitleProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        defaultValue={\"Untitled\"}\n      />\n    </div>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  state: SubjectState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (state[subjectId].completed === undefined) {\n    state[subjectId].completed = date;\n    if (level > 1) {\n      for (const childId of state[subjectId].children) {\n        markAsComplete(state, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state[subjectId].completed = undefined;\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state[subjectId].parents) {\n    remove(state[parentId].children, (s) => s === subjectId);\n  }\n  for (const childId of state[subjectId].children) {\n    state[childId].parents.delete(subjectId);\n  }\n  delete state[subjectId];\n};\n","import React, { useRef, useState } from \"react\";\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { getId } from \"office-ui-fabric-react/lib/Utilities\";\nimport { DirectionalHint } from \"office-ui-fabric-react/lib/Callout\";\nimport {\n  ContextualMenu,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react/lib/ContextualMenu\";\nimport { Subject } from \"../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\n\nconst theme = getTheme();\n\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    border,\n    borderRadius: 2,\n    marginTop: 1,\n    marginBottom: 1,\n  },\n  checkbox: {\n    margin: 8,\n  },\n  content: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n  open: {\n    color: theme.palette.white,\n    background: theme.palette.themePrimary,\n    fontSize: 18,\n    cursor: \"pointer\",\n    border: \"none\",\n    outline: \"none\",\n    margin: -1,\n    height: 40,\n    selectors: {\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n      },\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n      },\n    },\n  },\n});\n\ninterface ListItemProps {\n  id: string;\n  subject: Subject;\n}\n\nexport default function ListItem({ id, subject }: ListItemProps): JSX.Element {\n  const dispatch = useDispatch();\n  const hostId = useRef(getId(id));\n  const listItemRef = useRef(null);\n\n  const [menuVisible, _setMenuVisible] = useState(false);\n  function setCalloutVisible(e: React.MouseEvent<HTMLDivElement>) {\n    e.preventDefault();\n    _setMenuVisible(!menuVisible);\n  }\n\n  const onChange = (e: any, checked?: boolean, level?: number) => {\n    if (checked === true) {\n      dispatch(completeSubject(id, level));\n    } else {\n      dispatch(uncompleteSubject(id));\n    }\n  };\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      key: \"complete-1-level\",\n      text: \"Mark as complete\",\n      onClick: (e, item) => {\n        if (item) {\n          onChange(e, !item.checked, 1);\n        }\n      },\n    },\n    {\n      key: \"complete-2-level\",\n      text: \"Mark this and its children as complete\",\n      onClick: (e, item) => {\n        if (item) {\n          onChange(e, !item.checked, 2);\n        }\n      },\n    },\n    {\n      key: \"delete\",\n      text: \"Delete this\",\n      onClick: () => dispatch(deleteSubject(id)),\n    },\n  ];\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={listItemRef}\n      key={id}\n    >\n      <div className={styles.wrapper}>\n        <Checkbox\n          checked={!!subject.completed}\n          label={subject.name}\n          className={styles.checkbox}\n          onChange={onChange}\n        />\n\n        <div className={styles.content}>\n          {/* // TODO: include custom content here. It should render below. */}\n        </div>\n\n        <TooltipHost content={\"Open \" + subject.name} id={hostId.current}>\n          <button className={styles.open} aria-labelledby={hostId.current}>\n            <Icon iconName=\"OpenFile\" />\n          </button>\n        </TooltipHost>\n      </div>\n\n      {menuVisible ? (\n        <ContextualMenu\n          isBeakVisible={false}\n          onDismiss={setCalloutVisible}\n          target={listItemRef}\n          directionalHint={DirectionalHint.bottomRightEdge}\n          items={contextItems}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport function ListViewItem(props?: ListItemProps): JSX.Element | undefined {\n  if (!props) {\n    return;\n  }\n\n  const { id, subject } = props;\n  return <ListItem id={id} subject={subject} />;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { List } from \"office-ui-fabric-react/lib/List\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { FocusZone } from \"office-ui-fabric-react/lib/FocusZone\";\nimport { State } from \"../../Reducer\";\nimport { ListViewItem } from \"./ListItem\";\n\ninterface ListViewProps {\n  id: string;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n    height: 300,\n    borderTop: border,\n    borderBottom: border,\n  },\n});\n\nexport default function({ id }: ListViewProps): JSX.Element {\n  const subjects = useSelector((state: State) => state.subjects);\n\n  const childIds = subjects[id].children;\n  const children = [];\n  for (const id of childIds) {\n    children.push({ id, subject: subjects[id] });\n  }\n\n  return (\n    <FocusZone>\n      <List\n        items={children}\n        onRenderCell={ListViewItem}\n        className={styles.list}\n      />\n    </FocusZone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FocusZone } from \"office-ui-fabric-react/lib/FocusZone\";\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\nimport { Label } from \"office-ui-fabric-react/lib/Label\";\nimport { DatePicker } from \"office-ui-fabric-react/lib/DatePicker\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { DefaultButton } from \"office-ui-fabric-react/lib/Button\";\nimport { DirectionalHint } from \"office-ui-fabric-react/lib/Callout\";\n\nimport { Subject } from \"../model/Subject\";\nimport Title from \"./Title\";\nimport ListView from \"./ListView\";\nimport { setSubjectName } from \"../model/Title\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { IContextualMenuItem } from \"office-ui-fabric-react/lib/ContextualMenu\";\nimport { completeSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\n\ninterface SubjectProps {\n  subject: Subject;\n  id: string;\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  header: {\n    backgroundColor: theme.palette.themePrimary,\n    color: theme.palette.neutralLight,\n    padding: 5,\n    selectors: {\n      \"&:focus\": {\n        outline: \"none\",\n        border: \"none\",\n      },\n    },\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    paddingTop: 10,\n    paddingBottom: 5,\n  },\n  description: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  heroButton: {\n    marginTop: 10,\n  },\n});\n\nexport default function({ subject, id }: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description || \"\");\n\n  const updateTitleLocal = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n  const updateTitleRedux = () => {\n    if (subject.name !== name) {\n      dispatch(setSubjectName(id, name));\n    }\n  };\n  const updateDescriptionLocal = (e: any, newValue?: string) => {\n    setDescription(newValue || \"\");\n  };\n  const updateDescriptionRedux = () => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  };\n\n  const onClick = () => dispatch(completeSubject(id, 1));\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      key: \"complete-2-level\",\n      text: \"Mark this and its children as complete\",\n      onClick: () => {\n        dispatch(completeSubject(id, 2));\n      },\n    },\n    {\n      key: \"delete\",\n      text: \"Delete this\",\n      onClick: () => dispatch(deleteSubject(id)),\n    },\n  ];\n\n  const daysLeft = subject.dueDate\n    ? new Date().getDate() - subject.dueDate.getDate()\n    : \"∞\";\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <Text className={styles.header}>\n          Created {subject.created.toLocaleString()}\n        </Text>\n\n        <div className={styles.body}>\n          <Title\n            className={styles.title}\n            value={name}\n            onChange={updateTitleLocal}\n            onBlur={updateTitleRedux}\n          />\n          <TextField\n            multiline\n            rows={3}\n            value={description}\n            onChange={updateDescriptionLocal}\n            onBlur={updateDescriptionRedux}\n            className={styles.description}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <DatePicker value={subject.dueDate} />\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>{`${daysLeft} days left`}</Label>\n          </div>\n          <ListView id={id} />\n          <div className={styles.heroButton}>\n            <DefaultButton\n              primary\n              text=\"Mark as complete\"\n              split={true}\n              onClick={onClick}\n              menuProps={{\n                directionalHint: DirectionalHint.bottomCenter,\n                isBeakVisible: false,\n                items: contextItems,\n              }}\n            />\n          </div>\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state[subjectId].name = name;\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state[subjectId].description = description;\n};\n","import React from \"react\";\nimport { List } from \"office-ui-fabric-react/lib/List\";\nimport { IRectangle } from \"office-ui-fabric-react/lib/Utilities\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Subject } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 600;\nconst MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"hidden\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  sizer: {\n    paddingBottom: \"100%\",\n  },\n  padder: {\n    position: \"absolute\",\n    left: 4,\n    top: 4,\n    right: 4,\n    bottom: 4,\n  },\n  contents: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    outline: \"1px solid \" + theme.palette.neutralTertiary,\n  },\n});\n\nexport default function(): JSX.Element {\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n\n  const subjects = useSelector((state: State) => state.subjects);\n  const renderCell = (props?: [string, Subject]): JSX.Element | undefined => {\n    if (!props) {\n      return;\n    }\n\n    const [id, subject] = props;\n    return (\n      <div\n        className={styles.tile}\n        data-is-focusable={true}\n        key={id}\n        style={{\n          width: 100 / columnCount.current + \"%\",\n          height: ROW_HEIGHT,\n        }}\n      >\n        <div className={styles.sizer}>\n          <div className={styles.padder}>\n            <div className={styles.contents}>\n              <SubjectComponent subject={subject} id={id} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\n  const getItemCountForPage = (\n    itemIndex?: number,\n    surfaceRect?: IRectangle,\n  ): number => {\n    if (itemIndex === 0 && surfaceRect) {\n      columnCount.current = Math.ceil(surfaceRect.width / MIN_COL_WIDTH);\n      columnWidth.current = Math.floor(surfaceRect.width / columnCount.current);\n    }\n\n    return columnCount.current * ROWS_PER_PAGE;\n  };\n\n  return (\n    <List\n      className={styles.list}\n      items={[...Object.entries(subjects)]}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React from \"react\";\nimport GridView from \"./subject/components/GridView\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <GridView />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Title\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\n\nconst NUM_ITEMS = 23;\n\nfunction getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst getRandomChildren = (): string[] => {\n  const children = [];\n  for (let i = 0; i < 12; i++) {\n    children.push(getRandomInt(NUM_ITEMS).toString());\n  }\n  return children;\n};\n\nconst getInitialState = (amount: number): SubjectState => {\n  const state: SubjectState = {};\n  for (let i = 0; i < amount; i++) {\n    state[i.toString()] = {\n      type: \"BaseSubject\",\n      name: `Name${i}`,\n      created: new Date(),\n      description: `Description${i}`,\n      dueDate: new Date(),\n      children: getRandomChildren(),\n      parents: new Set(),\n    };\n  }\n\n  // Update parents\n  for (let i = 0; i < amount; i++) {\n    for (const childId of state[i.toString()].children) {\n      state[childId].parents.add(i.toString());\n    }\n  }\n  return state;\n};\n\nconst subjectReducer = (\n  state: SubjectState = getInitialState(NUM_ITEMS),\n  action: Action,\n) =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case SET_SUBJECT_NAME:\n        setSubjectNameReducer(draftState, action as SetSubjectNameAction);\n        break;\n      case SET_SUBJECT_DESCRIPTION:\n        setSubjectDescriptionReducer(\n          draftState,\n          action as SetSubjectDescriptionAction,\n        );\n        break;\n      case COMPLETE_SUBJECT:\n        completeSubjectReducer(draftState, action as CompleteSubjectAction);\n        break;\n      case UNCOMPLETE_SUBJECT:\n        uncompleteSubjectReducer(draftState, action as UncompleteSubjectAction);\n        break;\n      case DELETE_SUBJECT:\n        deleteSubjectReducer(draftState, action as DeleteSubjectAction);\n        break;\n      default:\n        break;\n    }\n    return draftState;\n  });\n\nexport default subjectReducer;\n","import { combineReducers } from \"redux\";\nimport subjectReducer from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\n\nexport interface State {\n  subjects: SubjectState;\n}\n\nexport default combineReducers({\n  subjects: subjectReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\n\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}