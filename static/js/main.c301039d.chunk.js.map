{"version":3,"sources":["Search/Routing.ts","Search/SearchBar.tsx","subject/Routing.ts","Display.ts","Common.ts","AppBar.tsx","Order.ts","subject/model/AppendChild.ts","views/model/AppendChild.ts","subject/model/Create.ts","subject/model/SetSeparateComplete.ts","AppCommandBar/Common.ts","subject/model/SetFieldsArray.ts","subject/model/SetFieldsDesc.ts","AppCommandBar/SortButton.tsx","views/Routing.ts","Routing.ts","subject/model/Subject.ts","subject/components/SimpleListView.tsx","subject/components/ListItem/ListItemBase.tsx","views/components/AppendChildrenListItem.tsx","views/components/AppendChildren.tsx","AppCommandBar/AppCommandBar.tsx","TitleInput.tsx","subject/model/Name.ts","subject/model/Description.ts","subject/model/Completed.ts","subject/model/Delete.ts","subject/model/Date.ts","subject/components/ListItem/AppendChildrenListItem.tsx","subject/components/AppendChildren.tsx","subject/model/RemoveChild.ts","subject/components/ListItem/SubjectListItem.tsx","subject/components/Subject.tsx","subject/components/View.ts","subject/components/GridView.tsx","subject/components/ListView/ListViewContextMenu.tsx","subject/components/ListView/ListView.tsx","subject/components/ViewWithSidebar.tsx","subject/components/SubjectView.tsx","Search/SearchResults.tsx","views/model/Create.ts","views/components/ViewsNav.tsx","views/model/Name.ts","views/components/View.tsx","App.tsx","ServiceWorker.ts","subject/Reducer.ts","views/Reducer.ts","Reducer.ts","subject/model/Transform.ts","views/model/Transform.ts","index.tsx"],"names":["searchBase","gotoSearch","param","query","concat","getSearchMatch","match","params","toLowerCase","error","Error","styles","mergeStyleSets","search","display","flexDirection","searchBox","flexGrow","searchDropdown","width","options","key","text","SearchBar","_ref","history","_useState","useState","_useState2","Object","slicedToArray","setParam","_useState3","_useState4","setQuery","useEffect","_getSearchMatch","_getSearchMatch2","updateParam","useCallback","e","option","undefined","onSearch","push","react_default","a","createElement","className","Dropdown","selectedKey","onChange","SearchBox","value","placeholder","subjectBase","gotoSubject","id","url","qs","stringify","getDisplay","location","parse","isUndefined","Array","isArray","updateDisplay","pathname","PANEL_HEADER_HEIGHT","theme","getTheme","appBar","alignItems","backgroundColor","palette","themePrimary","boxShadow","gridTemplateColumns","height","link","color","black","textDecoration","selectors","&:hover","neutralLighter","title","paddingLeft","AppBar","props","react_router_dom","to","Text","variant","sortItems","subjects","_ref3","order","_ref3$options","fields","separateCompletedItems","items","completedItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","completed","err","return","compare","b","desc","compareLength","length","Set","size","aDefined","bDefined","coeff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref2","_a","_b","result","comparator","sort","sortAllParents","dict","subjectId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","parents","parent","children","appendChild","child","type","appendChildReducer","state","parentOrder","add","appendChildView","viewId","appendChildViewReducer","views","createSubject","objectSpread","v4","setSeparateComplete","parameters","BUTTON_HEIGHT","setFieldsArray","setFieldsDesc","dragEnterClass","neutralLight","gripperWrapper","justifyContent","cursor","wrapper","SortButton","setSearchOptions","draggedIndex","useRef","draggedItem","selection","Selection","target","calloutVisible","setShowCallout","dismissCallout","openCallout","dispatch","useDispatch","insertBeforeItem","item","draggedItems","current","isIndexSelected","getSelection","filter","itm","indexOf","insertIndex","splice","apply","toConsumableArray","canDrop","_dropContext","_dragContext","canDrag","_item","onDragEnter","_event","onDragLeave","onDrop","onDragStart","itemIndex","_selectedItems","dragDropEvents","onDragEnd","dispatchSetFieldsDesc","checked","sortColumns","minWidth","name","onRender","Icon","iconName","fieldName","Toggle","root","margin","defaultChecked","offText","onText","Fragment","ref","CommandBarButton","iconProps","ariaLabel","onClick","Callout","onDismiss","hidden","directionalHint","DirectionalHint","bottomCenter","isBeakVisible","onBlur","DetailsList","columns","selectionMode","SelectionMode","none","gotoView","Paths","base","subject","view","viewBase","AllPaths","getItems","parentId","condition","list","overflow","SimpleListView","maxHeight","onRenderCell","illegalIds","notifyNoChildren","useSelector","i","has","FocusZone","style","role","aria-label","List","border","neutralTertiary","borderRadius","gridTemplateRows","marginBottom","checkboxWrapper","checkbox","divider","background","gridColumn","marginTop","button","content","gridRow","paddingRight","ListItemBase","contextMenuItems","editable","label","onCheckboxChange","onEditableBlur","localLabel","_setLocalLabel","menuVisible","_setMenuVisible","setCalloutVisible","preventDefault","setLocalLabel","newValue","newLabel","data-is-focusable","onContextMenu","Checkbox","TextField","borderless","ContextualMenu","bottomRightEdge","ListItem","AppendChildrenListItem","AppendChildren","hidePanel","isOpen","_useSelector","react_router","Panel","isLightDismiss","headerText","leftWrapper","rightWrapper","white","borderBottom","neutralQuaternary","position","zIndex","commandBarStyles","AppCommandBar","_match$params","rootOrder","searchSortOptions","appendChildrenPanelVisible","setAppendChildrenPanelVisible","showAppendChildrenPanel","hideAppendChildrenPanel","dispatchCreateChildSubject","dispatchCreateSubject","dispatchSetSeparateComplete","dispatchSetSeparateCompleteSearch","toggleView","leftComponents","rightComponents","panel","path","createSubjectButton","marginLeft","marginRight","menuProps","directionalHintFixed","fontSize","FontSizes","size28","outline","paddingBottom","textAlign","&:focus","TitleInput","_ref$textAlign","setSubjectName","setSubjectDescription","description","completeSubject","level","arguments","completeSubjectReducer","markAsComplete","date","Date","uncompleteSubject","deleteSubject","setSubjectDueDate","AppendChildrenListItem_ListItem","AppendChildrenHeight","padding","&:active","icon","components_AppendChildren","panelVisible","setPanelVisible","setMenuVisible","showPanel","toggleMenu","hideMenu","addChild","removeChild","open","completeOnClick","completeWithChildrenOnClick","uncompleteOnClick","removeChildOnClick","deleteSubjectOnClick","completeContextItems","uncompleteContextItems","contextItems","buttonLabel","IconButton","SubjectListItem","SubjectListItem_ListItem","assign","headerWrapper","header","borderTopLeftRadius","borderTopRightRadius","headerButton","borderBottomLeftRadius","borderBottomRightRadius","borderRight","borderTop","headerLink","body","paddingTop","datePicker","daysLeft","appendChildren","heroButton","SubjectComponent","listHeight","showOpenButton","setName","setDescription","first","second","setNameLocal","setNameRedux","newName","setDescriptionLocal","setDescriptionRedux","setDueDateRedux","clearDueDateOnClick","completeItem","deleteItem","dueDate","Math","ceil","valueOf","red","toLocaleString","DefaultButton","split","green","created","primary","headerOpenLabel","Stack","verticalAlign","multiline","rows","Label","DatePicker","onSelectDate","minHeight","getDiffIndex","oldOrder","newOrder","ROWS_PER_PAGE","ROW_HEIGHT","MIN_COL_WIDTH","grid","tile","float","contents","getPageHeight","GridView","columnCount","columnWidth","gridRef","_useSubjectView","useSubjectView","componentOrder","currentOrder","setCurrentOrder","index","s","scrollToIndex","ScrollToMode","top","renderCell","getItemCountForPage","surfaceRect","floor","renderedWindowsAhead","ListViewContextMenu","ev","onEditClick","detailsList","rowButton","rowButtonWrapper","subjectWrapper","withRouter","sortOptions","reorderParams","sortFields","column","isSortedDescending","modalItem","setModalItem","dismissModal","openModal","renderSubjectString","_index","renderChildren","renderDate","renderButtons","openLabel","editLabel","onItemInvoked","columnsDict","isResizable","reorder","targetIndex","dragged","_","field","isSorted","listRef","focusIndex","getKey","contextMenuProps","updateContextMenuProps","dismissContextMenu","onItemContextMenu","componentRef","onColumnHeaderClick","isHeaderVisible","columnReorderOptions","frozenColumnCountFromEnd","frozenColumnCountFromStart","handleColumnReorder","Modal","main","sidebar","ViewWithSidebar","viewComponent","sidebarComponent","setOrder","SubjectView","windowSize","useWindowSize","ListView_ListView","parentSubject","innerWidth","searchParams","reduce","acc","curr","String","SearchResults","childId","includes","createView","nav","boxSizing","overflowY","ViewsNav","gotoNewView","setGotoNewView","setSelectedKey","dispatchCreateView","viewGroup","isExpanded","links","v","groups","Nav","expandButtonAriaLabel","updateViewName","ViewComponent","localName","setLocalName","updateName","View","App","component","Boolean","window","hostname","subjectReducer","action","produce","draftState","setSubjectNameReducer","setSubjectDescriptionReducer","uncompleteSubjectReducer","remove","delete","deleteSubjectReducer","setSubjectDueDateReducer","subjectType","subjectsAppendChildReducer","subjectsAppendChild","createSubjectReducer","removeChildReducer","_ref$parameters","setFieldsArrayReducer","f","setFieldsDescReducer","setSeparateCompleteReducer","initialViewState","orderSet","viewReducer","getUntitledName","createViewReducer","updateViewNameReducer","reduceReducers","transformSubjects","createTransform","_key","inboundSubjects","everythingElse","objectWithoutProperties","_i","_Object$entries","entries","_ref4","_ref5","outboundSubjects","_i2","_Object$entries2","_ref8","_ref7","_ref7$","completedDate","dueDateDate","whitelist","transformViews","persistConfig","storage","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","persistor","persistStore","initializeIcons","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c301039d.chunk.js","sourcesContent":["import { match as Match } from \"react-router\";\nimport { Subject } from \"../subject/model/Subject\";\n\nexport interface SearchRouteProps {\n  param: string;\n  query: string;\n}\n\nexport const searchBase = \"/search\";\n\nexport const gotoSearch = (param: keyof Subject, query: string): string =>\n  `${searchBase}/${param}/${query}`;\n\nexport const getSearchLocation = (location: Location): [string, string] => {\n  const components = location.pathname.split(\"/\").slice(1);\n  if (components[0] !== \"search\" || components.length < 3) {\n    throw new Error(\"This isn't a search path.\");\n  }\n  const param = components[1];\n  const query = components[2];\n  return [param, query];\n};\n\nexport const getSearchMatch = (\n  match: Match<SearchRouteProps>,\n): [string, string] => {\n  try {\n    const param = match.params.param.toLowerCase();\n    const query = match.params.query.toLowerCase();\n    return [param, query];\n  } catch (error) {\n    throw Error(\"This isn't a search path.\");\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  IDropdownOption,\n  Dropdown,\n  SearchBox,\n  mergeStyleSets,\n} from \"office-ui-fabric-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { gotoSearch, SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { Subject } from \"../subject/model/Subject\";\n\nconst styles = mergeStyleSets({\n  search: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    // width: \"calc(100vw / 3)\",\n  },\n  searchBox: {\n    flexGrow: 1,\n  },\n  searchDropdown: {\n    width: 150,\n  },\n});\n\nexport const options: IDropdownOption[] = [\n  { key: \"name\", text: \"Name\" },\n  { key: \"description\", text: \"Description\" },\n  { key: \"childname\", text: \"Child name\" },\n  { key: \"childdescription\", text: \"Child description\" },\n];\n\nexport default function SearchBar({\n  history,\n  match,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const [param, setParam] = useState(\"name\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect((): void => {\n    try {\n      const [param, query] = getSearchMatch(match);\n      setParam(param);\n      setQuery(query);\n    } catch (error) {\n      setParam(\"name\");\n      setQuery(\"\");\n    }\n  }, [match]);\n\n  const updateParam = useCallback((e: any, option?: IDropdownOption): void => {\n    const key = option ? option.key : undefined;\n    if (typeof key === \"string\") {\n      setParam(key);\n    }\n  }, []);\n\n  const onSearch = useCallback(\n    (query: any): void => {\n      history.push(gotoSearch(param as keyof Subject, query));\n    },\n    [history, param],\n  );\n\n  return (\n    <div className={styles.search}>\n      <Dropdown\n        options={options}\n        selectedKey={param}\n        className={styles.searchDropdown}\n        onChange={updateParam}\n      />\n      <SearchBox\n        className={styles.searchBox}\n        value={query}\n        placeholder=\"Search\"\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n","import qs from \"query-string\";\nimport { DisplayOptions } from \"../Display\";\n\nexport interface SubjectsRouteProps {\n  parentId?: string;\n}\n\nexport const subjectBase = \"/subjects\";\n\nexport const gotoSubject = (display: DisplayOptions, id?: string): string => {\n  const url = id ? id : \"\";\n  return `${subjectBase}/${url}?${qs.stringify({ display })}`;\n};\n","import qs from \"query-string\";\nimport { isUndefined } from \"util\";\nimport { Location } from \"history\";\n\nexport type DisplayOptions = \"grid\" | \"list\";\n\nexport const getDisplay = (location: Location): DisplayOptions => {\n  const query = qs.parse(location.search);\n  const display =\n    !isUndefined(query.display) && !Array.isArray(query.display)\n      ? query.display\n      : \"grid\";\n  if (display === \"list\") {\n    return display;\n  }\n  return \"grid\";\n};\n\nexport const updateDisplay = (\n  location: Location,\n  display: DisplayOptions,\n): string => `${location.pathname}?display=${display}`;\n","export interface BaseAction {\n  type: string;\n}\n\nexport const APPBAR_HEIGHT = 48;\nexport const PANEL_HEADER_HEIGHT = 115;\n","import React from \"react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport SearchBar from \"./Search/SearchBar\";\nimport { SearchRouteProps } from \"./Search/Routing\";\nimport { gotoSubject } from \"./subject/Routing\";\nimport { getDisplay } from \"./Display\";\nimport { APPBAR_HEIGHT } from \"./Common\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  appBar: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.themePrimary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"grid\",\n    gridTemplateColumns: \"150px minmax(200px, auto) 150px\",\n    height: APPBAR_HEIGHT,\n  },\n  link: {\n    color: theme.palette.black,\n    textDecoration: \"none\",\n    selectors: {\n      \"&:hover\": {\n        color: theme.palette.neutralLighter,\n        textDecoration: \"none\",\n      },\n    },\n  },\n  searchDropdown: {\n    width: 150,\n  },\n  title: {\n    paddingLeft: 24,\n  },\n});\n\nexport default function AppBar(\n  props: RouteComponentProps<SearchRouteProps>,\n): JSX.Element {\n  const display = getDisplay(props.location);\n\n  return (\n    <div className={styles.appBar}>\n      <Link to={gotoSubject(display)} className={styles.link}>\n        <Text className={styles.title} variant=\"xLarge\">\n          hub\n        </Text>\n      </Link>\n\n      <SearchBar {...props} />\n\n      <div></div>\n    </div>\n  );\n}\n","import { Subject, SubjectDictState } from \"./subject/model/Subject\";\nimport { isUndefined } from \"lodash\";\n\nexport type SortFieldKey = keyof Omit<Subject, \"parents\">;\n\nexport interface SortField {\n  key: SortFieldKey;\n  name: string;\n  desc: boolean;\n  compareLength?: boolean;\n}\n\nexport interface SortItemsOptions {\n  fields: SortField[];\n  separateCompletedItems: boolean;\n}\n\nexport interface OrderState {\n  order: string[];\n  options: SortItemsOptions;\n}\n\nexport function comparator(\n  fields: SortField[],\n  subjects: SubjectDictState,\n): (a: string, b: string) => number {\n  function compare(\n    a: any,\n    b: any,\n    desc: boolean,\n    compareLength?: boolean,\n  ): number {\n    if (compareLength) {\n      if (\n        (Array.isArray(a) && Array.isArray(b)) ||\n        (typeof a === \"string\" && typeof b === \"string\")\n      ) {\n        a = a.length;\n        b = b.length;\n      } else if (a instanceof Set && b instanceof Set) {\n        a = a.size;\n        b = b.size;\n      }\n    }\n\n    const aDefined = !isUndefined(a);\n    const bDefined = !isUndefined(b);\n    const coeff = desc ? -1 : 1;\n    if (!aDefined && !bDefined) {\n      return 0;\n    } else if (aDefined && !bDefined) {\n      return coeff * 1;\n    } else if (!aDefined && bDefined) {\n      return coeff * -1;\n    } else if (a < b) {\n      return coeff * -1;\n    } else if (a > b) {\n      return coeff * 1;\n    }\n    return 0;\n  }\n\n  return function compareOrder(a: string, b: string): number {\n    for (const { key, desc, compareLength } of fields) {\n      let _a: any = subjects[a][key];\n      let _b: any = subjects[b][key];\n      if (key === \"children\") {\n        _a = (_a as OrderState)[\"order\"];\n        _b = (_b as OrderState)[\"order\"];\n      }\n      const result = compare(_a, _b, desc, compareLength);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortItems(\n  subjects: SubjectDictState,\n  { order, options: { fields, separateCompletedItems } }: OrderState,\n): string[] {\n  const items = [];\n  const completedItems = [];\n\n  for (const id of order) {\n    const subject = subjects[id];\n    if (subject.completed && separateCompletedItems) {\n      completedItems.push(id);\n    } else {\n      items.push(id);\n    }\n  }\n\n  const compare = comparator(fields, subjects);\n  items.sort(compare);\n  completedItems.sort(compare);\n\n  return items.concat(completedItems);\n}\n\nexport function sortAllParents(\n  dict: SubjectDictState,\n  subjectId: string,\n): void {\n  if (!(subjectId in dict)) {\n    return;\n  }\n\n  for (const id of dict[subjectId].parents) {\n    const parent = dict[id].children;\n    parent.order = sortItems(dict, parent);\n  }\n}\n\nexport const getInitialSortItemsOptions = (): SortItemsOptions => ({\n  fields: [\n    {\n      key: \"name\",\n      name: \"Name\",\n      desc: false,\n    },\n    {\n      key: \"created\",\n      name: \"Date created\",\n      desc: false,\n    },\n    {\n      key: \"completed\",\n      name: \"Date completed\",\n      desc: false,\n    },\n    {\n      key: \"children\",\n      name: \"Number of children\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"description\",\n      name: \"Description size\",\n      desc: false,\n      compareLength: true,\n    },\n    {\n      key: \"dueDate\",\n      name: \"Due date\",\n      desc: false,\n    },\n  ],\n  separateCompletedItems: true,\n});\n\nexport const getInitialOrder = (): OrderState => ({\n  options: getInitialSortItemsOptions(),\n  order: [],\n});\n\n/**\n * Used to set different sort parameters.\n */\nexport interface SetSortParameters {\n  /**\n   * When set, it corresponds to the GUID of a subject.\n   */\n  subjectId?: string;\n\n  /**\n   * When set to true, the action will affect the `searchSortOptions` attribute\n   * of `subjects`.\n   */\n  setSearchOptions?: boolean;\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_SUBJECT = \"APPEND_CHILD_SUBJECT\";\n\nexport interface AppendChildAction extends SubjectBaseAction {\n  child: string;\n}\n\nexport const appendChild = (\n  subjectId: string,\n  child: string,\n): AppendChildAction => ({\n  child,\n  subjectId,\n  type: APPEND_CHILD_SUBJECT,\n});\n\nexport const appendChildReducer = (\n  state: SubjectState,\n  { subjectId, child }: AppendChildAction,\n): void => {\n  const parentOrder = state.dict[subjectId].children;\n  parentOrder.order.push(child);\n  parentOrder.order = sortItems(state.dict, parentOrder);\n  state.dict[child].parents.add(subjectId);\n};\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\nimport { sortItems } from \"../../Order\";\n\nexport const APPEND_CHILD_VIEW = \"APPEND_CHILD_VIEW\";\n\nexport interface AppendChildViewAction extends ViewBaseAction {\n  subjectId: string;\n}\n\nexport const appendChildView = (\n  viewId: string,\n  subjectId: string,\n): AppendChildViewAction => ({\n  subjectId,\n  type: APPEND_CHILD_VIEW,\n  viewId,\n});\n\nexport const appendChildViewReducer = (\n  { subjects, views }: State,\n  { subjectId, viewId }: AppendChildViewAction,\n): void => {\n  const children = views.dict[viewId].children;\n  children.order.push(subjectId);\n  views.dict[viewId].children.order = sortItems(subjects.dict, children);\n};\n","import { Subject, SubjectTypes, SubjectBaseAction } from \"./Subject\";\nimport { v4 } from \"uuid\";\nimport { getInitialOrder } from \"../../Order\";\nimport {\n  appendChildReducer as subjectsAppendChildReducer,\n  appendChild as subjectsAppendChild,\n} from \"./AppendChild\";\nimport {\n  appendChildView,\n  appendChildViewReducer,\n} from \"../../views/model/AppendChild\";\nimport { State } from \"../../Reducer\";\n\nexport const CREATE_SUBJECT = \"CREATE_SUBJECT\";\n\ninterface CreateSubjectProps<T extends SubjectTypes> {\n  subjectType?: T;\n  parentId?: string;\n  viewId?: string;\n}\n\nexport interface CreateSubjectAction<T extends SubjectTypes>\n  extends SubjectBaseAction,\n    CreateSubjectProps<T> {}\n\nexport const createSubject = <T extends SubjectTypes>(\n  props?: CreateSubjectProps<T>,\n): CreateSubjectAction<T> => ({\n  subjectId: v4(),\n  type: CREATE_SUBJECT,\n  ...props,\n});\n\nexport const createSubjectReducer = (\n  state: State,\n  {\n    subjectType,\n    parentId,\n    subjectId,\n    viewId,\n  }: CreateSubjectAction<SubjectTypes>,\n): void => {\n  const subject: Subject = {\n    children: getInitialOrder(),\n    created: new Date(),\n    description: \"\",\n    name: \"Untitled\",\n    parents: new Set(),\n    type: subjectType || \"BaseSubject\",\n  };\n\n  state.subjects.dict[subjectId] = subject;\n\n  if (parentId !== undefined) {\n    subjectsAppendChildReducer(\n      state.subjects,\n      subjectsAppendChild(parentId, subjectId),\n    );\n  }\n  if (viewId !== undefined) {\n    appendChildViewReducer(state, appendChildView(viewId, subjectId));\n  }\n  state.subjects.order.order.push(subjectId);\n};\n","import { BaseAction } from \"../../Common\";\nimport { SubjectState } from \"./Subject\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_SEPARATE_COMPLETE = \"SET_SEPARATE_COMPLETE\";\n\nexport interface SetSeparateCompleteAction extends BaseAction {\n  parameters: SetSortParameters;\n  separateCompletedItems: boolean;\n}\n\nexport const setSeparateComplete = (\n  separateCompletedItems: boolean,\n  parameters: SetSortParameters,\n): SetSeparateCompleteAction => ({\n  parameters,\n  separateCompletedItems,\n  type: SET_SEPARATE_COMPLETE,\n});\n\nexport const setSeparateCompleteReducer = (\n  state: SubjectState,\n  {\n    separateCompletedItems,\n    parameters: { subjectId, setSearchOptions },\n  }: SetSeparateCompleteAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.separateCompletedItems = separateCompletedItems;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","export const APP_COMMAND_BAR_HEIGHT = 45;\nexport const BUTTON_HEIGHT = 44;\n","import { SortField, sortItems, SetSortParameters } from \"../../Order\";\nimport { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\n\nexport const SET_FIELDS_ARRAY = \"SET_FIELDS_ARRAY\";\n\nexport interface SetFieldsArrayAction extends BaseAction {\n  parameters: SetSortParameters;\n  fields: SortField[];\n}\n\nexport const setFieldsArray = (\n  fields: SortField[],\n  parameters: SetSortParameters,\n): SetFieldsArrayAction => ({\n  fields,\n  parameters,\n  type: SET_FIELDS_ARRAY,\n});\n\nexport const setFieldsArrayReducer = (\n  state: SubjectState,\n  { parameters: { subjectId, setSearchOptions }, fields }: SetFieldsArrayAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  options.fields = fields;\n  if (subjectId) {\n    const children = state.dict[subjectId].children;\n    children.order = sortItems(state.dict, children);\n  }\n};\n","import { SubjectState } from \"./Subject\";\nimport { BaseAction } from \"../../Common\";\nimport { sortItems, SetSortParameters } from \"../../Order\";\n\nexport const SET_FIELDS_DESC = \"SET_FIELDS_DESC\";\n\nexport interface SetFieldsDescAction extends BaseAction {\n  parameters: SetSortParameters;\n  key: string;\n  desc: boolean;\n}\n\nexport const setFieldsDesc = (\n  key: string,\n  desc: boolean,\n  parameters: SetSortParameters,\n): SetFieldsDescAction => ({\n  desc,\n  key,\n  parameters,\n  type: SET_FIELDS_DESC,\n});\n\nexport const setFieldsDescReducer = (\n  state: SubjectState,\n  {\n    parameters: { subjectId, setSearchOptions },\n    key,\n    desc,\n  }: SetFieldsDescAction,\n): void => {\n  let options;\n  if (setSearchOptions) {\n    options = state.searchSortOptions;\n  } else if (subjectId) {\n    options = state.dict[subjectId].children.options;\n  } else {\n    options = state.order.options;\n  }\n\n  for (const f of options.fields) {\n    if (f.key === key) {\n      f.desc = desc;\n      if (subjectId) {\n        const children = state.dict[subjectId].children;\n        children.order = sortItems(state.dict, children);\n      }\n      return;\n    }\n  }\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Callout,\n  DetailsList,\n  DirectionalHint,\n  IDragDropEvents,\n  IDragDropContext,\n  Selection,\n  SelectionMode,\n  IColumn,\n  Toggle,\n  mergeStyleSets,\n  getTheme,\n  CommandBarButton,\n  Icon,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { SortField, SetSortParameters } from \"../Order\";\nimport { useDispatch } from \"react-redux\";\nimport { setFieldsArray } from \"../subject/model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../subject/model/SetFieldsDesc\";\nimport { BUTTON_HEIGHT } from \"./Common\";\n\ninterface SortCalloutProps extends SetSortParameters {\n  fields: SortField[];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  dragEnterClass: {\n    backgroundColor: theme.palette.neutralLight,\n  },\n  gripperWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    selectors: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    paddingLeft: 2,\n    width: \"100%\",\n  },\n});\n\nexport default function SortButton({\n  subjectId,\n  setSearchOptions,\n  fields,\n}: SortCalloutProps): JSX.Element {\n  const draggedIndex = useRef(-1);\n  const draggedItem = useRef(null);\n  const selection = useRef(new Selection());\n  const target = useRef(null);\n\n  const [calloutVisible, setShowCallout] = useState(false);\n\n  const dismissCallout = useCallback((): void => {\n    setShowCallout(false);\n  }, []);\n  const openCallout = useCallback((): void => {\n    setShowCallout(true);\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const insertBeforeItem = useCallback(\n    (item: any): void => {\n      const draggedItems = selection.current.isIndexSelected(\n        draggedIndex.current,\n      )\n        ? (selection.current.getSelection() as SortField[])\n        : [draggedItem.current!];\n\n      const items = fields.filter(\n        (itm): boolean => draggedItems.indexOf(itm) === -1,\n      );\n      let insertIndex = items.indexOf(item);\n\n      // if dragging/dropping on itself, index will be 0.\n      if (insertIndex === -1) {\n        insertIndex = 0;\n      }\n\n      items.splice(insertIndex, 0, ...draggedItems);\n      dispatch(setFieldsArray(items, { setSearchOptions, subjectId }));\n    },\n    [dispatch, fields, subjectId, setSearchOptions],\n  );\n\n  const canDrop = useCallback(\n    (\n      _dropContext?: IDragDropContext,\n      _dragContext?: IDragDropContext,\n    ): boolean => true,\n    [],\n  );\n\n  const canDrag = useCallback((_item?: any): boolean => true, []);\n\n  const onDragEnter = useCallback((_item?: any, _event?: DragEvent): string => {\n    return styles.dragEnterClass;\n  }, []);\n\n  const onDragLeave = useCallback((_item?: any, _event?: DragEvent): void => {\n    return;\n  }, []);\n\n  const onDrop = useCallback(\n    (item?: any, _event?: DragEvent): void => {\n      if (draggedItem.current) {\n        insertBeforeItem(item);\n      }\n    },\n    [insertBeforeItem],\n  );\n\n  const onDragStart = useCallback(\n    (\n      item?: any,\n      itemIndex?: number,\n      _selectedItems?: any[],\n      _event?: MouseEvent,\n    ): void => {\n      draggedItem.current = item;\n      draggedIndex.current = itemIndex!;\n    },\n    [],\n  );\n\n  const onDragEnd = useCallback((_item?: any, _event?: DragEvent): void => {\n    draggedItem.current = null;\n    draggedIndex.current = -1;\n  }, []);\n\n  const dragDropEvents: IDragDropEvents = {\n    canDrag,\n    canDrop,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragStart,\n    onDrop,\n  };\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e: any, checked: boolean, key: string): void => {\n      dispatch(setFieldsDesc(key, checked, { setSearchOptions, subjectId }));\n    },\n    [dispatch, subjectId, setSearchOptions],\n  );\n\n  const onRenderGripper = useCallback(\n    (): JSX.Element => (\n      <div className={styles.gripperWrapper}>\n        <Icon iconName=\"GripperBarHorizontal\" />\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderName = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Text>{item.name}</Text>\n      </div>\n    ),\n    [],\n  );\n\n  const onRenderDirection = useCallback(\n    (item: SortField): JSX.Element => (\n      <div className={styles.wrapper}>\n        <Toggle\n          styles={{ root: { margin: 0 } }}\n          key={item.key}\n          defaultChecked={item.desc}\n          offText=\"Ascending\"\n          onText=\"Descending\"\n          onChange={(e, checked) =>\n            dispatchSetFieldsDesc(e, checked!, item.key)\n          }\n        />\n      </div>\n    ),\n    [dispatchSetFieldsDesc],\n  );\n\n  const sortColumns: IColumn[] = [\n    {\n      key: \"gripper\",\n      minWidth: 20,\n      name: \"\",\n      onRender: onRenderGripper,\n    },\n    {\n      fieldName: \"name\",\n      key: \"param\",\n      minWidth: 150,\n      name: \"Parameter\",\n      onRender: onRenderName,\n    },\n    {\n      fieldName: \"desc\",\n      key: \"direction\",\n      minWidth: 150,\n      name: \"Direction\",\n      onRender: onRenderDirection,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div ref={target}>\n        <CommandBarButton\n          text=\"Sort\"\n          iconProps={{ iconName: \"Sortlines\" }}\n          ariaLabel=\"Sort\"\n          onClick={openCallout}\n          styles={{ root: { height: BUTTON_HEIGHT } }}\n        />\n      </div>\n      <Callout\n        target={target.current}\n        onDismiss={dismissCallout}\n        hidden={!calloutVisible}\n        directionalHint={DirectionalHint.bottomCenter}\n        isBeakVisible={false}\n      >\n        <div onBlur={dismissCallout}>\n          <DetailsList\n            selection={selection.current}\n            columns={sortColumns}\n            items={fields}\n            selectionMode={SelectionMode.none}\n            dragDropEvents={dragDropEvents}\n          />\n        </div>\n      </Callout>\n    </React.Fragment>\n  );\n}\n","export interface ViewRouteProps {\n  viewId?: string;\n}\n\nexport const viewBase = \"/views\";\n\nexport const gotoView = (viewId: string): string => {\n  return `${viewBase}/${viewId}`;\n};\n","import { searchBase } from \"./Search/Routing\";\nimport { subjectBase } from \"./subject/Routing\";\nimport { viewBase } from \"./views/Routing\";\n\nexport const Paths = {\n  base: \"/\",\n  search: searchBase + \"/:param/:query\",\n  subject: subjectBase + \"/:parentId?\",\n  view: viewBase + \"/:viewId\",\n};\n\n// !Make sure that Paths.base is always last\nexport const AllPaths = [Paths.search, Paths.subject, Paths.view, Paths.base];\n","import { BaseAction } from \"../../Common\";\nimport { isUndefined } from \"lodash\";\nimport { OrderState, SortItemsOptions } from \"../../Order\";\n\nexport type BaseSubject = \"BaseSubject\";\n\nexport type SubjectTypes = BaseSubject;\n\nexport interface Subject<T = SubjectTypes> {\n  type: T;\n  name: string;\n  readonly created: Date;\n  completed?: Date;\n  description: string;\n  dueDate?: Date;\n  children: OrderState;\n  parents: Set<string>;\n}\n\nexport interface SubjectDictState {\n  [key: string]: Subject;\n}\n\nexport interface SubjectState {\n  dict: SubjectDictState;\n  order: OrderState;\n  searchSortOptions: SortItemsOptions;\n}\n\nexport interface SubjectBaseAction extends BaseAction {\n  subjectId: string;\n}\n\nexport interface Item {\n  id: string;\n  subject: Subject<\"BaseSubject\">;\n  parent?: string;\n  viewId?: string;\n}\n\nexport interface GetItemsOptions {\n  /**\n   * Should only be used for `/views/:viewId` routes.\n   */\n  viewId?: string;\n\n  /**\n   * Should only be used for `/subjects/:id` routes.\n   */\n  parentId?: string;\n\n  /**\n   * Should only be used for searching.\n   */\n  condition?: (i: Item) => boolean;\n}\n\nexport function getItems(\n  subjects: SubjectDictState,\n  order: string[],\n  options?: GetItemsOptions,\n): Item[] {\n  const items = [];\n  const parent = options ? options.parentId : undefined;\n  const viewId = options ? options.viewId : undefined;\n  for (const id of order) {\n    const current = { id, parent, subject: subjects[id], viewId };\n    if (\n      isUndefined(options) ||\n      isUndefined(options.condition) ||\n      options.condition(current)\n    ) {\n      items.push(current);\n    }\n  }\n  return items;\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FocusZone, List, Text } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { State } from \"../../Reducer\";\nimport { getItems, Item } from \"../model/Subject\";\n\ninterface ListViewProps {\n  parentId?: string;\n  viewId?: string;\n  illegalIds?: Set<string>;\n  order: string[];\n  maxHeight: number | string;\n  onRenderCell: (\n    item?: Item,\n    index?: number | undefined,\n    isScrolling?: boolean | undefined,\n  ) => React.ReactNode;\n\n  /**\n   * When true, text is shown if there's no children\n   */\n  notifyNoChildren?: boolean;\n}\n\nconst styles = mergeStyleSets({\n  list: {\n    overflow: \"auto\",\n  },\n});\n\nexport default function SimpleListView({\n  order,\n  parentId,\n  maxHeight,\n  onRenderCell,\n  illegalIds,\n  notifyNoChildren,\n  viewId,\n}: ListViewProps): JSX.Element {\n  const { subjects } = useSelector((state: State) => state);\n\n  const condition = useCallback(\n    (i: Item): boolean => !!illegalIds && !illegalIds.has(i.id),\n    [illegalIds],\n  );\n\n  const options = {\n    condition: illegalIds ? condition : undefined,\n    parentId,\n    viewId,\n  };\n  const children = getItems(subjects.dict, order, options);\n\n  return (\n    <FocusZone className={styles.list} style={{ maxHeight }}>\n      {children.length === 0 && notifyNoChildren ? (\n        <Text>\n          {\"There's nothing here\"}\n          <span role=\"img\" aria-label=\"Gust of Wind emoji\">\n            💨\n          </span>\n        </Text>\n      ) : (\n        <List items={children} onRenderCell={onRenderCell} />\n      )}\n    </FocusZone>\n  );\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Checkbox,\n  ContextualMenu,\n  DirectionalHint,\n  ICheckboxProps,\n  IContextualMenuItem,\n  TextField,\n} from \"office-ui-fabric-react\";\n\ninterface ListItemBaseProps {\n  contextMenuItems?: IContextualMenuItem[];\n  key?: string | number;\n  children?: JSX.Element;\n  onCheckboxChange: ICheckboxProps[\"onChange\"];\n  button?: JSX.Element;\n  checked: boolean;\n  label: string;\n  editable?: boolean;\n  onEditableBlur?: (value: string) => void;\n}\n\nconst theme = getTheme();\n\nexport const gridTemplateColumns = \"auto 1px 32px\";\nexport const border = \"1px solid \" + theme.palette.neutralTertiary;\n\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    gridTemplateRows: \"auto auto\",\n    marginBottom: 2,\n  },\n  checkboxWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    margin: 8,\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  button: {\n    gridColumn: \"3\",\n  },\n  content: {\n    gridColumn: \"1 / 3\",\n    gridRow: \"2\",\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default function ListItemBase({\n  button,\n  checked,\n  children,\n  contextMenuItems,\n  editable,\n  key,\n  label,\n  onCheckboxChange,\n  onEditableBlur,\n}: ListItemBaseProps): JSX.Element {\n  const target = useRef(null);\n  const [localLabel, _setLocalLabel] = useState(label);\n  const [menuVisible, _setMenuVisible] = useState(false);\n\n  useEffect((): void => {\n    _setLocalLabel(label);\n  }, [label]);\n\n  const setCalloutVisible = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>): void => {\n      e.preventDefault();\n      _setMenuVisible(!menuVisible);\n    },\n    [menuVisible],\n  );\n\n  const setLocalLabel = useCallback((e: any, newValue?: string): void => {\n    _setLocalLabel(newValue || \"\");\n  }, []);\n\n  const onBlur = useCallback((): void => {\n    if (onEditableBlur) {\n      const newLabel = localLabel || \"Untitled\";\n      onEditableBlur(newLabel);\n      _setLocalLabel(newLabel);\n    }\n  }, [localLabel, onEditableBlur]);\n\n  return (\n    <div\n      data-is-focusable={true}\n      onContextMenu={setCalloutVisible}\n      ref={target}\n      key={key}\n    >\n      <div className={styles.wrapper}>\n        <div className={styles.checkboxWrapper}>\n          <Checkbox\n            checked={checked}\n            label={editable ? undefined : label}\n            className={styles.checkbox}\n            onChange={onCheckboxChange}\n          />\n\n          {editable ? (\n            <TextField\n              value={localLabel}\n              borderless={true}\n              onChange={onEditableBlur ? setLocalLabel : undefined}\n              onBlur={onBlur}\n            />\n          ) : null}\n        </div>\n        <div className={styles.content}>{children}</div>\n\n        {button ? <span className={styles.divider} /> : null}\n        <div className={styles.button}>{button || null}</div>\n      </div>\n\n      <ContextualMenu\n        hidden={!(contextMenuItems && menuVisible)}\n        isBeakVisible={false}\n        onDismiss={setCalloutVisible}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems!}\n      />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../subject/model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"../../subject/components/ListItem/ListItemBase\";\nimport { appendChildView } from \"../model/AppendChild\";\n\nfunction ListItem({ id, viewId, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChildView(viewId!, id));\n      }\n    },\n    [dispatch, id, viewId],\n  );\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.viewId)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React from \"react\";\nimport { Panel, IPanelProps } from \"office-ui-fabric-react\";\nimport SimpleListView from \"../../subject/components/SimpleListView\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\nimport AppendChildrenListItem from \"./AppendChildrenListItem\";\nimport { isUndefined } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { Paths } from \"../../Routing\";\n\ninterface AppendChildrenProps {\n  isOpen: boolean;\n  hidePanel: IPanelProps[\"onDismiss\"];\n  viewId?: string;\n}\n\nexport default function AppendChildren({\n  hidePanel,\n  isOpen,\n  viewId,\n}: AppendChildrenProps): JSX.Element {\n  const { subjects, views } = useSelector((state: State) => state);\n\n  if (isUndefined(viewId)) {\n    return <Redirect to={Paths.base} />;\n  }\n\n  const order = subjects.order.order;\n  const illegalIds = new Set(views.dict[viewId].children.order);\n\n  return (\n    <React.Fragment>\n      <Panel\n        isOpen={isOpen}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          viewId={viewId}\n          order={order}\n          illegalIds={illegalIds}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  CommandBarButton,\n  Toggle,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../subject/model/Create\";\nimport { State } from \"../Reducer\";\nimport { setSeparateComplete } from \"../subject/model/SetSeparateComplete\";\nimport { BUTTON_HEIGHT } from \"./Common\";\nimport SortButton from \"./SortButton\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SubjectsRouteProps, subjectBase } from \"../subject/Routing\";\nimport { getDisplay, updateDisplay } from \"../Display\";\nimport { SearchRouteProps, searchBase } from \"../Search/Routing\";\nimport { Paths } from \"../Routing\";\nimport { ViewRouteProps } from \"../views/Routing\";\nimport AppendChildren from \"../views/components/AppendChildren\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  leftWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  rightWrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  wrapper: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.white,\n    borderBottom: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: BUTTON_HEIGHT,\n    justifyContent: \"space-between\",\n    paddingLeft: 24,\n    paddingRight: 24,\n    position: \"relative\",\n    zIndex: 10,\n  },\n});\n\nconst commandBarStyles = { root: { height: BUTTON_HEIGHT } };\n\ntype AppCommandbarProps = RouteComponentProps<\n  SubjectsRouteProps & SearchRouteProps & ViewRouteProps\n>;\n\nexport default function AppCommandBar({\n  match,\n  location,\n  history,\n}: AppCommandbarProps): JSX.Element {\n  const { parentId, viewId } = match.params;\n  const dispatch = useDispatch();\n  const display = getDisplay(location);\n\n  const { dict, order: rootOrder, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const [appendChildrenPanelVisible, setAppendChildrenPanelVisible] = useState(\n    false,\n  );\n  const showAppendChildrenPanel = useCallback((): void => {\n    setAppendChildrenPanelVisible(true);\n  }, []);\n  const hideAppendChildrenPanel = useCallback((): void => {\n    setAppendChildrenPanelVisible(false);\n  }, []);\n\n  const dispatchCreateChildSubject = useCallback((): void => {\n    dispatch(createSubject({ parentId, viewId }));\n  }, [dispatch, parentId, viewId]);\n\n  const dispatchCreateSubject = useCallback((): void => {\n    dispatch(createSubject());\n  }, [dispatch]);\n\n  const dispatchSetSeparateComplete = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { subjectId: parentId }));\n    },\n    [dispatch, parentId],\n  );\n\n  const dispatchSetSeparateCompleteSearch = useCallback(\n    (e: any, checked?: boolean): void => {\n      dispatch(setSeparateComplete(checked!, { setSearchOptions: true }));\n    },\n    [dispatch],\n  );\n\n  const toggleView = useCallback((): void => {\n    history.push(updateDisplay(location, display === \"grid\" ? \"list\" : \"grid\"));\n  }, [display, history, location]);\n\n  const leftComponents: JSX.Element[] = [];\n  const rightComponents: JSX.Element[] = [];\n  let panel: JSX.Element | null = null;\n\n  if (match.path === Paths.subject || match.path === subjectBase) {\n    const order =\n      parentId && parentId in dict\n        ? dict[parentId].children.options\n        : rootOrder.options;\n\n    const createSubjectButton = parentId ? (\n      <CommandBarButton\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />\n    ) : (\n      <CommandBarButton\n        text=\"Create subject\"\n        iconProps={{ iconName: \"Add\" }}\n        ariaLabel=\"Create subject\"\n        onClick={dispatchCreateSubject}\n        styles={commandBarStyles}\n      />\n    );\n\n    leftComponents.push(<div key=\"createSubject\">{createSubjectButton}</div>);\n\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton key=\"sort\" subjectId={parentId} fields={order.fields} />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={order.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateComplete}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.search || match.path === searchBase) {\n    if (display === \"grid\") {\n      leftComponents.push(\n        <SortButton\n          key=\"sort\"\n          setSearchOptions={true}\n          fields={searchSortOptions.fields}\n        />,\n      );\n    }\n\n    leftComponents.push(\n      <Toggle\n        key=\"separateComplete\"\n        checked={searchSortOptions.separateCompletedItems}\n        offText={\"Don't separate completed items\"}\n        onText={\"Separate completed items\"}\n        onChange={dispatchSetSeparateCompleteSearch}\n        styles={{ root: { marginBottom: 0, marginLeft: 4, marginRight: 4 } }}\n      />,\n    );\n  } else if (match.path === Paths.view) {\n    leftComponents.push(\n      <CommandBarButton\n        key=\"appendChildren\"\n        text=\"Append child subjects\"\n        iconProps={{ iconName: \"RowsChild\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={showAppendChildrenPanel}\n        styles={commandBarStyles}\n      />,\n      <CommandBarButton\n        key=\"createSubjectForView\"\n        text=\"Create child subject\"\n        iconProps={{ iconName: \"Childof\" }}\n        ariaLabel=\"Create child subject\"\n        onClick={dispatchCreateChildSubject}\n        styles={commandBarStyles}\n      />,\n    );\n\n    panel = (\n      <AppendChildren\n        hidePanel={hideAppendChildrenPanel}\n        isOpen={appendChildrenPanelVisible}\n        viewId={viewId}\n      />\n    );\n  }\n\n  rightComponents.push(\n    <CommandBarButton\n      key=\"toggleView\"\n      ariaLabel=\"Toggle view\"\n      iconProps={{\n        iconName: display === \"list\" ? \"BulletedListText\" : \"GridViewMedium\",\n      }}\n      text={display === \"list\" ? \"List\" : \"Grid\"}\n      styles={{\n        root: { background: theme.palette.white, height: BUTTON_HEIGHT },\n      }}\n      menuProps={{\n        directionalHintFixed: true,\n        items: [\n          display === \"list\"\n            ? {\n                iconProps: { iconName: \"GridViewMedium\" },\n                key: \"gridButton\",\n                onClick: toggleView,\n                text: \"Grid\",\n              }\n            : {\n                iconProps: { iconName: \"BulletedListText\" },\n                key: \"listButton\",\n                onClick: toggleView,\n                text: \"List\",\n              },\n        ],\n      }}\n    />,\n  );\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <div className={styles.leftWrapper}>{leftComponents}</div>\n        <div className={styles.rightWrapper}>{rightComponents}</div>\n      </div>\n      {panel}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\nimport { FontSizes } from \"@uifabric/fluent-theme/lib/fluent/FluentType\";\nimport { StandardLonghandProperties } from \"csstype\";\n\ninterface NameProps {\n  className?: string;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  textAlign?: StandardLonghandProperties<string | number>[\"textAlign\"];\n}\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  title: {\n    border: \"1px solid transparent\",\n    borderRadius: 0,\n    fontSize: FontSizes.size28,\n    outline: \"none\",\n    paddingBottom: 4,\n    textAlign: \"center\",\n    width: \"80%\",\n    selectors: {\n      \"&:focus\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        borderBottom: \"1px solid \" + theme.palette.neutralTertiary,\n        outline: \"none\",\n      },\n    },\n  },\n});\n\nexport default function TitleInput({\n  value,\n  className,\n  onBlur,\n  onChange,\n  textAlign = \"left\",\n}: NameProps): JSX.Element {\n  return (\n    <div className={className}>\n      <input\n        className={styles.title}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n        style={{ textAlign }}\n      />\n    </div>\n  );\n}\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_NAME = \"SET_SUBJECT_NAME\";\n\nexport interface SetSubjectNameAction extends SubjectBaseAction {\n  name: string;\n}\n\nexport const setSubjectName = (\n  subjectId: string,\n  name: string,\n): SetSubjectNameAction => ({\n  name,\n  subjectId,\n  type: SET_SUBJECT_NAME,\n});\n\nexport const setSubjectNameReducer = (\n  state: SubjectState,\n  { subjectId, name }: SetSubjectNameAction,\n): void => {\n  state.dict[subjectId].name = name;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const SET_SUBJECT_DESCRIPTION = \"SET_SUBJECT_DESCRIPTION\";\n\nexport interface SetSubjectDescriptionAction extends SubjectBaseAction {\n  description: string;\n}\n\nexport const setSubjectDescription = (\n  subjectId: string,\n  description: string,\n): SetSubjectDescriptionAction => ({\n  description,\n  subjectId,\n  type: SET_SUBJECT_DESCRIPTION,\n});\n\nexport const setSubjectDescriptionReducer = (\n  state: SubjectState,\n  { subjectId, description }: SetSubjectDescriptionAction,\n): void => {\n  state.dict[subjectId].description = description;\n  sortAllParents(state.dict, subjectId);\n};\n","import { SubjectBaseAction, SubjectState, SubjectDictState } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Complete subject\nexport const COMPLETE_SUBJECT = \"COMPLETE_SUBJECT\";\n\nexport interface CompleteSubjectAction extends SubjectBaseAction {\n  level: number;\n}\n\nexport const completeSubject = (\n  subjectId: string,\n  level = 1,\n): CompleteSubjectAction => ({\n  level,\n  subjectId,\n  type: COMPLETE_SUBJECT,\n});\n\nconst markAsComplete = (\n  dict: SubjectDictState,\n  subjectId: string,\n  level: number,\n  date = new Date(),\n): void => {\n  if (dict[subjectId].completed === undefined) {\n    dict[subjectId].completed = date;\n    sortAllParents(dict, subjectId);\n    if (level > 1) {\n      for (const childId of dict[subjectId].children.order) {\n        markAsComplete(dict, childId, level - 1, date);\n      }\n    }\n  }\n};\n\nexport const completeSubjectReducer = (\n  state: SubjectState,\n  { subjectId, level }: CompleteSubjectAction,\n): void => {\n  markAsComplete(state.dict, subjectId, level);\n};\n\n// Remove subject completion\nexport const UNCOMPLETE_SUBJECT = \"UNCOMPLETE_SUBJECT\";\n\nexport interface UncompleteSubjectAction extends SubjectBaseAction {}\n\nexport const uncompleteSubject = (\n  subjectId: string,\n): UncompleteSubjectAction => ({\n  subjectId,\n  type: UNCOMPLETE_SUBJECT,\n});\n\nexport const uncompleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: UncompleteSubjectAction,\n): void => {\n  state.dict[subjectId].completed = undefined;\n  sortAllParents(state.dict, subjectId);\n};\n","import { remove } from \"lodash\";\nimport { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const DELETE_SUBJECT = \"DELETE_SUBJECT\";\n\nexport interface DeleteSubjectAction extends SubjectBaseAction {}\n\nexport const deleteSubject = (subjectId: string): DeleteSubjectAction => ({\n  subjectId,\n  type: DELETE_SUBJECT,\n});\n\nexport const deleteSubjectReducer = (\n  state: SubjectState,\n  { subjectId }: DeleteSubjectAction,\n): void => {\n  for (const parentId of state.dict[subjectId].parents) {\n    remove(\n      state.dict[parentId].children.order,\n      (s): boolean => s === subjectId,\n    );\n  }\n  for (const childId of state.dict[subjectId].children.order) {\n    state.dict[childId].parents.delete(subjectId);\n  }\n  remove(state.order.order, (s): boolean => s === subjectId);\n  sortAllParents(state.dict, subjectId);\n  delete state.dict[subjectId];\n};\n","import { SubjectState, SubjectBaseAction } from \"./Subject\";\nimport { sortAllParents } from \"../../Order\";\n\n// Set subject due date\nexport const SET_SUBJECT_DUE_DATE = \"SET_SUBJECT_DUE_DATE\";\n\nexport interface SetSubjectDueDateAction extends SubjectBaseAction {\n  date?: Date;\n}\n\nexport const setSubjectDueDate = (\n  subjectId: string,\n  date?: Date,\n): SetSubjectDueDateAction => ({\n  date,\n  subjectId,\n  type: SET_SUBJECT_DUE_DATE,\n});\n\nexport const setSubjectDueDateReducer = (\n  state: SubjectState,\n  { subjectId, date }: SetSubjectDueDateAction,\n): void => {\n  state.dict[subjectId].dueDate = date;\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { appendChild } from \"../../model/AppendChild\";\nimport { isUndefined } from \"lodash\";\nimport ListItemBase from \"./ListItemBase\";\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (\n      e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n      checked?: boolean,\n    ): void => {\n      if (checked === true) {\n        dispatch(appendChild(parent!, id));\n      }\n    },\n    [dispatch, id, parent],\n  );\n\n  return (\n    <ListItemBase\n      checked={false}\n      label={subject.name}\n      onCheckboxChange={onChange}\n    />\n  );\n}\n\nexport default function AppendChildrenListItem(\n  props?: Item,\n): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} />;\n}\n","import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getTheme,\n  mergeStyleSets,\n  Icon,\n  Text,\n  Panel,\n  ContextualMenu,\n  DirectionalHint,\n  IContextualMenuItem,\n} from \"office-ui-fabric-react\";\nimport SimpleListView from \"./SimpleListView\";\nimport AppendChildrenListItem from \"./ListItem/AppendChildrenListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSubject } from \"../model/Create\";\nimport { border, gridTemplateColumns } from \"./ListItem/ListItemBase\";\nimport { State } from \"../../Reducer\";\nimport { PANEL_HEADER_HEIGHT } from \"../../Common\";\n\nexport const AppendChildrenHeight = 32;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    border,\n    borderRadius: 2,\n    display: \"grid\",\n    gridTemplateColumns,\n    marginBottom: 1,\n    marginTop: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    background: theme.palette.white,\n    border: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: AppendChildrenHeight,\n    outline: \"none\",\n    padding: 0,\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  divider: {\n    background: theme.palette.neutralTertiary,\n    gridColumn: \"2\",\n    marginBottom: 8,\n    marginTop: 8,\n    width: 1,\n  },\n  icon: {\n    fontSize: 12,\n    margin: 8,\n    paddingLeft: 4,\n    textAlign: \"center\",\n  },\n  text: {\n    display: \"flex\",\n    flexGrow: 2,\n    paddingLeft: 4,\n    paddingRight: 8,\n  },\n});\n\ninterface AppendChildrenProps {\n  parent: string;\n}\n\nexport default function({ parent }: AppendChildrenProps): JSX.Element {\n  const target = useRef(null);\n\n  const dispatch = useDispatch();\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const hidePanel = useCallback((): void => setPanelVisible(false), []);\n  const showPanel = useCallback((): void => setPanelVisible(true), []);\n  const toggleMenu = useCallback((): void => setMenuVisible(!menuVisible), [\n    menuVisible,\n  ]);\n  const hideMenu = useCallback((): void => setMenuVisible(false), []);\n\n  const addChild = useCallback((): void => {\n    dispatch(createSubject({ parentId: parent }));\n  }, [dispatch, parent]);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  const contextMenuItems: IContextualMenuItem[] = [\n    {\n      iconProps: {\n        iconName: \"RowsChild\",\n      },\n      key: \"appendChildren\",\n      onClick: showPanel,\n      text: \"Append child subjects\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className={styles.wrapper}>\n        <button\n          className={styles.button}\n          style={{ gridColumn: 1 }}\n          onClick={addChild}\n        >\n          <Icon iconName=\"Add\" className={styles.icon} />\n          <Text className={styles.text}>Add child</Text>\n        </button>\n        <span className={styles.divider} />\n        <button\n          className={styles.button}\n          onClick={toggleMenu}\n          ref={target}\n          style={{ gridColumn: 3 }}\n        >\n          <Icon iconName=\"ChevronDown\" style={{ width: \"100%\" }} />\n        </button>\n      </div>\n\n      <Panel\n        isOpen={panelVisible}\n        isLightDismiss={true}\n        headerText=\"Append Children\"\n        onDismiss={hidePanel}\n      >\n        <SimpleListView\n          parentId={parent}\n          illegalIds={\n            new Set(subjects.dict[parent].children.order.concat(parent))\n          }\n          order={subjects.order.order}\n          notifyNoChildren={true}\n          maxHeight={`calc(100vh-${PANEL_HEADER_HEIGHT})`}\n          onRenderCell={AppendChildrenListItem}\n        />\n      </Panel>\n\n      <ContextualMenu\n        hidden={!menuVisible}\n        isBeakVisible={false}\n        onDismiss={hideMenu}\n        target={target}\n        directionalHint={DirectionalHint.bottomRightEdge}\n        items={contextMenuItems}\n      />\n    </React.Fragment>\n  );\n}\n","import { SubjectBaseAction, SubjectState } from \"./Subject\";\nimport { remove } from \"lodash\";\nimport { sortAllParents } from \"../../Order\";\n\nexport const REMOVE_CHILD_SUBJECT = \"REMOVE_CHILD_SUBJECT\";\n\nexport interface RemoveChildAction extends SubjectBaseAction {\n  parent: string;\n}\n\nexport const removeChild = (\n  subjectId: string,\n  parent: string,\n): RemoveChildAction => ({\n  parent,\n  subjectId,\n  type: REMOVE_CHILD_SUBJECT,\n});\n\nexport const removeChildReducer = (\n  state: SubjectState,\n  { subjectId, parent }: RemoveChildAction,\n): void => {\n  remove(state.dict[parent].children.order, (s): boolean => s === subjectId);\n  state.dict[subjectId].parents.delete(parent);\n  sortAllParents(state.dict, subjectId);\n};\n","import React, { useCallback } from \"react\";\nimport { IContextualMenuItem, IconButton } from \"office-ui-fabric-react\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport { Item } from \"../../model/Subject\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\nimport { Link } from \"react-router-dom\";\nimport { removeChild } from \"../../model/RemoveChild\";\nimport ListItemBase from \"./ListItemBase\";\nimport { isUndefined } from \"lodash\";\nimport { setSubjectName } from \"../../model/Name\";\nimport { gotoSubject } from \"../../Routing\";\n\nconst styles = mergeStyleSets({\n  open: {\n    height: 40,\n    width: \"100%\",\n  },\n});\n\nfunction ListItem({ id, parent, subject }: Item): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const onBlur = useCallback(\n    (newValue: string): void => {\n      dispatch(setSubjectName(id, newValue || \"Untitled\"));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, true, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const removeChildOnClick = useCallback((): void => {\n    dispatch(removeChild(id, parent!));\n  }, [dispatch, id, parent]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    ...(subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Remove\" },\n      key: \"remove\",\n      onClick: removeChildOnClick,\n      text: \"Remove this as a child\",\n    },\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  const buttonLabel = \"Open \" + subject.name;\n  const button = (\n    <Link to={gotoSubject(\"grid\", id)}>\n      <IconButton\n        className={styles.open}\n        iconProps={{ iconName: \"OpenFile\" }}\n        ariaLabel={buttonLabel}\n        title={buttonLabel}\n      />\n    </Link>\n  );\n  return (\n    <ListItemBase\n      editable={true}\n      onEditableBlur={onBlur}\n      checked={!!subject.completed}\n      label={subject.name}\n      onCheckboxChange={onChange}\n      contextMenuItems={contextItems}\n      button={button}\n    />\n  );\n}\n\nexport default function SubjectListItem(props?: Item): JSX.Element | undefined {\n  if (!props || isUndefined(props.parent)) {\n    return;\n  }\n\n  return <ListItem {...props} key={props.id} />;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FocusZone,\n  Stack,\n  Text,\n  TextField,\n  Label,\n  DatePicker,\n  DefaultButton,\n  IconButton,\n  DirectionalHint,\n} from \"office-ui-fabric-react\";\nimport { getTheme, mergeStyleSets } from \"@uifabric/styling\";\n\nimport { Subject } from \"../model/Subject\";\nimport TitleInput from \"../../TitleInput\";\nimport SimpleListView from \"./SimpleListView\";\nimport { setSubjectName } from \"../model/Name\";\nimport { setSubjectDescription } from \"../model/Description\";\nimport { completeSubject, uncompleteSubject } from \"../model/Completed\";\nimport { deleteSubject } from \"../model/Delete\";\nimport { setSubjectDueDate } from \"../model/Date\";\nimport AppendChildren, { AppendChildrenHeight } from \"./AppendChildren\";\nimport SubjectListItem from \"./ListItem/SubjectListItem\";\nimport { Link } from \"react-router-dom\";\nimport { gotoSubject } from \"../Routing\";\nimport { State } from \"../../Reducer\";\n\ninterface SubjectProps {\n  subject: Subject;\n  id: string;\n\n  /**\n   * This should be an expression which can be evaluated by CSS calc()\n   */\n  listHeight?: string;\n\n  showOpenButton?: boolean;\n}\n\nconst theme = getTheme();\nconst border = \"1px solid \" + theme.palette.neutralTertiary;\nconst styles = mergeStyleSets({\n  headerWrapper: {\n    display: \"grid\",\n    gridTemplateColumns: \"auto 32px\",\n  },\n  header: {\n    alignItems: \"center\",\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    color: theme.palette.neutralLight,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridColumn: \"1 / 3\",\n    gridRow: \"1\",\n    margin: -1,\n    padding: 5,\n    zIndex: 1,\n    selectors: {\n      \"&:focus\": {\n        border: \"none\",\n        outline: \"none\",\n      },\n    },\n  },\n  headerButton: {\n    background: theme.palette.white,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderRight: border,\n    borderTop: border,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 4,\n    marginBottom: -1,\n    marginLeft: 0,\n    marginRight: -1,\n    marginTop: -1,\n    outline: \"none\",\n    zIndex: 2,\n  },\n  headerLink: {\n    gridColumn: \"2\",\n    gridRow: \"1\",\n    outline: \"none\",\n  },\n  body: {\n    padding: 10,\n  },\n  title: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingBottom: 5,\n    paddingTop: 10,\n  },\n  description: {\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  date: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  datePicker: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  daysLeft: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  appendChildren: {\n    background: theme.palette.white,\n    border,\n    width: \"100%\",\n  },\n  heroButton: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 10,\n  },\n});\n\nfunction getDaysDifference(first: Date, second: Date): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.ceil(\n    (second.valueOf() - first.valueOf()) / (1000 * 60 * 60 * 24),\n  );\n}\n\nexport default function SubjectComponent({\n  subject,\n  id,\n  listHeight,\n  showOpenButton,\n}: SubjectProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(subject.name);\n  const [description, setDescription] = useState(subject.description);\n\n  const { subjects } = useSelector((state: State) => state);\n\n  // Side effects update state with new props\n  useEffect((): void => {\n    setName(subject.name);\n  }, [subject.name]);\n\n  useEffect((): void => {\n    setDescription(subject.description);\n  }, [subject.description]);\n\n  // Event handlers\n  const setNameLocal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setName(e.target.value);\n    },\n    [],\n  );\n\n  const setNameRedux = useCallback((): void => {\n    const newName = name || \"Untitled\";\n    if (subject.name !== newName) {\n      dispatch(setSubjectName(id, newName));\n    }\n    setName(newName);\n  }, [dispatch, id, name, subject.name]);\n\n  const setDescriptionLocal = useCallback((e: any, newValue?: string): void => {\n    setDescription(newValue || \"\");\n  }, []);\n\n  const setDescriptionRedux = useCallback((): void => {\n    if (subject.description !== description) {\n      dispatch(setSubjectDescription(id, description));\n    }\n  }, [dispatch, id, description, subject.description]);\n\n  const setDueDateRedux = useCallback(\n    (date?: Date | null): void => {\n      dispatch(setSubjectDueDate(id, date || undefined));\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 1));\n  }, [dispatch, id]);\n  const uncompleteOnClick = useCallback((): void => {\n    dispatch(uncompleteSubject(id));\n  }, [dispatch, id]);\n  const clearDueDateOnClick = useCallback((): void => setDueDateRedux(), [\n    setDueDateRedux,\n  ]);\n\n  const completeSubjectOnClick = useCallback((): void => {\n    dispatch(completeSubject(id, 2));\n  }, [dispatch, id]);\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const completeItem = {\n    key: \"complete-2-level\",\n    text: \"Mark this and its children as complete\",\n    onClick: completeSubjectOnClick,\n  };\n  const deleteItem = {\n    key: \"delete\",\n    text: \"Delete this\",\n    onClick: deleteSubjectOnClick,\n  };\n\n  const daysLeft = subject.dueDate\n    ? getDaysDifference(new Date(), subject.dueDate)\n    : \"∞\";\n\n  let header;\n  let heroButton;\n  if (!subject.completed) {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.green }}\n      >\n        Created {subject.created.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        primary\n        text=\"Mark as complete\"\n        split={true}\n        onClick={completeOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [completeItem, deleteItem],\n        }}\n      />\n    );\n  } else {\n    header = (\n      <Text\n        className={styles.header}\n        style={{ backgroundColor: theme.palette.red }}\n      >\n        Completed {subject.completed.toLocaleString()}\n      </Text>\n    );\n\n    heroButton = (\n      <DefaultButton\n        text=\"Mark as uncomplete\"\n        split={true}\n        onClick={uncompleteOnClick}\n        menuProps={{\n          directionalHint: DirectionalHint.bottomCenter,\n          isBeakVisible: false,\n          items: [deleteItem],\n        }}\n        style={{ background: theme.palette.white }}\n      />\n    );\n  }\n\n  const headerOpenLabel = \"Open \" + subject.name;\n\n  return (\n    <FocusZone>\n      <Stack verticalAlign={\"center\"}>\n        <div className={styles.headerWrapper}>\n          {header}\n          {showOpenButton ? (\n            <Link to={gotoSubject(\"grid\", id)} className={styles.headerLink}>\n              <IconButton\n                styles={{ root: { width: \"\" } }}\n                className={styles.headerButton}\n                iconProps={{ iconName: \"OpenFile\" }}\n                title={headerOpenLabel}\n                ariaLabel={headerOpenLabel}\n              />\n            </Link>\n          ) : null}\n        </div>\n\n        <div className={styles.body}>\n          <TitleInput\n            textAlign=\"center\"\n            className={styles.title}\n            value={name}\n            onChange={setNameLocal}\n            onBlur={setNameRedux}\n          />\n          <TextField\n            multiline\n            rows={3}\n            value={description}\n            onChange={setDescriptionLocal}\n            onBlur={setDescriptionRedux}\n            className={styles.description}\n          />\n          <div className={styles.date}>\n            <Label>Due date:</Label>\n            <div className={styles.datePicker}>\n              <DatePicker\n                value={subject.dueDate}\n                onSelectDate={setDueDateRedux}\n              />\n              {subject.dueDate ? (\n                <IconButton\n                  iconProps={{ iconName: \"cancel\" }}\n                  title=\"Clear date\"\n                  onClick={clearDueDateOnClick}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className={styles.daysLeft}>\n            <Label>\n              {`${daysLeft} ${daysLeft === 1 ? \"day\" : \"days\"} left`}\n            </Label>\n          </div>\n          <div\n            style={{\n              minHeight: `calc((${listHeight}) + ${AppendChildrenHeight}px)`,\n            }}\n          >\n            <SimpleListView\n              parentId={id}\n              order={subjects.dict[id].children.order}\n              maxHeight={`calc(${listHeight})`}\n              onRenderCell={SubjectListItem}\n            />\n            <AppendChildren parent={id} />\n          </div>\n          <div className={styles.heroButton}>{heroButton}</div>\n        </div>\n      </Stack>\n    </FocusZone>\n  );\n}\n","export const getDiffIndex = (\n  oldOrder: string[],\n  newOrder: string[],\n): number => {\n  for (let i = 0; i < newOrder.length; i++) {\n    const newEl = newOrder[i];\n    const oldEl = oldOrder[i];\n\n    if (newEl !== oldEl) {\n      return i;\n    }\n  }\n  return 0;\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport { List, IRectangle, ScrollToMode } from \"office-ui-fabric-react\";\nimport { mergeStyleSets, getTheme } from \"@uifabric/styling\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Item } from \"../model/Subject\";\nimport SubjectComponent from \"./Subject\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../Common\";\nimport { getDiffIndex } from \"./View\";\nimport { useSubjectView, SubjectViewHookProps } from \"./SubjectView\";\n\nconst ROWS_PER_PAGE = 3;\nconst ROW_HEIGHT = 603;\nexport const MIN_COL_WIDTH = 400;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n  grid: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n    overflow: \"auto\",\n    position: \"relative\",\n  },\n  tile: {\n    textAlign: \"center\",\n    position: \"relative\",\n    float: \"left\",\n  },\n  padding: {\n    padding: 5,\n  },\n  contents: {\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nconst getPageHeight = (): number => ROW_HEIGHT * ROWS_PER_PAGE;\n\nexport default function GridView(props: SubjectViewHookProps): JSX.Element {\n  const subjectId = props.options ? props.options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n\n  const columnCount = useRef(0);\n  const columnWidth = useRef(0);\n  const gridRef: React.MutableRefObject<List | null> = useRef(null);\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n  } = useSubjectView(props);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      gridRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(subjectId!)) {\n        gridRef.current.scrollToIndex(\n          index,\n          (): number => ROW_HEIGHT,\n          ScrollToMode.top,\n        );\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, currentOrder, setCurrentOrder, subjectId, subjects]);\n\n  const renderCell = useCallback((props?: Item): JSX.Element | undefined => {\n    if (!props) {\n      return;\n    }\n\n    const { id, subject } = props;\n    return (\n      <div\n        className={styles.tile}\n        data-is-focusable={true}\n        key={id}\n        style={{\n          height: ROW_HEIGHT,\n          width: 100 / columnCount.current + \"%\",\n        }}\n      >\n        <div className={styles.padding}>\n          <div className={styles.contents}>\n            <SubjectComponent\n              subject={subject}\n              id={id}\n              listHeight={\"260px\"}\n              showOpenButton={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }, []);\n\n  const getItemCountForPage = useCallback(\n    (itemIndex?: number, surfaceRect?: IRectangle): number => {\n      if (itemIndex === 0 && surfaceRect) {\n        const columns = surfaceRect.width / MIN_COL_WIDTH;\n        columnCount.current =\n          surfaceRect.width > MIN_COL_WIDTH * 1.5\n            ? Math.ceil(columns)\n            : Math.floor(columns);\n        columnWidth.current = Math.floor(\n          surfaceRect.width / columnCount.current,\n        );\n      }\n\n      return columnCount.current * ROWS_PER_PAGE;\n    },\n    [],\n  );\n\n  return (\n    <List\n      ref={gridRef}\n      className={styles.grid}\n      items={items}\n      getItemCountForPage={getItemCountForPage}\n      getPageHeight={getPageHeight}\n      renderedWindowsAhead={4}\n      onRenderCell={renderCell}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { Item } from \"../../model/Subject\";\nimport {\n  ContextualMenu,\n  IContextualMenuItem,\n  DirectionalHint,\n  IContextualMenuProps,\n} from \"office-ui-fabric-react\";\nimport { useDispatch } from \"react-redux\";\nimport { completeSubject, uncompleteSubject } from \"../../model/Completed\";\nimport { deleteSubject } from \"../../model/Delete\";\n\nexport interface ListViewContextMenuProps {\n  item: Item;\n  ev: Event;\n  onEditClick: (item: Item) => void;\n  onDismiss: IContextualMenuProps[\"onDismiss\"];\n}\n\nexport default function ListViewContextMenu({\n  item,\n  ev,\n  onDismiss,\n  onEditClick,\n}: ListViewContextMenuProps): JSX.Element {\n  const dispatch = useDispatch();\n  const { id } = item;\n\n  const onChange = useCallback(\n    (e: any, checked?: boolean, level?: number): void => {\n      if (checked === true) {\n        dispatch(completeSubject(id, level));\n      } else {\n        dispatch(uncompleteSubject(id));\n      }\n    },\n    [dispatch, id],\n  );\n\n  const completeOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 1);\n      }\n    },\n    [onChange],\n  );\n\n  const completeWithChildrenOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, !item.checked, 2);\n      }\n    },\n    [onChange],\n  );\n\n  const uncompleteOnClick = useCallback(\n    (e: any, item?: IContextualMenuItem): void => {\n      if (item) {\n        onChange(e, false);\n      }\n    },\n    [onChange],\n  );\n\n  const deleteSubjectOnClick = useCallback((): void => {\n    dispatch(deleteSubject(id));\n  }, [dispatch, id]);\n\n  const editClick = useCallback((): void => {\n    onEditClick(item);\n  }, [item, onEditClick]);\n\n  const completeContextItems = [\n    {\n      iconProps: { iconName: \"Completed\" },\n      key: \"complete-1-level\",\n      onClick: completeOnClick,\n      text: \"Mark as complete\",\n    },\n    {\n      iconProps: { iconName: \"CompletedSolid\" },\n      key: \"complete-2-level\",\n      onClick: completeWithChildrenOnClick,\n      text: \"Mark this and its children as complete\",\n    },\n  ];\n\n  const uncompleteContextItems = [\n    {\n      iconProps: { iconName: \"Blocked2\" },\n      key: \"uncomplete\",\n      onClick: uncompleteOnClick,\n      text: \"Mark as incomplete\",\n    },\n  ];\n\n  const contextItems: IContextualMenuItem[] = [\n    {\n      iconProps: { iconName: \"Edit\" },\n      key: \"edit\",\n      onClick: editClick,\n      text: \"Edit\",\n    },\n    ...(item.subject.completed ? uncompleteContextItems : completeContextItems),\n    {\n      iconProps: { iconName: \"Delete\" },\n      key: \"delete\",\n      onClick: deleteSubjectOnClick,\n      text: \"Delete this\",\n    },\n  ];\n\n  return (\n    <ContextualMenu\n      items={contextItems}\n      target={ev.target as HTMLElement}\n      directionalHint={DirectionalHint.bottomCenter}\n      isBeakVisible={false}\n      onDismiss={onDismiss}\n    />\n  );\n}\n","import React, { useCallback, useRef, useEffect, useState } from \"react\";\nimport {\n  IColumn,\n  DetailsList,\n  SelectionMode,\n  mergeStyleSets,\n  IDetailsList,\n  IconButton,\n  getTheme,\n  Modal,\n} from \"office-ui-fabric-react\";\nimport { Subject, GetItemsOptions, Item } from \"../../model/Subject\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../../Reducer\";\nimport { APP_COMMAND_BAR_HEIGHT } from \"../../../AppCommandBar/Common\";\nimport { APPBAR_HEIGHT } from \"../../../Common\";\nimport { SortItemsOptions, SortFieldKey } from \"../../../Order\";\nimport { gotoSubject } from \"../../Routing\";\nimport { RouteComponentProps, withRouter, Link } from \"react-router-dom\";\nimport { setFieldsArray } from \"../../model/SetFieldsArray\";\nimport { setFieldsDesc } from \"../../model/SetFieldsDesc\";\nimport { getDiffIndex } from \"../View\";\nimport SubjectComponent from \"../Subject\";\nimport ListViewContextMenu, {\n  ListViewContextMenuProps,\n} from \"./ListViewContextMenu\";\nimport { useSubjectView } from \"../SubjectView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  detailsList: {\n    height: `calc(100vh - ${APPBAR_HEIGHT}px - ${APP_COMMAND_BAR_HEIGHT}px)`,\n  },\n  rowButton: {\n    selectors: {\n      \"&:active\": {\n        filter: \"brightness(80%)\",\n        outline: \"none\",\n      },\n      \"&:hover\": {\n        filter: \"brightness(90%)\",\n        outline: \"none\",\n      },\n    },\n  },\n  rowButtonWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  subjectWrapper: {\n    backgroundColor: theme.palette.white,\n    border: \"1px solid \" + theme.palette.neutralTertiary,\n    borderRadius: 4,\n  },\n});\n\ninterface ListViewProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n}\n\nfunction ListView({\n  history,\n  options,\n  sortOptions,\n}: ListViewProps & RouteComponentProps): JSX.Element {\n  const parentId = options ? options.parentId : undefined;\n  const { subjects } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const {\n    items,\n    componentOrder,\n    currentOrder,\n    setCurrentOrder,\n    reorderParams,\n    sortFields,\n  } = useSubjectView({ options, sortOptions });\n\n  const dispatchSetFieldsDesc = useCallback(\n    (e?: any, column?: IColumn): void => {\n      if (column!.key !== \"openButton\") {\n        dispatch(\n          setFieldsDesc(\n            column!.key,\n            !column!.isSortedDescending,\n            reorderParams,\n          ),\n        );\n      }\n    },\n    [dispatch, reorderParams],\n  );\n\n  // The Subject shown in the modal\n  const [modalItem, setModalItem] = useState<Item | null>(null);\n  const dismissModal = useCallback((): void => {\n    setModalItem(null);\n  }, []);\n  const openModal = useCallback((item: Item): void => {\n    setModalItem(item);\n  }, []);\n\n  if (modalItem && !(modalItem.id in subjects.dict)) {\n    setModalItem(null);\n  }\n\n  // Update modalItem\n  useEffect((): void => {\n    if (modalItem) {\n      if (modalItem.id in subjects.dict) {\n        const subject = subjects.dict[modalItem.id];\n        if (subject !== modalItem.subject) {\n          setModalItem({ ...modalItem, subject });\n        }\n      } else {\n        setModalItem(null);\n      }\n    }\n  }, [subjects.dict, modalItem]);\n\n  //#region Render\n  const renderSubjectString = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string =>\n      item.subject[column!.key as keyof Subject] as string,\n    [],\n  );\n\n  const renderChildren = useCallback(\n    (item: Item): string => item.subject.children.order.length.toLocaleString(),\n    [],\n  );\n\n  const renderDate = useCallback(\n    (item: Item, _index?: number, column?: IColumn): string => {\n      const date = item.subject[column!.key as keyof Subject] as Date;\n      return date ? date.toLocaleString() : \"\";\n    },\n    [],\n  );\n\n  const renderButtons = useCallback(\n    (item: Item): JSX.Element => {\n      const openLabel = \"Open \" + item.subject.name;\n      const editLabel = \"Edit \" + item.subject.name;\n      return (\n        <div className={styles.rowButtonWrapper}>\n          <IconButton\n            onClick={(): void => openModal(item)}\n            styles={{ root: { width: \"\" } }}\n            className={styles.rowButton}\n            iconProps={{ iconName: \"Edit\" }}\n            title={editLabel}\n            ariaLabel={editLabel}\n          />\n          <Link to={gotoSubject(\"list\", item.id)}>\n            <IconButton\n              styles={{ root: { width: \"\" } }}\n              className={styles.rowButton}\n              iconProps={{ iconName: \"OpenFile\" }}\n              title={openLabel}\n              ariaLabel={openLabel}\n            />\n          </Link>\n        </div>\n      );\n    },\n    [openModal],\n  );\n  //#endregion\n\n  const onItemInvoked = useCallback(\n    (item: Item): void => {\n      history.push(gotoSubject(\"list\", item.id));\n    },\n    [history],\n  );\n\n  const columnsDict: Partial<{ [key in SortFieldKey]: IColumn }> = {\n    children: {\n      isResizable: true,\n      key: \"children\",\n      minWidth: 100,\n      name: \"# Children\",\n      onRender: renderChildren,\n    },\n    completed: {\n      isResizable: true,\n      key: \"completed\",\n      minWidth: 150,\n      name: \"Completed\",\n      onRender: renderDate,\n    },\n    created: {\n      isResizable: true,\n      key: \"created\",\n      minWidth: 150,\n      name: \"Date created\",\n      onRender: renderDate,\n    },\n    description: {\n      isResizable: true,\n      key: \"description\",\n      minWidth: 100,\n      name: \"Description\",\n      onRender: renderSubjectString,\n    },\n    dueDate: {\n      isResizable: true,\n      key: \"dueDate\",\n      minWidth: 150,\n      name: \"Due date\",\n      onRender: renderDate,\n    },\n    name: {\n      isResizable: true,\n      key: \"name\",\n      minWidth: 100,\n      name: \"Name\",\n      onRender: renderSubjectString,\n    },\n  };\n\n  const reorder = useCallback(\n    (draggedIndex: number, targetIndex: number): void => {\n      const dragged = sortFields[draggedIndex];\n      const fields = sortFields.filter((_, index) => index !== draggedIndex);\n      fields.splice(targetIndex, 0, dragged);\n      dispatch(setFieldsArray(fields, reorderParams));\n    },\n    [sortFields, dispatch, reorderParams],\n  );\n\n  const columns: IColumn[] = [];\n  for (const field of sortFields) {\n    const current = columnsDict[field.key];\n    if (current) {\n      current.isSorted = true;\n      current.isSortedDescending = field.desc;\n      columns.push(current);\n    }\n  }\n\n  columns.push({\n    key: \"openButton\",\n    minWidth: 80,\n    name: \"\",\n    onRender: renderButtons,\n  });\n\n  const listRef: React.MutableRefObject<IDetailsList | null> = useRef(null);\n\n  // Scrolls to newly added subjects\n  useEffect((): void => {\n    if (\n      listRef.current &&\n      currentOrder !== componentOrder &&\n      componentOrder.length > 0\n    ) {\n      // Gets the index to scroll to\n      const index = getDiffIndex(currentOrder, componentOrder);\n\n      // Scroll to the index if either:\n      // - the new index doesn't have a parent\n      // - the new index has a parent, which matches match.param.id\n      const s = subjects.dict[componentOrder[index]];\n      if (s.parents.size === 0 || s.parents.has(parentId!)) {\n        listRef.current.focusIndex(index);\n      }\n\n      setCurrentOrder(componentOrder);\n    }\n  }, [componentOrder, parentId, currentOrder, subjects, setCurrentOrder]);\n\n  const getKey = useCallback((item: Item): string => item.id, []);\n\n  const [\n    contextMenuProps,\n    updateContextMenuProps,\n  ] = useState<ListViewContextMenuProps | null>(null);\n  const dismissContextMenu = useCallback((): void => {\n    updateContextMenuProps(null);\n  }, []);\n  const onItemContextMenu = useCallback(\n    (item?: Item, index?: number, ev?: Event): boolean => {\n      if (item && ev) {\n        updateContextMenuProps({\n          ev,\n          item,\n          onDismiss: dismissContextMenu,\n          onEditClick: setModalItem,\n        });\n\n        // stops ev.preventDefault()\n        return false;\n      } else {\n        // runs ev.preventDefault()\n        return true;\n      }\n    },\n    [dismissContextMenu],\n  );\n\n  return (\n    <React.Fragment>\n      <DetailsList\n        getKey={getKey}\n        componentRef={listRef}\n        onColumnHeaderClick={dispatchSetFieldsDesc}\n        className={styles.detailsList}\n        columns={columns}\n        items={items}\n        isHeaderVisible={true}\n        selectionMode={SelectionMode.none}\n        onItemInvoked={onItemInvoked}\n        onItemContextMenu={onItemContextMenu}\n        columnReorderOptions={{\n          frozenColumnCountFromEnd: 1,\n          frozenColumnCountFromStart: 0,\n          handleColumnReorder: reorder,\n        }}\n      />\n      {contextMenuProps && <ListViewContextMenu {...contextMenuProps} />}\n      <Modal\n        isOpen={!!modalItem}\n        onDismiss={dismissModal}\n        styles={{\n          main: {\n            backgroundColor: \"none\",\n            border: \"1px solid transparent\",\n            borderRadius: 4,\n          },\n        }}\n      >\n        <div className={styles.subjectWrapper}>\n          {modalItem ? (\n            <SubjectComponent\n              id={modalItem.id}\n              subject={modalItem.subject}\n              showOpenButton={true}\n            />\n          ) : null}\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(ListView);\n","import React from \"react\";\nimport { getTheme, mergeStyleSets } from \"office-ui-fabric-react\";\nimport { MIN_COL_WIDTH } from \"./GridView\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  sidebar: {\n    border: \"1px solid \" + theme.palette.white,\n    borderRadius: 4,\n    boxShadow: \"0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    gridColumn: \"2\",\n    zIndex: 10,\n  },\n  wrapper: {\n    display: \"grid\",\n    gridTemplateColumns: `auto ${MIN_COL_WIDTH}px`,\n  },\n});\n\ninterface ViewWithSidebarProps {\n  viewComponent: JSX.Element;\n  sidebarComponent: JSX.Element;\n}\n\nexport default function ViewWithSidebar({\n  viewComponent,\n  sidebarComponent,\n}: ViewWithSidebarProps): JSX.Element {\n  return (\n    <div className={styles.wrapper}>\n      {viewComponent}\n      <div className={styles.sidebar}>{sidebarComponent}</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SubjectsRouteProps } from \"../Routing\";\nimport { getDisplay } from \"../../Display\";\nimport GridView, { MIN_COL_WIDTH } from \"./GridView\";\nimport { isUndefined } from \"lodash\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport SubjectComponent from \"./Subject\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport ListView from \"./ListView/ListView\";\nimport ViewWithSidebar from \"./ViewWithSidebar\";\nimport { GetItemsOptions, getItems, Item } from \"../model/Subject\";\nimport {\n  SortItemsOptions,\n  sortItems,\n  SortField,\n  SetSortParameters,\n} from \"../../Order\";\n\nexport interface SubjectViewHookProps {\n  options?: GetItemsOptions;\n  sortOptions?: SortItemsOptions;\n  order?: string[];\n}\n\ninterface UseSubjectView {\n  /**\n   * Array of the items to render.\n   */\n  items: Item[];\n\n  /**\n   * Array of the `id`s of the items to render.\n   */\n  componentOrder: string[];\n\n  /**\n   * Array of the `id`s of the items to render, stored in React state. This\n   * should be used for scrolling to newly added subjects.\n   */\n  currentOrder: string[];\n\n  /**\n   * Sets `currentOrder` in React state.\n   */\n  setCurrentOrder: React.Dispatch<React.SetStateAction<string[]>>;\n\n  /**\n   * Array of the sort fields.\n   */\n  sortFields: SortField[];\n\n  /**\n   * Arguments to be passed to reducers for reordering items.\n   */\n  reorderParams: SetSortParameters;\n}\n\nexport function useSubjectView({\n  options,\n  sortOptions,\n}: SubjectViewHookProps): UseSubjectView {\n  let parentId;\n  let viewId;\n  if (options) {\n    ({ parentId, viewId } = options);\n  }\n  const { subjects, views } = useSelector((state: State) => state);\n\n  let componentOrder: string[];\n  let sortFields: SortField[];\n  let reorderParams: SetSortParameters;\n\n  if (sortOptions) {\n    componentOrder = sortItems(subjects.dict, {\n      ...subjects.order,\n      options: sortOptions,\n    });\n    sortFields = sortOptions.fields;\n    reorderParams = { setSearchOptions: true };\n  } else if (parentId) {\n    componentOrder = subjects.dict[parentId].children.order;\n    sortFields = subjects.dict[parentId].children.options.fields;\n    reorderParams = { subjectId: parentId };\n  } else if (viewId) {\n    componentOrder = views.dict[viewId].children.order;\n    sortFields = views.dict[viewId].children.options.fields;\n    reorderParams = {};\n  } else {\n    componentOrder = subjects.order.order;\n    sortFields = subjects.order.options.fields;\n    reorderParams = {};\n  }\n  const [currentOrder, setOrder] = useState(componentOrder);\n  const items = getItems(subjects.dict, componentOrder, options);\n\n  return {\n    componentOrder,\n    currentOrder,\n    items,\n    reorderParams,\n    setCurrentOrder: setOrder,\n    sortFields,\n  };\n}\n\nexport default function SubjectView({\n  match,\n  location,\n}: RouteComponentProps<SubjectsRouteProps>): JSX.Element {\n  const { parentId: id } = match.params;\n  const display = getDisplay(location);\n\n  const windowSize = useWindowSize();\n  const { dict } = useSelector((state: State) => state.subjects);\n\n  if (!isUndefined(id) && !(id in dict)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (isUndefined(id)) {\n    if (display === \"list\") {\n      return <ListView />;\n    } else {\n      return <GridView />;\n    }\n  }\n\n  const parentSubject = <SubjectComponent subject={dict[id]} id={id} />;\n  if (windowSize.innerWidth > MIN_COL_WIDTH * 2) {\n    const options = { parentId: id };\n    return (\n      <ViewWithSidebar\n        viewComponent={\n          display === \"grid\" ? (\n            <GridView options={options} />\n          ) : (\n            <ListView options={options} />\n          )\n        }\n        sidebarComponent={parentSubject}\n      />\n    );\n  }\n\n  return parentSubject;\n}\n","import React, { useCallback } from \"react\";\nimport { SearchRouteProps, getSearchMatch } from \"./Routing\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Item, Subject } from \"../subject/model/Subject\";\nimport ListView from \"../subject/components/ListView/ListView\";\nimport GridView from \"../subject/components/GridView\";\nimport { Text } from \"office-ui-fabric-react\";\nimport { options } from \"./SearchBar\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../Reducer\";\nimport { getDisplay } from \"../Display\";\n\nconst searchParams = new Set(\n  options.reduce(\n    (acc, curr): string[] => {\n      acc.push(String(curr.key).toLowerCase());\n      return acc;\n    },\n    [] as string[],\n  ),\n);\n\nexport default function SearchResults({\n  match,\n  location,\n}: RouteComponentProps<SearchRouteProps>): JSX.Element {\n  const display = getDisplay(location);\n  const [param, query] = getSearchMatch(match);\n  const { dict, searchSortOptions } = useSelector(\n    (state: State) => state.subjects,\n  );\n\n  const condition = useCallback(\n    (i: Item): boolean => {\n      const subject = i.subject;\n      switch (param) {\n        case \"childname\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.name.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        case \"childdescription\": {\n          for (const childId of subject.children.order) {\n            const child = dict[childId];\n            if (child.description.toLowerCase().includes(query)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        default: {\n          return (i.subject[param as keyof Subject] as string)\n            .toLowerCase()\n            .includes(query);\n        }\n      }\n    },\n    [dict, param, query],\n  );\n\n  if (!searchParams.has(param)) {\n    return <Text>Sorry that search parameter was invalid.</Text>;\n  }\n\n  if (display === \"list\") {\n    return <ListView options={{ condition }} sortOptions={searchSortOptions} />;\n  } else {\n    return <GridView options={{ condition }} sortOptions={searchSortOptions} />;\n  }\n}\n","import { State } from \"../../Reducer\";\nimport { getInitialOrder } from \"../../Order\";\nimport { ViewBaseAction } from \"./View\";\nimport { v4 } from \"uuid\";\n\nexport const CREATE_VIEW = \"CREATE_VIEW\";\n\nexport interface CreateViewAction extends ViewBaseAction {}\n\nexport const createView = (): CreateViewAction => ({\n  type: CREATE_VIEW,\n  viewId: v4(),\n});\n\nconst getUntitledName = (orderSet: Set<string>): string => {\n  let i = 1;\n  let name = `Untitled${i}`;\n  while (orderSet.has(name)) {\n    i++;\n    name = `Untitled${i}`;\n  }\n  return name;\n};\n\nexport const createViewReducer = (\n  state: State,\n  { viewId }: CreateViewAction,\n): void => {\n  const name = getUntitledName(state.views.orderSet);\n  state.views.dict[viewId] = { children: getInitialOrder(), name };\n  state.views.order.push(viewId);\n  state.views.orderSet.add(name);\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Nav,\n  getTheme,\n  mergeStyleSets,\n  INavLinkGroup,\n  INavLink,\n} from \"office-ui-fabric-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createView } from \"../model/Create\";\nimport { State } from \"../../Reducer\";\nimport { RouteComponentProps } from \"react-router\";\nimport { ViewRouteProps, gotoView } from \"../Routing\";\nimport { SubjectsRouteProps, subjectBase } from \"../../subject/Routing\";\nimport { Paths } from \"../../Routing\";\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  nav: {\n    background: theme.palette.white,\n    borderRight: \"1px solid \" + theme.palette.neutralQuaternary,\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    overflowY: \"auto\",\n    width: 208,\n  },\n});\n\nexport default function ViewsNav({\n  match,\n  history,\n}: RouteComponentProps<SubjectsRouteProps & ViewRouteProps>): JSX.Element {\n  const dispatch = useDispatch();\n  const [gotoNewView, setGotoNewView] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const { views } = useSelector((state: State) => state);\n\n  const allSubjects = \"allSubjects\";\n\n  useEffect((): void => {\n    if (match.url === subjectBase) {\n      setSelectedKey(allSubjects);\n    } else if (match.path === Paths.view) {\n      const { viewId } = match.params;\n      if (!viewId || !(viewId in views.dict)) {\n        history.push(Paths.base);\n      } else {\n        setSelectedKey(viewId);\n      }\n    } else {\n      setSelectedKey(\"\");\n    }\n  }, [match, history, views.dict]);\n\n  const dispatchCreateView = useCallback((): void => {\n    dispatch(createView());\n    setGotoNewView(true);\n  }, [dispatch]);\n\n  useEffect((): void => {\n    if (gotoNewView) {\n      setGotoNewView(false);\n      history.push(gotoView(views.order[views.order.length - 1]));\n    }\n  }, [gotoNewView, history, views]);\n\n  const viewGroup: INavLink = {\n    isExpanded: true,\n    key: \"views\",\n    links: [],\n    name: \"Views\",\n    url: \"\",\n  };\n\n  for (const viewId of views.order) {\n    const v = views.dict[viewId];\n    viewGroup.links!.push({\n      key: viewId,\n      name: v.name,\n      url: \"#\" + gotoView(viewId),\n    });\n  }\n\n  const groups: INavLinkGroup[] = [\n    {\n      links: [\n        {\n          key: allSubjects,\n          name: \"All subjects\",\n          url: \"#\" + subjectBase,\n        },\n        viewGroup,\n        {\n          icon: \"Add\",\n          key: \"createView\",\n          name: \"Create view\",\n          onClick: dispatchCreateView,\n          url: \"\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Nav\n      selectedKey={selectedKey}\n      expandButtonAriaLabel=\"Expand or collapse\"\n      className={styles.nav}\n      groups={groups}\n    />\n  );\n}\n","import { ViewBaseAction } from \"./View\";\nimport { State } from \"../../Reducer\";\n\nexport const UPDATE_VIEW_NAME = \"UPDATE_VIEW_NAME\";\n\nexport interface UpdateViewNameAction extends ViewBaseAction {\n  name: string;\n}\n\nexport const updateViewName = (\n  viewId: string,\n  name: string,\n): UpdateViewNameAction => ({\n  name,\n  type: UPDATE_VIEW_NAME,\n  viewId,\n});\n\nexport const updateViewNameReducer = (\n  { views }: State,\n  { name, viewId }: UpdateViewNameAction,\n): void => {\n  if (!views.orderSet.has(name)) {\n    const view = views.dict[viewId];\n    views.orderSet.delete(view.name);\n    view.name = name;\n  }\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\nimport { ViewRouteProps } from \"../Routing\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { State } from \"../../Reducer\";\nimport { isUndefined } from \"lodash\";\nimport GridView from \"../../subject/components/GridView\";\nimport ListView from \"../../subject/components/ListView/ListView\";\nimport { getDisplay } from \"../../Display\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport TitleInput from \"../../TitleInput\";\nimport { Paths } from \"../../Routing\";\nimport { updateViewName } from \"../model/Name\";\nimport { Location } from \"history\";\n\nconst styles = mergeStyleSets({\n  title: {\n    padding: 10,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n\ninterface ViewProps {\n  location: Location;\n  viewId: string;\n}\n\nfunction ViewComponent({ location, viewId }: ViewProps): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const dispatch = useDispatch();\n\n  const view =\n    viewId && viewId in views.dict ? views.dict[viewId] : { name: \"\" };\n\n  const [localName, setLocalName] = useState(view.name);\n  const updateName = useCallback((): void => {\n    if (viewId) {\n      dispatch(updateViewName(viewId, localName));\n    }\n  }, [viewId, dispatch, localName]);\n  useEffect((): void => {\n    setLocalName(view.name);\n  }, [view.name]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\n      setLocalName(e.target.value);\n    },\n    [],\n  );\n\n  const display = getDisplay(location);\n\n  const options = { viewId };\n  const viewComponent =\n    display === \"grid\" ? (\n      <GridView options={options} />\n    ) : (\n      <ListView options={options} />\n    );\n\n  return (\n    <div className={styles.wrapper}>\n      <TitleInput\n        className={styles.title}\n        value={localName}\n        onChange={onChange}\n        onBlur={updateName}\n      />\n      {viewComponent}\n    </div>\n  );\n}\n\nexport default function View({\n  match,\n  location,\n}: RouteComponentProps<ViewRouteProps>): JSX.Element {\n  const { views } = useSelector((state: State) => state);\n  const { viewId } = match.params;\n\n  if (isUndefined(viewId) || !(viewId in views.dict)) {\n    return <Redirect to={Paths.base} />;\n  }\n  return <ViewComponent viewId={viewId} location={location} />;\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport AppBar from \"./AppBar\";\nimport AppCommandBar from \"./AppCommandBar/AppCommandBar\";\nimport SubjectView from \"./subject/components/SubjectView\";\nimport { AllPaths, Paths } from \"./Routing\";\nimport SearchResults from \"./Search/SearchResults\";\nimport { mergeStyleSets } from \"@uifabric/styling\";\nimport ViewsNav from \"./views/components/ViewsNav\";\nimport { subjectBase } from \"./subject/Routing\";\nimport View from \"./views/components/View\";\n\nconst styles = mergeStyleSets({\n  main: {\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <div>\n      <Route path={AllPaths} component={AppBar} />\n      <Route path={AllPaths} component={AppCommandBar} />\n      <div className={styles.wrapper}>\n        <Route path={AllPaths} component={ViewsNav} />\n        <div className={styles.main}>\n          <Switch>\n            <Route path={Paths.subject} component={SubjectView} />\n            <Route path={Paths.search} component={SearchResults} />\n            <Route path={Paths.view} component={View} />\n            <Redirect to={subjectBase} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import produce from \"immer\";\nimport { Action } from \"redux\";\nimport { SubjectState, SubjectTypes } from \"./model/Subject\";\nimport {\n  SET_SUBJECT_NAME,\n  setSubjectNameReducer,\n  SetSubjectNameAction,\n} from \"./model/Name\";\nimport {\n  SET_SUBJECT_DESCRIPTION,\n  setSubjectDescriptionReducer,\n  SetSubjectDescriptionAction,\n} from \"./model/Description\";\nimport {\n  COMPLETE_SUBJECT,\n  CompleteSubjectAction,\n  UNCOMPLETE_SUBJECT,\n  uncompleteSubjectReducer,\n  completeSubjectReducer,\n  UncompleteSubjectAction,\n} from \"./model/Completed\";\nimport {\n  DELETE_SUBJECT,\n  DeleteSubjectAction,\n  deleteSubjectReducer,\n} from \"./model/Delete\";\nimport {\n  SET_SUBJECT_DUE_DATE,\n  SetSubjectDueDateAction,\n  setSubjectDueDateReducer,\n} from \"./model/Date\";\nimport {\n  CREATE_SUBJECT,\n  createSubjectReducer,\n  CreateSubjectAction,\n} from \"./model/Create\";\nimport {\n  REMOVE_CHILD_SUBJECT,\n  removeChildReducer,\n  RemoveChildAction,\n} from \"./model/RemoveChild\";\nimport {\n  APPEND_CHILD_SUBJECT,\n  AppendChildAction,\n  appendChildReducer,\n} from \"./model/AppendChild\";\nimport {\n  getInitialOrder,\n  sortItems,\n  getInitialSortItemsOptions,\n} from \"../Order\";\nimport {\n  SET_FIELDS_ARRAY,\n  SetFieldsArrayAction,\n  setFieldsArrayReducer,\n} from \"./model/SetFieldsArray\";\nimport {\n  SET_FIELDS_DESC,\n  setFieldsDescReducer,\n  SetFieldsDescAction,\n} from \"./model/SetFieldsDesc\";\nimport {\n  SET_SEPARATE_COMPLETE,\n  setSeparateCompleteReducer,\n  SetSeparateCompleteAction,\n} from \"./model/SetSeparateComplete\";\nimport { isUndefined } from \"lodash\";\nimport { State } from \"../Reducer\";\n\nexport const initialSubjectState = (): SubjectState => ({\n  dict: {},\n  order: getInitialOrder(),\n  searchSortOptions: getInitialSortItemsOptions(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst subjectReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      const { subjects } = draftState;\n      switch (action.type) {\n        case SET_SUBJECT_NAME:\n          setSubjectNameReducer(subjects, action as SetSubjectNameAction);\n          break;\n        case SET_SUBJECT_DESCRIPTION:\n          setSubjectDescriptionReducer(\n            subjects,\n            action as SetSubjectDescriptionAction,\n          );\n          break;\n        case COMPLETE_SUBJECT:\n          completeSubjectReducer(subjects, action as CompleteSubjectAction);\n          break;\n        case UNCOMPLETE_SUBJECT:\n          uncompleteSubjectReducer(subjects, action as UncompleteSubjectAction);\n          break;\n        case DELETE_SUBJECT:\n          deleteSubjectReducer(subjects, action as DeleteSubjectAction);\n          break;\n        case SET_SUBJECT_DUE_DATE:\n          setSubjectDueDateReducer(subjects, action as SetSubjectDueDateAction);\n          break;\n        case CREATE_SUBJECT:\n          createSubjectReducer(draftState, action as CreateSubjectAction<\n            SubjectTypes\n          >);\n          break;\n        case REMOVE_CHILD_SUBJECT:\n          removeChildReducer(subjects, action as RemoveChildAction);\n          break;\n        case APPEND_CHILD_SUBJECT:\n          appendChildReducer(subjects, action as AppendChildAction);\n          break;\n        case SET_FIELDS_ARRAY:\n          setFieldsArrayReducer(subjects, action as SetFieldsArrayAction);\n          break;\n        case SET_FIELDS_DESC:\n          setFieldsDescReducer(subjects, action as SetFieldsDescAction);\n          break;\n        case SET_SEPARATE_COMPLETE:\n          setSeparateCompleteReducer(\n            subjects,\n            action as SetSeparateCompleteAction,\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Prevents redux-persist from being overridden during hydration.\n      if (subjects.order.order.length > 0) {\n        subjects.order.order = sortItems(subjects.dict, subjects.order);\n      }\n      // Adds new `searchSortOptions` if it wasn't already in the state\n      if (isUndefined(subjects.searchSortOptions)) {\n        subjects.searchSortOptions = getInitialSortItemsOptions();\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default subjectReducer;\n","import { ViewState } from \"./model/View\";\nimport { Action } from \"redux\";\nimport produce from \"immer\";\nimport { State } from \"../Reducer\";\nimport {\n  createViewReducer,\n  CREATE_VIEW,\n  CreateViewAction,\n} from \"./model/Create\";\nimport {\n  UPDATE_VIEW_NAME,\n  updateViewNameReducer,\n  UpdateViewNameAction,\n} from \"./model/Name\";\nimport {\n  AppendChildViewAction,\n  APPEND_CHILD_VIEW,\n  appendChildViewReducer,\n} from \"./model/AppendChild\";\n\nexport const initialViewState = (): ViewState => ({\n  dict: {},\n  order: [],\n  orderSet: new Set(),\n});\n\n// TODO: check if https://github.com/rt2zz/redux-persist/pull/915 is\n// distributed. The spread is used since for some reason the NPM package doesn't\n// contain the spread from the pull request.\nconst viewReducer = (state: State, action: Action): State => ({\n  ...produce(\n    state,\n    (draftState): State => {\n      // Reinitializes views state, if redux-persist removes it\n      if (!state.views.dict) {\n        state.views = initialViewState();\n      }\n\n      switch (action.type) {\n        case CREATE_VIEW:\n          createViewReducer(draftState, action as CreateViewAction);\n          break;\n        case UPDATE_VIEW_NAME:\n          updateViewNameReducer(draftState, action as UpdateViewNameAction);\n          break;\n        case APPEND_CHILD_VIEW:\n          appendChildViewReducer(draftState, action as AppendChildViewAction);\n          break;\n        default:\n          break;\n      }\n      return draftState;\n    },\n  ),\n});\n\nexport default viewReducer;\n","import reduceReducers from \"reduce-reducers\";\nimport subjectReducer, { initialSubjectState } from \"./subject/Reducer\";\nimport { SubjectState } from \"./subject/model/Subject\";\nimport { ViewState } from \"./views/model/View\";\nimport viewReducer, { initialViewState } from \"./views/Reducer\";\n\nexport interface State {\n  subjects: SubjectState;\n  views: ViewState;\n}\n\nconst getInitialState = (): State => ({\n  subjects: initialSubjectState(),\n  views: initialViewState(),\n});\n\nconst initialReducer = (state: State = getInitialState()): State => {\n  return state;\n};\n\nexport default reduceReducers(initialReducer, subjectReducer, viewReducer);\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { Subject, SubjectState, SubjectDictState } from \"./Subject\";\n\ninterface PersistSubject\n  extends Omit<Subject, \"created\" | \"completed\" | \"dueDate\" | \"parents\"> {\n  created: Date | string;\n  completed?: Date | string;\n  dueDate?: Date | string;\n  parents: string[];\n}\n\ninterface PersistSubjectDictState {\n  [key: string]: PersistSubject;\n}\n\ninterface PersistSubjectState extends Omit<SubjectState, \"dict\"> {\n  dict: PersistSubjectDictState;\n}\n\nconst transformSubjects = createTransform<SubjectState, PersistSubjectState>(\n  ({ dict: inboundSubjects, ...everythingElse }, _key) => {\n    const dict: PersistSubjectDictState = {};\n    for (const [key, s] of Object.entries(inboundSubjects)) {\n      dict[key] = { ...s, parents: [...s.parents] };\n    }\n    return { dict, ...everythingElse };\n  },\n  ({ dict: outboundSubjects, ...everythingElse }, _key) => {\n    const dict: SubjectDictState = {};\n    for (const [\n      key,\n      { created, completed, dueDate, parents, ...s },\n    ] of Object.entries(outboundSubjects)) {\n      const completedDate = completed ? new Date(completed) : undefined;\n      const dueDateDate = dueDate ? new Date(dueDate) : undefined;\n      dict[key] = {\n        ...s,\n        completed: completedDate,\n        created: new Date(created),\n        dueDate: dueDateDate,\n        parents: new Set(parents),\n      };\n    }\n    return { dict, ...everythingElse };\n  },\n  {\n    whitelist: [\"subjects\"],\n  },\n);\n\nexport default transformSubjects;\n","/* eslint @typescript-eslint/explicit-function-return-type: \"off\" */\n\nimport { createTransform } from \"redux-persist\";\nimport { ViewState } from \"./View\";\n\ninterface PersistSubjectState extends Omit<ViewState, \"orderSet\"> {}\n\nconst transformViews = createTransform<ViewState, PersistSubjectState>(\n  ({ orderSet, ...everythingElse }, _key) => {\n    return everythingElse;\n  },\n  (state, _key) => {\n    return { ...state, orderSet: new Set(state.order) };\n  },\n  {\n    whitelist: [\"views\"],\n  },\n);\n\nexport default transformViews;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./ServiceWorker\";\nimport { createStore, Reducer } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { HashRouter } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./Reducer\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport transformSubjects from \"./subject/model/Transform\";\nimport transformViews from \"./views/model/Transform\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [transformSubjects, transformViews],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\n\ninitializeIcons();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}